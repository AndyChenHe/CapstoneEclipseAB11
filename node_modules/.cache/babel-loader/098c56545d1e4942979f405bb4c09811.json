{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/mydoc_25/src/App.js\";\nimport React from \"react\";\nimport \"./css/login.css\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthRoute from \"./util/AuthRoute\";\nimport { useState, useEffect } from 'react'; // material ui theme\n\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeFile from \"./util/theme\"; //redux\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { SET_AUTHENTICATED } from \"./redux/types\";\nimport { logoutUser, getUserData } from \"./redux/actions/userActions\"; // pages\n\nimport Home from \"./pages/Home\";\nimport login from \"./pages/Login\";\nimport signup from \"./pages/Signup\";\nimport covid from \"./pages/Covid\";\nimport Results from \"./pages/Results\";\nimport Docprofile from \"./pages/DocProfile\";\nimport Hospprofile from \"./pages/HospProfile\"; // use themeFile from theme.js\n\nconst theme = createMuiTheme(themeFile); // set up api\n\naxios.defaults.baseURL = \"https://us-central1-mydoc-f3cd9.cloudfunctions.net/api/\"; // backend stuff\n\nconst token = localStorage.FBIdToken;\nstore.dispatch(getUserData());\n\nif (token) {\n  const decodedToken = jwtDecode(token); // log user out when expire\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser());\n    window.location.href = \"/login\";\n  } else {\n    store.dispatch({\n      type: SET_AUTHENTICATED\n    });\n    axios.defaults.headers.common[\"Authorization\"] = token; //deal with page refresh\n\n    store.dispatch(getUserData()); // get user data if logged in\n  }\n} // set up material ui theme\n// route to home/login/sign up\n\n\nfunction App() {\n  const [docInfo, setDocInfo] = useState([]);\n  const [hospitalInfo, sethospitalInfo] = useState([]);\n  const [docInfoCopy, setDocInfoCopy] = useState([]);\n  const [hospitalInfoCopy, sethospitalInfoCopy] = useState([]);\n  const [searchMethod, setSearchMethod] = React.useState(\"Specialty\");\n  const [keywords, setKeywords] = React.useState('');\n  const [location, setLocation] = React.useState('');\n  const [searchBegin, setSearchBegin] = React.useState(false);\n  const [hosType, setHosType] = React.useState('both');\n  const [languageList, setLanguageList] = React.useState([]);\n  const [yearOfPractice, setyearOfPractice] = React.useState([1000, -1]);\n  const [filterlocation, setFilterlocation] = React.useState([]);\n  const [filterBegin, setFilterBegin] = React.useState(false);\n  const [targetDoc, setTargetDoc] = React.useState(null);\n  const [targetHos, setTargetHos] = React.useState(null);\n\n  const getLocationValue = value => {\n    setLocation(value);\n  };\n\n  const getKeyWords = value => {\n    setKeywords(value);\n  };\n\n  const getSearchMethod = value => {\n    setSearchMethod(value);\n    setKeywords('');\n  };\n\n  const startSearch = () => {\n    setSearchBegin(true);\n  };\n\n  const filterHosType = type => {\n    setHosType(type);\n    setFilterBegin(true);\n  };\n\n  const filterLanguageList = lang => {\n    setLanguageList(lang);\n    setFilterBegin(true);\n  };\n\n  const filterYear = range => {\n    setyearOfPractice(range);\n    setFilterBegin(true);\n  };\n\n  const updateTargetDoc = doctor => {\n    setTargetDoc(doctor);\n  };\n\n  const updateTargetHos = hospital => {\n    setTargetHos(hospital);\n  };\n\n  const filterFunction = () => {\n    let newDocList = [];\n    let newHospitalList = [];\n    docInfoCopy.forEach(doctor => {\n      let validateType = doctor['Type'].toLowerCase() == hosType.toLowerCase() || hosType.toLowerCase() == 'both';\n      let validateLanguage = languageList.every(element => doctor['Language'].indexOf(element) > -1) || languageList == [];\n      let validateYear = yearOfPractice[0] <= doctor['YearsofPractice'] && yearOfPractice[1] >= doctor['YearsofPractice'] || yearOfPractice[0] == 1000;\n\n      if (validateType && validateLanguage && validateYear) {\n        newDocList.push(doctor);\n      }\n    });\n    hospitalInfoCopy.forEach(hos => {\n      let validateType = hos['HospitalType'].toLowerCase() == hosType.toLowerCase() || hosType.toLowerCase() == 'both';\n      let validateLanguage = languageList.every(element => hos['Language'].indexOf(element) > -1) || languageList == [];\n\n      if (validateType && validateLanguage) {\n        newHospitalList.push(hos);\n      }\n    });\n    setDocInfo(newDocList);\n    sethospitalInfo(newHospitalList);\n  };\n\n  useEffect(() => {\n    if (filterBegin) {\n      filterFunction();\n      return setFilterBegin(false);\n    }\n  });\n\n  const doMainSearch = pageProps => {\n    if (searchBegin) {\n      let rootData = {\n        \"Specialty\": [{\n          \"Name\": \"Gastroenterology\",\n          \"Condition\": [\"Fever\", \"Headache\"],\n          \"Hospital\": [{\n            \"HospitalName\": \"Pantai Hospital Kuala Lumpur\",\n            \"HospitalType\": \"Private\",\n            \"Language\": [\"English\", \"Mandarin\", \"Malay\", \"Hokkien\", \"Cantonese\"],\n            \"likes\": 10000000,\n            \"RelateSpecialty\": \"Gastroenterology\",\n            \"Web\": \"https://www.pantai.com.my/kuala-lumpur\",\n            \"Hours\": \"24 hours\",\n            \"Address\": \"8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n            \"Zip\": \"92310\",\n            \"Phone\": \"+603-2296 0888\",\n            \"Tags\": [{\n              \"TagName\": \"Customer Service\",\n              \"Number\": 2\n            }, {\n              \"TagName\": \"Facility\",\n              \"Number\": 3\n            }, {\n              \"TagName\": \"Friendly\",\n              \"Number\": 5\n            }],\n            \"Insurance\": [\"Asia Assistance Network\", \"AIA\", \"AIA - Employee Benefit\", \"AIA Datalink\"],\n            \"TopSpecialty\": [\"Gastroenterology\", \"AAAA\", \"Surgery\", \"Family Medicine\"],\n            \"Doctors\": [{\n              \"DocName\": \"Alex Leow\",\n              \"Specialty\": \"Gastroenterology\",\n              \"Hospital\": \"Pantai Hospital Kuala Lumpur\",\n              \"YearsofPractice\": 7,\n              \"Address\": \"No. A103a - Endoscopy Centre, 1st Floor, Block A, 8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n              \"Phone\": \" +603-2296 0763 Ext. 1111\",\n              \"Tags\": [{\n                \"TagName\": \"Bedside Manner\",\n                \"Number\": 1\n              }, {\n                \"TagName\": \"Enthusiastic\",\n                \"Number\": 10\n              }, {\n                \"TagName\": \"Friendly\",\n                \"Number\": 5\n              }],\n              \"Appointment\": {\n                \"Onsite\": {\n                  \"Content\": \"Onsite\",\n                  \"Status\": \"Active\"\n                },\n                \"PhoneCall\": {\n                  \"Content\": \"206-123-4567\",\n                  \"Status\": \"\"\n                },\n                \"Online\": {\n                  \"Content\": \"https://www.pantai.com.my/kuala-lumpur\",\n                  \"Status\": \"Active\"\n                },\n                \"Email\": {\n                  \"Content\": \"chenh57@uw.edu\",\n                  \"Status\": \"Active\"\n                }\n              },\n              \"Qualification\": \"MMed (Mal), MB. BCh. BAO. (Hons) LRCPI & LRCSI (Ire), B. Biomed Sci. (Hons) (UM)\",\n              \"Language\": [\"English\", \"Mandarin\", \"Malay\", \"Hokkien\", \"Cantonese\"],\n              \"Type\": \"Private\",\n              \"Procedures\": [\"Colonoscopy\", \"Gastroscopy\", \"Endoscopic Retrograde Cholangiopancreatography (ERCP)\", \"Fibroscan\", \"Liver Biopsy\", \"Endoscopic Ultrasound (EUS)\", \"Small Bowel Enteroscopy\", \"Capsule Endoscopy\"],\n              \"Conditions\": [\"Helicobacter Pylori Infection\", \"Dyspepsia\", \"Gastro Esophageal Reflux Disease\", \"Fever\"],\n              \"NumberOfLikes\": 12315\n            }, {\n              \"DocName\": \"Alex Tan\",\n              \"Specialty\": \"Gastroenterology\",\n              \"Hospital\": \"Pantai Hospital Kuala Lumpur\",\n              \"YearsofPractice\": 7,\n              \"Address\": \"No. A103a - Endoscopy Centre, 1st Floor, Block A, 8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n              \"Phone\": \" +603-123-2131\",\n              \"Tags\": [{\n                \"TagName\": \"Bedside Manner\",\n                \"Number\": 1\n              }, {\n                \"TagName\": \"Friendly\",\n                \"Number\": 5\n              }],\n              \"Appointment\": {\n                \"Onsite\": {\n                  \"Status\": \"Active\"\n                },\n                \"PhoneCall\": {\n                  \"Content\": \"206-123-4567\",\n                  \"Status\": \"Active\"\n                },\n                \"Online\": {\n                  \"Content\": \"https://www.pantai.com.my/kuala-lumpur\",\n                  \"Status\": \"Active\"\n                },\n                \"Email\": {\n                  \"Content\": \"chenh57@uw.edu\",\n                  \"Status\": \"Active\"\n                }\n              },\n              \"Qualification\": \"MMed (Mal), MB. BCh. BAO. (Hons) LRCPI & LRCSI (Ire), B. Biomed Sci. (Hons) (UM)\",\n              \"Language\": [\"English\", \"Cantonese\"],\n              \"Type\": \"Private\",\n              \"Procedures\": [\"Colonoscopy\", \"Gastroscopy\", \"Endoscopic Retrograde Cholangiopancreatography (ERCP)\", \"Fibroscan\", \"Liver Biopsy\", \"Endoscopic Ultrasound (EUS)\", \"Small Bowel Enteroscopy\", \"Capsule Endoscopy\"],\n              \"Conditions\": [\"Helicobacter Pylori Infection\", \"Dyspepsia\", \"Gastro Esophageal Reflux Disease\"],\n              \"NumberOfLikes\": 2333\n            }]\n          }]\n        }]\n      };\n      let newDocData = [];\n      let newHosData = [];\n      let userKeyWords = keywords.replace(\" \", \"\").toLowerCase();\n      let locationInfo = location.replace(\" \", \"\");\n\n      if (searchMethod == 'Specialty') {\n        if (locationInfo == '') {\n          rootData[\"Specialty\"].forEach(specialtyItem => {\n            let specialtyName = specialtyItem['Name'];\n            specialtyName = specialtyName.replace(\" \", \"\").toLowerCase();\n\n            if (userKeyWords == specialtyName) {\n              specialtyItem['Hospital'].forEach(hospital => {\n                newHosData.push(hospital);\n                newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n              });\n            }\n          });\n        } else {\n          rootData[\"Specialty\"].forEach(specialtyItem => {\n            let specialtyName = specialtyItem['Name'];\n            specialtyName = specialtyName.replace(\" \", \"\").toLowerCase();\n            specialtyItem['Hospital'].forEach(hospital => {\n              let locationZip = hospital['Zip'];\n\n              if (locationZip == locationInfo && userKeyWords == specialtyName) {\n                newHosData.push(hospital);\n                newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n              }\n            });\n          });\n        }\n      } else if (searchMethod == 'Doctor') {\n        if (locationInfo == '') {\n          rootData[\"Specialty\"].forEach(specialtyItem => {\n            let foundDoc = 0;\n            specialtyItem['Hospital'].forEach(hospital => {\n              let docName = hospital['Doctors'];\n              docName.forEach(doctor => {\n                let docName = doctor['DocName'].replace(\" \", \"\").toLowerCase();\n\n                if (docName == userKeyWords) {\n                  newDocData.push(doctor);\n\n                  if (foundDoc == 0) {\n                    newHosData.push(hospital);\n                  }\n\n                  foundDoc++;\n                }\n              });\n            });\n          });\n        } else {\n          rootData[\"Specialty\"].forEach(specialtyItem => {\n            let foundDoc = 0;\n            specialtyItem['Hospital'].forEach(hospital => {\n              let locationZip = hospital['Zip'];\n              let docName = hospital['Doctors'];\n              docName.forEach(doctor => {\n                let docName = doctor['DocName'];\n\n                if (docName.replace(\" \", \"\").toLowerCase() == userKeyWords.toLowerCase() && locationZip == locationInfo) {\n                  newDocData.push(doctor);\n                  foundDoc++;\n                }\n\n                if (foundDoc == 1) {\n                  newHosData.push(hospital);\n                }\n              });\n            });\n          });\n        }\n      } else if (searchMethod == 'Hospital') {\n        if (locationInfo == '') {\n          rootData[\"Specialty\"].forEach(specialtyItem => {\n            let foundTarget = true;\n            let hosList = specialtyItem['Hospital'];\n            hosList.forEach(hospital => {\n              let hosName = hospital['HospitalName'];\n              hosName = hosName.replace(\" \", \"\").toLowerCase();\n\n              if (userKeyWords.toLowerCase() == hosName) {\n                if (foundTarget) {\n                  newHosData.push(hospital);\n                }\n\n                newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n                foundTarget = false;\n              }\n            });\n          });\n        } else {\n          rootData[\"Specialty\"].forEach(specialtyItem => {\n            let foundTarget = true;\n            let hosList = specialtyItem['Hospital'];\n            hosList.forEach(hospital => {\n              let hosName = hospital['HospitalName'];\n              let locationZip = hospital['Zip'];\n              hosName = hosName.replace(\" \", \"\").toLowerCase();\n\n              if (userKeyWords.toLowerCase() == hosName && locationZip == locationInfo) {\n                if (foundTarget) {\n                  newHosData.push(hospital);\n                }\n\n                newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n                foundTarget = false;\n              }\n            });\n          });\n        }\n      } else {\n        if (locationInfo == '') {\n          rootData[\"Specialty\"].forEach(specialtyItem => {\n            let condtionList = specialtyItem['Condition'];\n            condtionList = condtionList.map(function (item) {\n              return item.toLowerCase();\n            });\n\n            if (condtionList.includes(userKeyWords)) {\n              specialtyItem[\"Hospital\"].forEach(hospital => {\n                newHosData.push(hospital);\n                hospital['Doctors'].forEach(doctor => {\n                  let docCondition = doctor['Conditions'];\n                  docCondition = docCondition.map(function (item) {\n                    return item.toLowerCase();\n                  });\n\n                  if (docCondition.includes(userKeyWords)) {\n                    newDocData.push(doctor);\n                  }\n                });\n              });\n            }\n          });\n        } else {\n          rootData[\"Specialty\"].forEach(specialtyItem => {\n            let condtionList = specialtyItem['Condition'];\n            condtionList = condtionList.map(function (item) {\n              return item.toLowerCase();\n            });\n            specialtyItem[\"Hospital\"].forEach(hospital => {\n              let locationZip = hospital['Zip'];\n\n              if (locationZip == locationInfo && condtionList.includes(userKeyWords)) {\n                newHosData.push(hospital);\n                hospital['Doctors'].forEach(doctor => {\n                  let docCondition = doctor['Conditions'];\n                  docCondition = docCondition.map(function (item) {\n                    return item.toLowerCase();\n                  });\n\n                  if (docCondition.includes(userKeyWords)) {\n                    newDocData.push(doctor);\n                  }\n                });\n              }\n            });\n          });\n        }\n      }\n\n      sethospitalInfo(newHosData);\n      setDocInfo(newDocData);\n      sethospitalInfoCopy(newHosData);\n      setDocInfoCopy(newDocData);\n\n      if (pageProps.history != null) {\n        pageProps.history.push('/results');\n      }\n    }\n\n    return function resetSearchStatus() {\n      setSearchBegin(false);\n    };\n  };\n\n  const renderHome = renderProps => {\n    return /*#__PURE__*/React.createElement(Home, Object.assign({}, renderProps, {\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      getSearchMethod: getSearchMethod,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      setKeywords: setKeywords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  const renderResults = renderProps => {\n    return /*#__PURE__*/React.createElement(Results, Object.assign({}, renderProps, {\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      docInfo: docInfo,\n      hospitalInfo: hospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      setKeywords: setKeywords,\n      getSearchMethod: getSearchMethod,\n      filterHosType: filterHosType,\n      filterLanguageList: filterLanguageList,\n      filterYear: filterYear,\n      updateTargetDoc: updateTargetDoc,\n      updateTargetHos: updateTargetHos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  const renderDocProfile = renderProps => {\n    return /*#__PURE__*/React.createElement(Docprofile, Object.assign({}, renderProps, {\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      docInfo: docInfo,\n      hospitalInfo: hospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      setKeywords: setKeywords,\n      getSearchMethod: getSearchMethod,\n      targetDoc: targetDoc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  const renderHosProfile = renderProps => {\n    return /*#__PURE__*/React.createElement(Hospprofile, Object.assign({}, renderProps, {\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      docInfo: docInfo,\n      hospitalInfo: hospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      setKeywords: setKeywords,\n      getSearchMethod: getSearchMethod,\n      updateTargetDoc: updateTargetDoc,\n      targetHos: targetHos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: renderHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AuthRoute, {\n    exact: true,\n    path: \"/login\",\n    component: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AuthRoute, {\n    exact: true,\n    path: \"/signup\",\n    component: signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/covid19\",\n    component: covid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/results\",\n    render: renderResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/docprofile\",\n    render: renderDocProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/hospprofile\",\n    render: Hospprofile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andychenhe/Desktop/mydoc_25/src/App.js"],"names":["React","axios","BrowserRouter","Router","Switch","Route","jwtDecode","AuthRoute","useState","useEffect","ThemeProvider","MuiThemeProvider","createMuiTheme","themeFile","Provider","store","SET_AUTHENTICATED","logoutUser","getUserData","Home","login","signup","covid","Results","Docprofile","Hospprofile","theme","defaults","baseURL","token","localStorage","FBIdToken","dispatch","decodedToken","exp","Date","now","window","location","href","type","headers","common","App","docInfo","setDocInfo","hospitalInfo","sethospitalInfo","docInfoCopy","setDocInfoCopy","hospitalInfoCopy","sethospitalInfoCopy","searchMethod","setSearchMethod","keywords","setKeywords","setLocation","searchBegin","setSearchBegin","hosType","setHosType","languageList","setLanguageList","yearOfPractice","setyearOfPractice","filterlocation","setFilterlocation","filterBegin","setFilterBegin","targetDoc","setTargetDoc","targetHos","setTargetHos","getLocationValue","value","getKeyWords","getSearchMethod","startSearch","filterHosType","filterLanguageList","lang","filterYear","range","updateTargetDoc","doctor","updateTargetHos","hospital","filterFunction","newDocList","newHospitalList","forEach","validateType","toLowerCase","validateLanguage","every","element","indexOf","validateYear","push","hos","doMainSearch","pageProps","rootData","newDocData","newHosData","userKeyWords","replace","locationInfo","specialtyItem","specialtyName","apply","locationZip","foundDoc","docName","foundTarget","hosList","hosName","condtionList","map","item","includes","docCondition","history","resetSearchStatus","renderHome","renderProps","renderResults","renderDocProfile","renderHosProfile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/login.css\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthRoute from \"./util/AuthRoute\";\nimport { useState, useEffect } from 'react';\n\n\n// material ui theme\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeFile from \"./util/theme\";\n\n//redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { SET_AUTHENTICATED } from \"./redux/types\";\nimport { logoutUser, getUserData } from \"./redux/actions/userActions\";\n\n// pages\nimport Home from \"./pages/Home\";\nimport login from \"./pages/Login\";\nimport signup from \"./pages/Signup\";\nimport covid from \"./pages/Covid\";\nimport Results from \"./pages/Results\";\nimport Docprofile from \"./pages/DocProfile\";\nimport Hospprofile from \"./pages/HospProfile\";\n\n// use themeFile from theme.js\nconst theme = createMuiTheme(themeFile);\n\n// set up api\naxios.defaults.baseURL =\n  \"https://us-central1-mydoc-f3cd9.cloudfunctions.net/api/\";\n\n// backend stuff\nconst token = localStorage.FBIdToken;\nstore.dispatch(getUserData());\n\nif (token) {\n  const decodedToken = jwtDecode(token);\n  // log user out when expire\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser());\n    window.location.href = \"/login\";\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common[\"Authorization\"] = token; //deal with page refresh\n    store.dispatch(getUserData()); // get user data if logged in\n  }\n}\n\n// set up material ui theme\n// route to home/login/sign up\nfunction App() {\n  const [docInfo, setDocInfo] = useState([]);\n  const [hospitalInfo, sethospitalInfo] = useState([]);\n  const [docInfoCopy, setDocInfoCopy] = useState([]);\n  const [hospitalInfoCopy, sethospitalInfoCopy] = useState([]);\n  const [searchMethod, setSearchMethod] = React.useState(\"Specialty\");\n  const [keywords, setKeywords] = React.useState('');\n  const [location, setLocation] = React.useState('');\n  const [searchBegin, setSearchBegin] = React.useState(false);\n  const [hosType, setHosType] = React.useState('both');\n  const [languageList, setLanguageList] = React.useState([]);\n  const [yearOfPractice, setyearOfPractice] = React.useState([1000,-1]);\n  const [filterlocation, setFilterlocation] = React.useState([]);\n  const [filterBegin, setFilterBegin] = React.useState(false);\n  const [targetDoc, setTargetDoc] = React.useState(null);\n  const [targetHos, setTargetHos] = React.useState(null);\n\n\n\n\n  const getLocationValue = (value) => {\n    setLocation(value);\n  }\n\n  const getKeyWords = (value) => {\n    setKeywords(value);\n  }\n\n  const getSearchMethod = (value) => {\n    setSearchMethod(value);\n    setKeywords('');\n  }\n\n  const startSearch = () => {\n    setSearchBegin(true);\n  }\n\n  const filterHosType = (type) => {\n    setHosType(type);\n    setFilterBegin(true);\n\n  }\n\n  const filterLanguageList = (lang) => {\n    setLanguageList(lang);\n    setFilterBegin(true);\n  }\n\n  const filterYear = (range) => {\n    setyearOfPractice(range);\n    setFilterBegin(true);\n  }\n\n  const updateTargetDoc = (doctor) => {\n    setTargetDoc(doctor);\n  }\n\n  const updateTargetHos = (hospital) => {\n    setTargetHos(hospital);\n  }\n\n  const filterFunction = () => {\n    let newDocList = [];\n    let newHospitalList = [];\n    docInfoCopy.forEach((doctor) => {\n      let validateType = doctor['Type'].toLowerCase() == hosType.toLowerCase() || hosType.toLowerCase()=='both';\n      let validateLanguage = languageList.every(element => doctor['Language'].indexOf(element) > -1) || languageList == [];\n      let validateYear = ((yearOfPractice[0] <= doctor['YearsofPractice']) && (yearOfPractice[1] >= doctor['YearsofPractice'])) || yearOfPractice[0] == 1000;\n      if (validateType && validateLanguage && validateYear){\n        newDocList.push(doctor); \n      }\n    })\n\n    hospitalInfoCopy.forEach((hos) => {\n      let validateType = hos['HospitalType'].toLowerCase() == hosType.toLowerCase() || hosType.toLowerCase()=='both';\n      let validateLanguage = languageList.every(element => hos['Language'].indexOf(element) > -1) || languageList == [];\n      if (validateType && validateLanguage){\n        newHospitalList.push(hos); \n      }\n    })\n    setDocInfo(newDocList);\n    sethospitalInfo(newHospitalList);\n  }\n\n  useEffect(() => {\n    if(filterBegin){\n      filterFunction();\n      return setFilterBegin(false);\n    }\n    \n  });\n\n  const doMainSearch = (pageProps) => {\n    if (searchBegin){\n      let rootData = {\n        \"Specialty\" : [{\n          \"Name\" : \"Gastroenterology\",\n          \"Condition\" : [\"Fever\", \"Headache\"],\n          \"Hospital\" : [{\n            \"HospitalName\" : \"Pantai Hospital Kuala Lumpur\",\n            \"HospitalType\" : \"Private\",\n            \"Language\" : [\"English\", \"Mandarin\", \"Malay\", \"Hokkien\", \"Cantonese\"],\n            \"likes\": 10000000,\n            \"RelateSpecialty\" : \"Gastroenterology\",\n            \"Web\" : \"https://www.pantai.com.my/kuala-lumpur\",\n            \"Hours\" : \"24 hours\",\n            \"Address\" : \"8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n            \"Zip\" : \"92310\",\n            \"Phone\" : \"+603-2296 0888\",\n            \"Tags\" : [\n              {\n                \"TagName\" : \"Customer Service\",\n                \"Number\": 2\n              },\n              {\n                \"TagName\" : \"Facility\",\n                \"Number\": 3\n              },\n              {\n                \"TagName\" : \"Friendly\",\n                \"Number\": 5\n              }\n            ],\n            \"Insurance\" : [\"Asia Assistance Network\", \"AIA\", \"AIA - Employee Benefit\", \"AIA Datalink\"],\n            \"TopSpecialty\" : [\"Gastroenterology\", \"AAAA\", \"Surgery\", \"Family Medicine\"],\n            \"Doctors\" : [{\n              \"DocName\" : \"Alex Leow\",\n              \"Specialty\" : \"Gastroenterology\",\n              \"Hospital\" : \"Pantai Hospital Kuala Lumpur\",\n              \"YearsofPractice\" : 7,\n              \"Address\" : \"No. A103a - Endoscopy Centre, 1st Floor, Block A, 8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n              \"Phone\" : \" +603-2296 0763 Ext. 1111\",\n              \"Tags\" : [\n                {\n                  \"TagName\" : \"Bedside Manner\",\n                  \"Number\": 1\n                },\n                {\n                  \"TagName\" : \"Enthusiastic\",\n                  \"Number\": 10\n                },\n                {\n                  \"TagName\" : \"Friendly\",\n                  \"Number\": 5\n                }\n              ],\n              \"Appointment\" : {\n                \"Onsite\" : {\n                  \"Content\": \"Onsite\",\n                  \"Status\": \"Active\"\n                },\n                \"PhoneCall\" : {\n                  \"Content\": \"206-123-4567\",\n                  \"Status\": \"\"\n                },\n                \"Online\" : {\n                  \"Content\": \"https://www.pantai.com.my/kuala-lumpur\",\n                  \"Status\": \"Active\"\n                },\n                \"Email\" : {\n                  \"Content\": \"chenh57@uw.edu\",\n                  \"Status\": \"Active\"\n                }\n              },\n              \"Qualification\":\"MMed (Mal), MB. BCh. BAO. (Hons) LRCPI & LRCSI (Ire), B. Biomed Sci. (Hons) (UM)\",\n              \"Language\" : [\"English\", \"Mandarin\", \"Malay\", \"Hokkien\", \"Cantonese\"],\n              \"Type\": \"Private\",\n              \"Procedures\" : [\"Colonoscopy\", \"Gastroscopy\", \"Endoscopic Retrograde Cholangiopancreatography (ERCP)\", \"Fibroscan\", \"Liver Biopsy\", \"Endoscopic Ultrasound (EUS)\", \"Small Bowel Enteroscopy\", \"Capsule Endoscopy\"],\n              \"Conditions\" : [\"Helicobacter Pylori Infection\", \"Dyspepsia\", \"Gastro Esophageal Reflux Disease\", \"Fever\"],\n              \"NumberOfLikes\" : 12315\n            },\n            {\n                \"DocName\" : \"Alex Tan\",\n                \"Specialty\" : \"Gastroenterology\",\n                \"Hospital\" : \"Pantai Hospital Kuala Lumpur\",\n                \"YearsofPractice\" : 7,\n                \"Address\" : \"No. A103a - Endoscopy Centre, 1st Floor, Block A, 8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n                \"Phone\" : \" +603-123-2131\",\n                \"Tags\" : [\n                  {\n                    \"TagName\" : \"Bedside Manner\",\n                    \"Number\": 1\n                  },\n                  {\n                    \"TagName\" : \"Friendly\",\n                    \"Number\": 5\n                  }\n                ],\n                \"Appointment\" : {\n                  \"Onsite\" : {\n                    \"Status\": \"Active\"\n                  },\n                  \"PhoneCall\" : {\n                    \"Content\": \"206-123-4567\",\n                    \"Status\": \"Active\"\n                  },\n                  \"Online\" : {\n                    \"Content\": \"https://www.pantai.com.my/kuala-lumpur\",\n                    \"Status\": \"Active\"\n                  },\n                  \"Email\" : {\n                    \"Content\": \"chenh57@uw.edu\",\n                    \"Status\": \"Active\"\n                  }\n                },\n                \"Qualification\":\"MMed (Mal), MB. BCh. BAO. (Hons) LRCPI & LRCSI (Ire), B. Biomed Sci. (Hons) (UM)\",\n                \"Language\" : [\"English\", \"Cantonese\"],\n                \"Type\": \"Private\",\n                \"Procedures\" : [\"Colonoscopy\", \"Gastroscopy\", \"Endoscopic Retrograde Cholangiopancreatography (ERCP)\", \"Fibroscan\", \"Liver Biopsy\", \"Endoscopic Ultrasound (EUS)\", \"Small Bowel Enteroscopy\", \"Capsule Endoscopy\"],\n                \"Conditions\" : [\"Helicobacter Pylori Infection\", \"Dyspepsia\", \"Gastro Esophageal Reflux Disease\"],\n                \"NumberOfLikes\" : 2333\n              }]\n          }]\n        }]\n      };          \n      let newDocData = [];\n      let newHosData = [];\n      let userKeyWords = keywords.replace(\" \", \"\").toLowerCase();\n      let locationInfo = location.replace(\" \", \"\");\n      if(searchMethod == 'Specialty'){\n          if (locationInfo == ''){\n              rootData[\"Specialty\"].forEach(specialtyItem => {\n                  let specialtyName = specialtyItem['Name'];\n                  specialtyName = specialtyName.replace(\" \", \"\").toLowerCase();\n                  if (userKeyWords == specialtyName){\n                      specialtyItem['Hospital'].forEach((hospital)=> {\n                          newHosData.push(hospital);\n                          newDocData.push.apply(newDocData,hospital[\"Doctors\"] )\n                      });\n                  }\n              });\n          } else {\n              rootData[\"Specialty\"].forEach(specialtyItem => {\n                  let specialtyName = specialtyItem['Name'];\n                  specialtyName = specialtyName.replace(\" \", \"\").toLowerCase();\n                  specialtyItem['Hospital'].forEach((hospital)=> {\n                      let locationZip = hospital['Zip'];\n                      if (locationZip == locationInfo && userKeyWords == specialtyName){\n                          newHosData.push(hospital);\n                          newDocData.push.apply(newDocData,hospital[\"Doctors\"] );\n                      }\n                  });\n              });\n          } \n      }  else if (searchMethod == 'Doctor'){\n          if (locationInfo == ''){\n              rootData[\"Specialty\"].forEach(specialtyItem => {\n                  let foundDoc = 0;\n                  specialtyItem['Hospital'].forEach((hospital)=>{\n                      let docName = hospital['Doctors'];\n                      docName.forEach((doctor) => {\n                          let docName = doctor['DocName'].replace(\" \", \"\").toLowerCase()\n                          if (docName == userKeyWords){\n                              newDocData.push(doctor);\n                              if (foundDoc == 0){\n                                newHosData.push(hospital);\n                              }\n                              foundDoc ++;\n                          }\n\n                      });\n                  })\n              });\n          } else {\n              rootData[\"Specialty\"].forEach(specialtyItem => {\n                  let foundDoc = 0;\n                  specialtyItem['Hospital'].forEach((hospital)=>{\n                      let locationZip = hospital['Zip'];\n                      let docName = hospital['Doctors'];\n                      docName.forEach((doctor) => {\n                          let docName = doctor['DocName']\n                          if (docName.replace(\" \", \"\").toLowerCase() == userKeyWords.toLowerCase() && locationZip == locationInfo){\n                              newDocData.push(doctor);\n                              foundDoc ++;\n                          }\n                          if (foundDoc == 1){\n                              newHosData.push(hospital);\n                          }\n                      });\n                  })\n              });\n          } \n      } else if (searchMethod == 'Hospital'){\n          if (locationInfo == ''){\n              rootData[\"Specialty\"].forEach(specialtyItem => {\n                  let foundTarget = true;\n                  let hosList = specialtyItem['Hospital'];\n                  hosList.forEach((hospital) => {\n                      let hosName = hospital['HospitalName'];\n                      hosName = hosName.replace(\" \", \"\").toLowerCase();\n                      if (userKeyWords.toLowerCase() == hosName){\n                          if (foundTarget){\n                              newHosData.push(hospital);\n                          }\n                          newDocData.push.apply(newDocData,hospital[\"Doctors\"]);\n                          foundTarget = false;\n                      }\n                  })\n              });\n          } else {\n              rootData[\"Specialty\"].forEach(specialtyItem => {\n                  let foundTarget = true;\n                  let hosList = specialtyItem['Hospital'];\n                  hosList.forEach((hospital) => {\n                      let hosName = hospital['HospitalName'];\n                      let locationZip = hospital['Zip'];\n                      hosName = hosName.replace(\" \", \"\").toLowerCase();\n                      if (userKeyWords.toLowerCase() == hosName && locationZip == locationInfo){\n                          if (foundTarget){\n                              newHosData.push(hospital);\n                          }\n                          newDocData.push.apply(newDocData,hospital[\"Doctors\"]);\n                          foundTarget = false;\n                      }\n                  })\n              });\n          } \n\n      } else {\n          if (locationInfo == ''){\n              rootData[\"Specialty\"].forEach(specialtyItem => {\n                  let condtionList = specialtyItem['Condition'];\n                  condtionList = condtionList.map(function(item) { return item.toLowerCase(); });\n                  if (condtionList.includes(userKeyWords)){\n                      specialtyItem[\"Hospital\"].forEach((hospital) => {\n                          newHosData.push(hospital);\n                          hospital['Doctors'].forEach((doctor) => {\n                              let docCondition = doctor['Conditions'];\n                              docCondition = docCondition.map(function(item) { return item.toLowerCase(); });\n                              if (docCondition.includes(userKeyWords)){\n                                  newDocData.push(doctor);\n                              }\n                          });\n                      })\n                  }\n              });\n          } else {\n              rootData[\"Specialty\"].forEach(specialtyItem => {\n                  let condtionList = specialtyItem['Condition'];\n                  condtionList = condtionList.map(function(item) { return item.toLowerCase(); });\n                  specialtyItem[\"Hospital\"].forEach((hospital) => {\n                      let locationZip = hospital['Zip'];\n                      if (locationZip == locationInfo && condtionList.includes(userKeyWords)){\n                          newHosData.push(hospital);\n                          hospital['Doctors'].forEach((doctor) => {\n                              let docCondition = doctor['Conditions'];\n                              docCondition = docCondition.map(function(item) { return item.toLowerCase(); });\n                              if (docCondition.includes(userKeyWords)){\n                                  newDocData.push(doctor);\n                              }\n                          });\n                      }\n\n                  });\n              });\n          } \n      }\n      sethospitalInfo(newHosData);\n      setDocInfo(newDocData);\n      sethospitalInfoCopy(newHosData);\n      setDocInfoCopy(newDocData);\n      if (pageProps.history != null){\n        pageProps.history.push('/results');\n      }\n\n    }\n    \n    return function resetSearchStatus(){\n      setSearchBegin(false);\n    }\n\n  }\n\n  const renderHome = (renderProps) => {\n    return <Home {...renderProps} \n                    setDocInfo={setDocInfo} \n                    sethospitalInfo={sethospitalInfo} \n                    doMainSearch={doMainSearch}\n                    getLocationValue={getLocationValue}\n                    getKeyWords={getKeyWords}\n                    startSearch={startSearch}\n                    getSearchMethod={getSearchMethod}\n                    searchBegin={searchBegin}\n                    setSearchMethod={setSearchMethod}\n                    setKeywords={setKeywords}\n                   />\n  }\n  const renderResults = (renderProps) => {\n    return <Results {...renderProps} \n                      setDocInfo={setDocInfo} \n                      sethospitalInfo={sethospitalInfo} \n                      docInfo={docInfo} \n                      hospitalInfo ={hospitalInfo}\n                      doMainSearch={doMainSearch}\n                      getLocationValue={getLocationValue}\n                      getKeyWords={getKeyWords}\n                      startSearch={startSearch}\n                      searchBegin={searchBegin}\n                      setSearchMethod={setSearchMethod}\n                      setKeywords={setKeywords}\n                      getSearchMethod={getSearchMethod}\n                      filterHosType ={filterHosType}\n                      filterLanguageList={filterLanguageList}\n                      filterYear={filterYear}\n                      updateTargetDoc={updateTargetDoc}\n                      updateTargetHos={updateTargetHos}\n                      />\n                      \n  }\n\n  const renderDocProfile = (renderProps) => {\n    return <Docprofile {...renderProps} \n                        setDocInfo={setDocInfo} \n                        sethospitalInfo={sethospitalInfo} \n                        docInfo={docInfo} \n                        hospitalInfo ={hospitalInfo}\n                        doMainSearch={doMainSearch}\n                        getLocationValue={getLocationValue}\n                        getKeyWords={getKeyWords}\n                        startSearch={startSearch}\n                        searchBegin={searchBegin}\n                        setSearchMethod={setSearchMethod}\n                        setKeywords={setKeywords}\n                        getSearchMethod={getSearchMethod}\n                        targetDoc={targetDoc}\n                      />\n                      \n  }\n\n  const renderHosProfile = (renderProps) => {\n    return <Hospprofile {...renderProps} \n                        setDocInfo={setDocInfo} \n                        sethospitalInfo={sethospitalInfo} \n                        docInfo={docInfo} \n                        hospitalInfo ={hospitalInfo}\n                        doMainSearch={doMainSearch}\n                        getLocationValue={getLocationValue}\n                        getKeyWords={getKeyWords}\n                        startSearch={startSearch}\n                        searchBegin={searchBegin}\n                        setSearchMethod={setSearchMethod}\n                        setKeywords={setKeywords}\n                        getSearchMethod={getSearchMethod}\n                        updateTargetDoc={updateTargetDoc}\n                        targetHos={targetHos}\n                      />\n                      \n  }\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <div className=\"container\">\n              <Route exact path=\"/\" render={renderHome}></Route>\n              <AuthRoute exact path=\"/login\" component={login} />\n              <AuthRoute exact path=\"/signup\" component={signup} />\n              <Route exact path=\"/covid19\" component={covid}></Route>\n              <Route exact path=\"/results\" render={renderResults}></Route>\n              <Route exact path=\"/docprofile\" render={renderDocProfile}></Route>\n              <Route exact path=\"/hospprofile\" render={Hospprofile}></Route>\n            </div>\n          </Switch>\n        </Router>\n      </Provider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Desktop/Capstone/CapstoneEclipseAB11/src/Components/profile/DocInfo.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport axios from \"axios\"; //icons\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\nimport ErrorIcon from '@material-ui/icons/Error';\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { changeDocLikeStatus, changeDocSaveStatus, sendReportedDoctors } from \"../../redux/actions/userActions\";\nimport { updateDoctorLikes, report } from \"../../redux/actions/dataActions\"; //components\n\nimport CovidAlert from \"../Alert\";\nimport DocTags from \"./DocTags\";\nconst useStyles = makeStyles(theme => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  //return to doctors button\n  returnBox: {\n    marginLeft: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 20\n    }\n  },\n  //doctor image\n  img: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"contain\"\n  },\n  profileGrid: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\"\n    }\n  },\n  reportButton: {\n    marginRight: \"1rem\"\n  },\n  signUpInButton: {\n    paddingLeft: \"7.5rem\"\n  }\n})); //for Doc image + basic info + likes\n//edit tags section is imported from DocTags.js\n\nfunction DocInfo(props) {\n  const classes = useStyles();\n\n  const backToRes = () => {\n    console.log('backTo:'); // likeHistory\n\n    console.log(props.backTo);\n\n    if (props.history != null) {\n      if (props.backTo == \"resultsPage\") {\n        props.history.push(\"/results\");\n      } else if (props.backTo == \"hospprofile\") {\n        props.history.push(\"/hospprofile\");\n      } else if (props.backTo == \"likeHistory\") {\n        props.history.push(\"/likehistory\");\n      } else {\n        props.history.push(\"/saved\");\n      }\n    }\n  };\n\n  const authenticated = props.authenticated;\n  const [renderCount, setRenderCount] = React.useState(0);\n  const [likeSaveInfo, setState] = React.useState({\n    // like functionality\n    hasLiked: false,\n    likedList: [],\n    numLikes: 0,\n    // save functionality\n    hasSaved: false,\n    savedList: [],\n    // report functionality\n    reportedList: [],\n    numReports: 0,\n    reportReasonsList: [],\n    oneReason: \"\"\n  }); // only get called once in the first render\n\n  useEffect(() => {\n    // if (renderCount == 0) {\n    displayStoredData(); // }\n  }, []);\n\n  const displayStoredData = () => {\n    getStoredData().then(res => {\n      // like\n      let listOfLikes;\n      let liked = false; // if the user has never liked any doctors\n\n      if (!res[1].likeHistory) {\n        listOfLikes = [];\n      } else {\n        if (res[1].likeHistory.doctors) {\n          listOfLikes = res[1].likeHistory.doctors; // if the user has liked this particular doctor before\n\n          const index = res[1].likeHistory.doctors.findIndex(doctor => doctor.username.replace(/\\s/g, '').toLowerCase() == props.targetDoc.userName.replace(/\\s/g, '').toLowerCase());\n\n          if (index != -1) {\n            liked = true;\n          }\n        } else {\n          listOfLikes = [];\n        }\n      } // save\n\n\n      let listOfSaves;\n      let saved = false; // if the user has never saved any doctors\n\n      if (!res[1].saved) {\n        listOfSaves = [];\n      } else {\n        if (res[1].saved.doctors) {\n          listOfSaves = res[1].saved.doctors; // if the user has saved this particular doctor before\n\n          const index = res[1].saved.doctors.findIndex(doctor => doctor.username.replace(/\\s/g, '').toLowerCase() == props.targetDoc.userName.replace(/\\s/g, '').toLowerCase());\n\n          if (index != -1) {\n            saved = true;\n          }\n        } else {\n          listOfSaves = [];\n        }\n      }\n\n      ;\n      setState({\n        username: res[1].username,\n        hasLiked: liked,\n        likedList: listOfLikes,\n        numLikes: props.targetDoc.NumberOfLikes ? props.targetDoc.NumberOfLikes : 0,\n        hasSaved: saved,\n        savedList: listOfSaves,\n        reportedList: res[1].reportedDoctors ? res[1].reportedDoctors : [],\n        // numReports: res[0].report ? res[0].report.reportCount : 0,\n        numReports: props.targetDoc.report ? props.targetDoc.report.reportCount : 0,\n        // reportReasonsList: res[0].report ? res[0].report.reportReasons : [],\n        reportReasonsList: props.targetDoc.report ? props.targetDoc.report.reportReasons : [],\n        oneReason: \"\"\n      }); // setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // wait for returned props from firebase to be ready\n\n\n  let getStoredData = async () => {\n    let [storedSearchInfo, userStoredCredentials] = await Promise.all([props.searchInfo, props.storedCredentials]);\n    return [storedSearchInfo, userStoredCredentials];\n  }; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LIKE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // when the like button is pressed\n\n\n  const toggleLikeUnlike = () => {\n    // the user has liked this doctor before\n    if (likeSaveInfo.hasLiked) {\n      let likedListCopy = likeSaveInfo.likedList;\n      let index = likedListCopy.findIndex(doctor => doctor.username == props.targetDoc.userName); // remove this doctor from the user like list\n\n      likedListCopy.splice(index, 1);\n      setState(prevState => {\n        prevState.numLikes = prevState.numLikes - 1;\n        prevState.hasLiked = false;\n        prevState.likedList = likedListCopy;\n        return { ...prevState\n        };\n      });\n    } else {\n      // the newly liked doctor's information to be added to the user's liked doctor list\n      let newDocInfo = {\n        hospital: props.targetDoc.Hospital,\n        languages: props.targetDoc.language,\n        likes: likeSaveInfo.numLikes,\n        name: props.targetDoc.DocName,\n        specialty: props.targetDoc.specialty,\n        type: props.targetDoc.type,\n        username: props.targetDoc.userName\n      };\n      likeSaveInfo.likedList.push(newDocInfo);\n      setState( // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n      prevState => {\n        prevState.numLikes = prevState.numLikes + 1;\n        prevState.hasLiked = true;\n        return { ...prevState\n        }; // return{\n        // //   ...likeSaveInfo,\n        // // hasLiked: true,\n        // // numLikes: newLikes\n        // }\n      } // likedList: (likeSaveInfo.likedList.length == 0) ? [newDocInfo] : [prevState.likedList, newDocInfo],\n      );\n    }\n\n    let updateInfo = {\n      specialty: props.targetDoc.specialty,\n      hospital: props.targetDoc.hospital,\n      username: props.targetDoc.userName,\n      likes: likeSaveInfo.numLikes\n    };\n    toggleLike(likeSaveInfo.likedList, updateInfo);\n    updateLocalDocList(updateInfo);\n  }; // triggered if the like button is pressed (which sets state)\n  // useEffect(() => {\n  //   if (renderCount == 1) {\n  //     return toggleLike();\n  //   }\n  // }, [likeSaveInfo.hasLiked, likeSaveInfo.likedList]);\n\n\n  const toggleLike = (targetList, numberOfLikeInfoParam) => {\n    let url = \"https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/postLikeInfo\";\n    let proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    let params = {\n      userName: likeSaveInfo.username,\n      likedList: targetList\n    };\n    axios.post(proxyurl + url, params).then(res => {\n      props.updateDoctorLikes(numberOfLikeInfoParam);\n    }).catch(error => console.log(error)); // props.changeDocLikeStatus(likeSaveInfo.likedList);\n  };\n\n  const updateLocalDocList = updateInfo => {\n    // set location target list location\n    console.log('local list');\n    let newDocList = [];\n\n    for (let doc in props.docInfo) {\n      let docItem = props.docInfo[doc];\n\n      if (docItem.DocName == props.targetDoc.DocName) {\n        docItem.NumberOfLikes = likeSaveInfo.numLikes;\n        docItem.likes = likeSaveInfo.numLikes;\n      }\n\n      newDocList.push(docItem);\n    }\n\n    console.log(newDocList);\n    props.setDocInfo(newDocList); // set database\n\n    let newDatabase;\n    newDatabase = props.database;\n    let hospitalId = updateInfo['hospital'].replace(/\\s/g, '');\n    let docID = updateInfo['username'].replace(/\\s/g, '');\n    console.log(newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]['doctors'][docID]['likes']);\n    newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]['doctors'][docID]['likes'] = likeSaveInfo.numLikes;\n    newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]['doctors'][docID]['NumberOfLikes'] = likeSaveInfo.numLikes;\n    props.setDatabase(newDatabase);\n  }; // if the user has liked this doctor before: filled heart, otherwise outlined heart\n\n\n  const LikeIcon = likeSaveInfo.hasLiked ? FavoriteIcon : FavoriteBorderOutlinedIcon; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SAVE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // when the save button is pressed\n\n  const toggleSaveUnsave = () => {\n    // the user has saved this doctor before\n    if (likeSaveInfo.hasSaved) {\n      let savedListCopy = likeSaveInfo.savedList;\n      let index = savedListCopy.findIndex(doctor => doctor.username == props.targetDoc.userName); // remove this doctor from the user saved list\n\n      savedListCopy.splice(index, 1);\n      setState({ ...likeSaveInfo,\n        savedList: savedListCopy,\n        hasSaved: false\n      });\n    } else {\n      // the newly saved doctor's information to be added to the user's saved doctor list\n      let newDocInfo = {\n        hospital: props.targetDoc.Hospital,\n        // imgSrc: props.targetDoc.imgSrc,\n        languages: props.targetDoc.language,\n        likes: likeSaveInfo.numLikes,\n        name: props.targetDoc.DocName,\n        specialty: props.targetDoc.specialty,\n        type: props.targetDoc.type,\n        username: props.targetDoc.userName\n      };\n      likeSaveInfo.savedList.push(newDocInfo); // setState(prevState => ({\n      //   // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n      //   ...likeSaveInfo,\n      //   prevState.hasSaved = true;\n      // }))\n\n      setState( // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n      prevState => {\n        prevState.hasSaved = true;\n        return { ...prevState\n        };\n      });\n    }\n\n    props.changeDocSaveStatus(likeSaveInfo.savedList);\n  }; // triggered if the save button is pressed (which sets state)\n  // useEffect(() => {\n  //   if (renderCount == 1) {\n  //     return toggleSave();\n  //   }\n  // }, [likeSaveInfo.hasSaved, likeSaveInfo.savedList]);\n  // const toggleSave = () => {\n  //   waitSaveUpdate()\n  //     .then((res) => {\n  //       props.changeDocSaveStatus(res);\n  //     }).catch((error) => {\n  //       console.error(error);\n  //     });\n  // }\n\n\n  let waitSaveUpdate = async () => {\n    let savedList = await likeSaveInfo.savedList;\n    return savedList;\n  }; // if the user has saved this doctor before: filled bookmark, otherwise outlined bookmark\n\n\n  const SaveIcon = likeSaveInfo.hasSaved ? BookmarkIcon : BookmarkBorderOutlinedIcon; // -------------------------------------------------------------------- //\n  // ----------------------------Report---------------------------------------- //\n  // 新加 5/14\n  //report弹窗：填的表\n\n  const [reportOpen, setReportOpen] = React.useState(false);\n\n  const handleReportOpen = () => {\n    setReportOpen(true);\n  }; // 关闭report的表\n\n\n  const handleReportClose = () => {\n    setReportOpen(false);\n  };\n\n  const handleReportReason = event => {\n    const oneReason = event.target.value;\n    setState({ ...likeSaveInfo,\n      oneReason: oneReason\n    });\n  };\n\n  const reported = likeSaveInfo.reportedList.includes(props.targetDoc.userName); // reportedList\n  // send report to database\n\n  const submitReport = () => {\n    const oneReason = likeSaveInfo.oneReason;\n    const reasons = likeSaveInfo.reportReasonsList;\n    reasons.push(oneReason);\n    let reportedList = likeSaveInfo.reportedList;\n\n    if (!reported) {\n      reportedList.push(props.targetDoc.userName);\n    } // send to specialty doctor account\n\n\n    const oneReport = {\n      reportCount: likeSaveInfo.numReports + 1,\n      reportReasons: reasons,\n      // *******hard code \n      specialty: props.targetDoc.specialty,\n      hospital: props.targetDoc.Hospital,\n      username: props.targetDoc.userName\n    };\n    props.report(oneReport); // send to user account\n\n    const sendToAccount = {\n      reportedDoctors: reportedList\n    };\n    props.sendReportedDoctors(sendToAccount);\n    setReportOpen(false);\n    setState(prevState => ({ ...likeSaveInfo,\n      numReports: prevState.numReports + 1,\n      reportReasonsList: [prevState.reportReasonsList, oneReason],\n      oneReason: \"\",\n      reportedList: [prevState.reportedList, props.targetDoc.userName]\n    }));\n  }; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // ~~~~~~~~~~~ign up or login in if want to save or report~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // 弹窗去signin/signup如果要report没有login\n\n\n  const [loginOpen, setLoginOpen] = React.useState({\n    open: false,\n    // keep track of what function the user selects (report, like, save, tag)\n    userOption: \"\"\n  });\n\n  const handleLoginOpen = option => {\n    setLoginOpen({\n      open: true,\n      userOption: option\n    });\n  };\n\n  const handleLoginClose = () => {\n    setLoginOpen({ ...loginOpen,\n      open: false\n    });\n  };\n\n  let Icon = FavoriteIcon;\n\n  if (loginOpen.userOption == \"Recommend\") {\n    Icon = FavoriteIcon;\n  } else if (loginOpen.userOption == \"Save\") {\n    Icon = BookmarkBorderOutlinedIcon;\n  } else if (loginOpen.userOption == \"Report\") {\n    Icon = ErrorOutlineOutlinedIcon;\n  } else {\n    Icon = EditOutlinedIcon;\n  } // He Chen\n\n\n  let returnPageDesc;\n\n  if (props.backTo == \"resultsPage\") {\n    returnPageDesc = \"Result Page\";\n  } else if (props.backTo == \"hospprofile\") {\n    returnPageDesc = \"Hospital Profile\";\n  } else if (props.backTo == \"likeHistory\") {\n    returnPageDesc = \"Like History\";\n  } else {\n    returnPageDesc = \"Saved\";\n  }\n\n  console.log(props.targetDoc);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.covidBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CovidAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 3,\n    mb: 3,\n    className: classes.returnBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      fontSize: 16,\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: backToRes,\n    startIcon: /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 9\n    }\n  }, \"Return to \", returnPageDesc)), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 150,\n      height: 180\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: props.targetDoc[\"imgSrc\"],\n    alt: \"docimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleLikeUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LikeIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 19\n    }\n  })) :\n  /*#__PURE__*/\n  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的\n  React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => handleLoginOpen(\"Recommend\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 15\n    }\n  }, likeSaveInfo.numLikes.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 200,\n      height: 250\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: props.targetDoc[\"imgSrc\"],\n    alt: \"docimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 15\n    }\n  }, \"Dr.\" + props.targetDoc[\"DocName\"])), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(Button, {\n    disabled: reported,\n    startIcon: /*#__PURE__*/React.createElement(ErrorOutlineOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 30\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: handleReportOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 17\n    }\n  }, \"Report\") :\n  /*#__PURE__*/\n  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的 （这里新的东西比原来长很多 麻烦小心对一下位置）\n  React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(ErrorOutlineOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 32\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: () => handleLoginOpen(\"Report\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 19\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: \"true\",\n    maxWidth: \"sm\",\n    open: loginOpen.open,\n    onClose: handleLoginClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 25\n    }\n  }, loginOpen.userOption, \" a Doctor\")), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: handleLoginClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 25\n    }\n  }, \"You need to sign in to \", loginOpen.userOption.toLowerCase(), \" this doctor \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 2,\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.signUpInButton,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    fullWidth: true,\n    component: Link,\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 25\n    }\n  }, \"Log in \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.signUpInButton,\n    variant: \"outlined\",\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    fullWidth: true,\n    component: Link,\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 25\n    }\n  }, \"Sign up \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"))))), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: \"true\",\n    maxWidth: \"sm\",\n    open: reportOpen,\n    onClose: handleReportClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 21\n    }\n  }, \"Report\")), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: handleReportClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 19\n    }\n  }, \"Please provide a reason for why you are reporting this doctor:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    multiline: true,\n    required: true,\n    variant: \"outlined\",\n    label: \"Reason\",\n    rows: 5,\n    onChange: handleReportReason,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.reportButton,\n    disabled: !likeSaveInfo.oneReason,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    onClick: submitReport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 19\n    }\n  }, \"Submit\"))), authenticated ? /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 30\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: toggleSaveUnsave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 17\n    }\n  }, \"Save\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 32\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: () => handleLoginOpen(\"Save\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 19\n    }\n  }, \"Save\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 13\n    }\n  }, \"Dr.\" + props.targetDoc[\"DocName\"])), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    className: classes.profileGrid,\n    mt: 3,\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 15\n    }\n  }, \"Specialty: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 15\n    }\n  }, props.targetDoc[\"Specialty\"], \" \")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 15\n    }\n  }, \"Years of Practice: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 15\n    }\n  }, props.targetDoc[\"YearsofPractice\"] + \" years\", \" \")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 15\n    }\n  }, \"Hospital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 15\n    }\n  }, props.targetDoc[\"Hospital\"]), /*#__PURE__*/React.createElement(Chip, {\n    style: {\n      marginLeft: 10\n    },\n    color: \"primary\",\n    size: \"small\",\n    label: props.targetDoc[\"Type\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationOnOutlinedIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 17\n    }\n  }, props.targetDoc[\"Address\"]))), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PhoneOutlinedIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 17\n    }\n  }, props.targetDoc[\"Phone\"])))), console.log(props.targetDoc), /*#__PURE__*/React.createElement(DocTags, {\n    tagInfo: props.targetDoc[\"tags\"],\n    targetDoc: props.targetDoc,\n    handleLoginOpen: handleLoginOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 1,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleLikeUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LikeIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 19\n    }\n  })) :\n  /*#__PURE__*/\n  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的\n  React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => handleLoginOpen(\"Recommend\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 15\n    }\n  }, likeSaveInfo.numLikes.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  })))))));\n}\n\nDocInfo.propTypes = {\n  // like\n  changeDocLikeStatus: PropTypes.func.isRequired,\n  updateDoctorLikes: PropTypes.func.isRequired,\n  // save\n  changeDocSaveStatus: PropTypes.func.isRequired,\n  // report\n  sendReportedDoctors: PropTypes.func.isRequired,\n  report: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.searchInfo\n});\n\nconst mapActionsToProps = {\n  // like\n  changeDocLikeStatus,\n  updateDoctorLikes,\n  // save\n  changeDocSaveStatus,\n  // report\n  sendReportedDoctors,\n  report\n};\nexport default connect(mapStateToProps, mapActionsToProps)(DocInfo);","map":{"version":3,"sources":["/Users/Michelle/Desktop/Capstone/CapstoneEclipseAB11/src/Components/profile/DocInfo.js"],"names":["React","Fragment","useEffect","connect","makeStyles","Button","Box","Typography","Chip","Grid","IconButton","Hidden","axios","ArrowBackIosIcon","LocationOnOutlinedIcon","PhoneOutlinedIcon","ErrorIcon","ErrorOutlineOutlinedIcon","BookmarkIcon","BookmarkBorderOutlinedIcon","ShareOutlinedIcon","FavoriteIcon","FavoriteBorderOutlinedIcon","EditIcon","EditOutlinedIcon","Dialog","DialogContent","DialogTitle","DialogActions","TextField","CloseIcon","Link","PropTypes","changeDocLikeStatus","changeDocSaveStatus","sendReportedDoctors","updateDoctorLikes","report","CovidAlert","DocTags","useStyles","theme","covidBox","marginTop","breakpoints","down","marginLeft","marginRight","returnBox","img","width","height","objectFit","profileGrid","line","border","reportButton","signUpInButton","paddingLeft","DocInfo","props","classes","backToRes","console","log","backTo","history","push","authenticated","renderCount","setRenderCount","useState","likeSaveInfo","setState","hasLiked","likedList","numLikes","hasSaved","savedList","reportedList","numReports","reportReasonsList","oneReason","displayStoredData","getStoredData","then","res","listOfLikes","liked","likeHistory","doctors","index","findIndex","doctor","username","replace","toLowerCase","targetDoc","userName","listOfSaves","saved","NumberOfLikes","reportedDoctors","reportCount","reportReasons","catch","error","storedSearchInfo","userStoredCredentials","Promise","all","searchInfo","storedCredentials","toggleLikeUnlike","likedListCopy","splice","prevState","newDocInfo","hospital","Hospital","languages","language","likes","name","DocName","specialty","type","updateInfo","toggleLike","updateLocalDocList","targetList","numberOfLikeInfoParam","url","proxyurl","params","post","newDocList","doc","docInfo","docItem","setDocInfo","newDatabase","database","hospitalId","docID","setDatabase","LikeIcon","toggleSaveUnsave","savedListCopy","waitSaveUpdate","SaveIcon","reportOpen","setReportOpen","handleReportOpen","handleReportClose","handleReportReason","event","target","value","reported","includes","submitReport","reasons","oneReport","sendToAccount","loginOpen","setLoginOpen","open","userOption","handleLoginOpen","option","handleLoginClose","Icon","returnPageDesc","fontSize","textTransform","color","toLocaleString","navigator","minimumFractionDigits","margin","propTypes","func","isRequired","mapStateToProps","state","user","credentials","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport axios from \"axios\";\n\n//icons\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\nimport ErrorIcon from '@material-ui/icons/Error';\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Link } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\n\nimport { changeDocLikeStatus, changeDocSaveStatus, sendReportedDoctors } from \"../../redux/actions/userActions\";\nimport { updateDoctorLikes, report } from \"../../redux/actions/dataActions\";\n\n//components\nimport CovidAlert from \"../Alert\";\nimport DocTags from \"./DocTags\";\n\nconst useStyles = makeStyles((theme) => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  //return to doctors button\n  returnBox: {\n    marginLeft: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 20,\n    },\n  },\n\n  //doctor image\n  img: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"contain\",\n  },\n\n  profileGrid: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\",\n    },\n  },\n\n  reportButton: {\n    marginRight: \"1rem\",\n  },\n\n  signUpInButton: {\n    paddingLeft: \"7.5rem\"\n  }\n}));\n\n\n//for Doc image + basic info + likes\n//edit tags section is imported from DocTags.js\n\nfunction DocInfo(props) {\n  const classes = useStyles();\n\n  const backToRes = () => {\n    console.log('backTo:');\n    // likeHistory\n    console.log(props.backTo);\n    if (props.history != null) {\n      if (props.backTo == \"resultsPage\") {\n        props.history.push(\"/results\");\n      } else if (props.backTo == \"hospprofile\") {\n        props.history.push(\"/hospprofile\");\n      } else if (props.backTo == \"likeHistory\"){\n        props.history.push(\"/likehistory\");\n      } else {\n        props.history.push(\"/saved\");\n      }\n    }\n  };\n\n\n  const authenticated = props.authenticated;\n\n  const [renderCount, setRenderCount] = React.useState(0);\n\n  const [likeSaveInfo, setState] = React.useState({\n    // like functionality\n    hasLiked: false,\n    likedList: [],\n    numLikes: 0,\n\n    // save functionality\n    hasSaved: false,\n    savedList: [],\n\n    // report functionality\n    reportedList: [],\n    numReports: 0,\n    reportReasonsList: [],\n    oneReason: \"\"\n  });\n\n  // only get called once in the first render\n  useEffect(() => {\n    // if (renderCount == 0) {\n      displayStoredData();\n    // }\n  }, []);\n\n  const displayStoredData = () => {\n    getStoredData()\n      .then((res) => {\n        // like\n        let listOfLikes;\n        let liked = false;\n        // if the user has never liked any doctors\n        if (!res[1].likeHistory) {\n          listOfLikes = [];\n        } else {\n          if (res[1].likeHistory.doctors) {\n            listOfLikes = res[1].likeHistory.doctors;\n            // if the user has liked this particular doctor before\n            const index = res[1].likeHistory.doctors.findIndex(doctor => doctor.username.replace(/\\s/g,'').toLowerCase() == props.targetDoc.userName.replace(/\\s/g,'').toLowerCase())\n            if (index != -1) {\n              liked = true;\n            }\n          } else {\n            listOfLikes = [];\n          }\n        }\n\n        // save\n        let listOfSaves;\n        let saved = false;\n\n        // if the user has never saved any doctors\n        if (!res[1].saved) {\n          listOfSaves = [];\n        } else {\n          if (res[1].saved.doctors) {\n            listOfSaves = res[1].saved.doctors;\n            // if the user has saved this particular doctor before\n            const index = res[1].saved.doctors.findIndex(doctor => doctor.username.replace(/\\s/g,'').toLowerCase() == props.targetDoc.userName.replace(/\\s/g,'').toLowerCase())\n            if (index != -1) {\n              saved = true;\n            }\n          } else {\n            listOfSaves = [];\n          }\n        };\n        setState({\n          username: res[1].username,\n          hasLiked: liked,\n          likedList: listOfLikes,\n          numLikes: props.targetDoc.NumberOfLikes ? props.targetDoc.NumberOfLikes : 0,\n\n          hasSaved: saved,\n          savedList: listOfSaves,\n\n          reportedList: res[1].reportedDoctors ? res[1].reportedDoctors : [],\n          // numReports: res[0].report ? res[0].report.reportCount : 0,\n          numReports: props.targetDoc.report ? props.targetDoc.report.reportCount : 0,\n\n          // reportReasonsList: res[0].report ? res[0].report.reportReasons : [],\n          reportReasonsList: props.targetDoc.report ? props.targetDoc.report.reportReasons : [],\n\n          oneReason: \"\"\n        });\n\n        // setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  // wait for returned props from firebase to be ready\n  let getStoredData = async () => {\n    let [storedSearchInfo, userStoredCredentials] =\n      await Promise.all([props.searchInfo, props.storedCredentials]);\n    return [storedSearchInfo, userStoredCredentials];\n  }\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LIKE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // when the like button is pressed\n  const toggleLikeUnlike = () => {\n    // the user has liked this doctor before\n    if (likeSaveInfo.hasLiked) {\n      let likedListCopy = likeSaveInfo.likedList;\n      let index = likedListCopy.findIndex(doctor => doctor.username == props.targetDoc.userName);\n      // remove this doctor from the user like list\n      likedListCopy.splice(index, 1);\n      setState(prevState => {\n        prevState.numLikes = prevState.numLikes - 1;\n        prevState.hasLiked = false;\n        prevState.likedList = likedListCopy;\n        return ({\n          ...prevState\n        })\n      })\n\n    } else {\n      // the newly liked doctor's information to be added to the user's liked doctor list\n      let newDocInfo = {\n        hospital: props.targetDoc.Hospital,\n        languages: props.targetDoc.language,\n        likes: likeSaveInfo.numLikes,\n        name: props.targetDoc.DocName,\n        specialty: props.targetDoc.specialty,\n        type: props.targetDoc.type,\n        username: props.targetDoc.userName\n      };\n\n      likeSaveInfo.likedList.push(newDocInfo);\n\n      setState(\n        // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        (prevState) => {\n          prevState.numLikes = prevState.numLikes + 1;\n          prevState.hasLiked = true;\n          return ({\n            ...prevState\n          })\n          // return{\n          // //   ...likeSaveInfo,\n          // // hasLiked: true,\n          // // numLikes: newLikes\n          // }\n        }\n        // likedList: (likeSaveInfo.likedList.length == 0) ? [newDocInfo] : [prevState.likedList, newDocInfo],\n      )\n\n\n    }\n    let updateInfo = {\n      specialty: props.targetDoc.specialty,\n      hospital: props.targetDoc.hospital,\n      username: props.targetDoc.userName,\n      likes: likeSaveInfo.numLikes\n    }\n    toggleLike(likeSaveInfo.likedList,updateInfo );\n    updateLocalDocList(updateInfo);\n\n  }\n\n  // triggered if the like button is pressed (which sets state)\n  // useEffect(() => {\n  //   if (renderCount == 1) {\n  //     return toggleLike();\n  //   }\n  // }, [likeSaveInfo.hasLiked, likeSaveInfo.likedList]);\n\n\n  const toggleLike = (targetList, numberOfLikeInfoParam) => {\n\n        let url = \"https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/postLikeInfo\";\n        let  proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n        let params = {\n          userName:likeSaveInfo.username,\n          likedList:targetList\n        }\n        axios.post(proxyurl+url, params)\n        .then((res)=>{\n          props.updateDoctorLikes(numberOfLikeInfoParam);\n        })\n        .catch(error=>console.log(error))\n\n        // props.changeDocLikeStatus(likeSaveInfo.likedList);\n  }\n\n  const updateLocalDocList = (updateInfo)=>{\n    // set location target list location\n    console.log('local list');\n    let newDocList = [];\n    for (let doc in props.docInfo){\n      let docItem = props.docInfo[doc];\n      if (docItem.DocName == props.targetDoc.DocName){\n        docItem.NumberOfLikes = likeSaveInfo.numLikes;\n        docItem.likes = likeSaveInfo.numLikes;\n      }\n      newDocList.push(docItem);\n    }\n    console.log(newDocList);\n    props.setDocInfo(newDocList);\n\n    // set database\n    let newDatabase;\n    newDatabase = props.database;\n    let hospitalId = updateInfo['hospital'].replace(/\\s/g,'')\n    let docID = updateInfo['username'].replace(/\\s/g,'')\n    console.log(newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]['doctors'][docID]['likes']);\n    newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]['doctors'][docID]['likes'] = likeSaveInfo.numLikes;\n    newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]['doctors'][docID]['NumberOfLikes'] = likeSaveInfo.numLikes;\n    props.setDatabase(newDatabase);\n  }\n\n\n  // if the user has liked this doctor before: filled heart, otherwise outlined heart\n  const LikeIcon = (likeSaveInfo.hasLiked) ? FavoriteIcon : FavoriteBorderOutlinedIcon;\n\n\n\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SAVE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // when the save button is pressed\n  const toggleSaveUnsave = () => {\n    // the user has saved this doctor before\n    if (likeSaveInfo.hasSaved) {\n      let savedListCopy = likeSaveInfo.savedList;\n      let index = savedListCopy.findIndex(doctor => doctor.username == props.targetDoc.userName);\n      // remove this doctor from the user saved list\n      savedListCopy.splice(index, 1);\n\n      setState({\n        ...likeSaveInfo,\n        savedList: savedListCopy,\n        hasSaved: false,\n      })\n    } else {\n      // the newly saved doctor's information to be added to the user's saved doctor list\n      let newDocInfo = {\n        hospital: props.targetDoc.Hospital,\n        // imgSrc: props.targetDoc.imgSrc,\n        languages: props.targetDoc.language,\n        likes: likeSaveInfo.numLikes,\n        name: props.targetDoc.DocName,\n        specialty: props.targetDoc.specialty,\n        type: props.targetDoc.type,\n        username: props.targetDoc.userName\n      };\n      likeSaveInfo.savedList.push(newDocInfo);\n\n      // setState(prevState => ({\n      //   // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n      //   ...likeSaveInfo,\n      //   prevState.hasSaved = true;\n\n      // }))\n\n      setState(\n        // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        (prevState) => {\n          prevState.hasSaved = true;\n          return ({\n            ...prevState\n          })\n        }\n      )\n    }\n    props.changeDocSaveStatus(likeSaveInfo.savedList);\n  }\n\n  // triggered if the save button is pressed (which sets state)\n  // useEffect(() => {\n  //   if (renderCount == 1) {\n  //     return toggleSave();\n  //   }\n  // }, [likeSaveInfo.hasSaved, likeSaveInfo.savedList]);\n\n\n  // const toggleSave = () => {\n  //   waitSaveUpdate()\n  //     .then((res) => {\n  //       props.changeDocSaveStatus(res);\n  //     }).catch((error) => {\n  //       console.error(error);\n  //     });\n  // }\n\n  let waitSaveUpdate = async () => {\n    let savedList = await likeSaveInfo.savedList;\n    return savedList;\n  }\n\n\n  // if the user has saved this doctor before: filled bookmark, otherwise outlined bookmark\n  const SaveIcon = (likeSaveInfo.hasSaved) ? BookmarkIcon : BookmarkBorderOutlinedIcon;\n\n\n\n\n  // -------------------------------------------------------------------- //\n    // ----------------------------Report---------------------------------------- //\n  // 新加 5/14\n  //report弹窗：填的表\n  const [reportOpen, setReportOpen] = React.useState(false);\n  const handleReportOpen = () => {\n    setReportOpen(true);\n  };\n\n  // 关闭report的表\n  const handleReportClose = () => {\n    setReportOpen(false);\n  };\n\n  const handleReportReason = (event) => {\n    const oneReason = event.target.value;\n    setState({\n      ...likeSaveInfo,\n      oneReason: oneReason\n    });\n  };\n\n\n  const reported = likeSaveInfo.reportedList.includes(props.targetDoc.userName);\n// reportedList\n  // send report to database\n  const submitReport = () => {\n    const oneReason = likeSaveInfo.oneReason;\n    const reasons = likeSaveInfo.reportReasonsList;\n    reasons.push(oneReason);\n    let reportedList = likeSaveInfo.reportedList;\n    if (!reported) {\n      reportedList.push(props.targetDoc.userName);\n    }\n\n    // send to specialty doctor account\n    const oneReport = {\n      reportCount: likeSaveInfo.numReports + 1,\n      reportReasons: reasons,\n\n      // *******hard code \n      specialty: props.targetDoc.specialty,\n      hospital: props.targetDoc.Hospital,\n      username: props.targetDoc.userName\n    };\n    props.report(oneReport);\n\n    // send to user account\n    const sendToAccount = {\n      reportedDoctors: reportedList,\n    };\n    props.sendReportedDoctors(sendToAccount);\n\n    setReportOpen(false);\n    setState((prevState) => ({\n      ...likeSaveInfo,\n      numReports: prevState.numReports + 1,\n      reportReasonsList: [prevState.reportReasonsList, oneReason],\n      oneReason: \"\",\n      reportedList: [prevState.reportedList, props.targetDoc.userName],\n    }));\n  };\n\n\n\n\n\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // ~~~~~~~~~~~ign up or login in if want to save or report~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // 弹窗去signin/signup如果要report没有login\n  const [loginOpen, setLoginOpen] = React.useState({\n    open: false,\n    // keep track of what function the user selects (report, like, save, tag)\n    userOption: \"\",\n  });\n\n  const handleLoginOpen = (option) => {\n    setLoginOpen({\n      open: true,\n      userOption: option,\n    });\n  };\n\n  const handleLoginClose = () => {\n    setLoginOpen({\n      ...loginOpen,\n      open: false,\n    });\n  };\n\n\nlet Icon = FavoriteIcon;\n\nif (loginOpen.userOption == \"Recommend\") {\n  Icon = FavoriteIcon;\n} else if (loginOpen.userOption == \"Save\") {\n  Icon = BookmarkBorderOutlinedIcon;\n} else if (loginOpen.userOption == \"Report\") {\n  Icon = ErrorOutlineOutlinedIcon;\n} else {\n  Icon = EditOutlinedIcon;\n}\n\n  // He Chen\n  let returnPageDesc;\n  if (props.backTo == \"resultsPage\"){\n    returnPageDesc = \"Result Page\";\n  } else if (props.backTo == \"hospprofile\") {\n    returnPageDesc = \"Hospital Profile\";\n  } else if (props.backTo == \"likeHistory\"){\n    returnPageDesc = \"Like History\";\n  } else {\n    returnPageDesc = \"Saved\";\n  }\n\n  console.log(props.targetDoc)\n\n  return (\n    <div>\n      <div className={classes.covidBox}>\n        <CovidAlert />\n      </div>\n\n      {/* For 'return to doctors' button (需要换成return to hospital， depending on user之前是怎么搜的) */}\n      <Box display=\"flex\" mt={3} mb={3} className={classes.returnBox}>\n        <Button\n          style={{ fontSize: 16, textTransform: \"none\" }}\n          color=\"primary\"\n          onClick={backToRes}\n          startIcon={<ArrowBackIosIcon />}\n        >\n          Return to {returnPageDesc}\n        </Button>\n      </Box>\n\n      {/* 手机屏幕才会出现的格式：doctor照片在上面 ，like icon 在右上角*/}\n      <Hidden smUp>\n        <Grid container display=\"flex\" justifyContent=\"center\">\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6} align=\"center\">\n            {/* doctor image */}\n            <div style={{ width: 150, height: 180 }}>\n              <img className={classes.img} src={props.targetDoc[\"imgSrc\"]} alt=\"docimg\" />\n            </div>\n          </Grid>\n          {/* Like icon + number of likes */}\n          <Grid item xs={3}>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              {/* 如果登入了，爱心icon成了iconButton，可以点 , 但是我没写logic, 目前点了的话，这个button不会从\n              <FavoriteBorderOutlinedIcon> 换成<FavoriteIcon>, likeCount也不会增加，麻烦你了\n              */}\n              {authenticated ? (\n                <IconButton onClick={toggleLikeUnlike}>\n                  <LikeIcon style={{ color: \"red\" }} />\n                </IconButton>\n              ) : (\n                  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的\n                  <Fragment>\n                    <IconButton onClick={() => handleLoginOpen(\"Recommend\")}>\n                      <FavoriteBorderOutlinedIcon style={{ color: \"red\" }} />\n                    </IconButton>\n                  </Fragment>\n                )}\n              {/* like count */}\n              <Typography variant=\"body2\" color=\"primary\">\n                {likeSaveInfo.numLikes.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Hidden>\n\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={5} md={4}>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            {/* 大屏幕会出现的格式：doctor照片在左边 */}\n            <Hidden xsDown>\n              {/* doctor image */}\n              <div style={{ width: 200, height: 250 }}>\n                <img className={classes.img} src={props.targetDoc[\"imgSrc\"]} alt=\"docimg\" />\n              </div>\n            </Hidden>\n\n            {/* 手机屏幕出现的格式：doctor's name 在照片下面 */}\n            <Hidden smUp>\n              <Typography variant=\"h5\" color=\"primary\" style={{ margin: 20 }}>\n                {\"Dr.\" + props.targetDoc[\"DocName\"]}\n              </Typography>\n            </Hidden>\n\n            <Box display=\"flex\" mt={2}>\n\n              {/* report button */}\n\n              {authenticated ? (\n                <Button\n                  disabled={reported}\n                  startIcon={<ErrorOutlineOutlinedIcon />}\n                  style={{ textTransform: \"none\" }}\n                  color=\"primary\"\n                  onClick={handleReportOpen}\n                >\n                  Report\n              </Button>\n              ) : (\n                  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的 （这里新的东西比原来长很多 麻烦小心对一下位置）\n                <Fragment>\n                  <Button\n                    startIcon={<ErrorOutlineOutlinedIcon />}\n                    style={{ textTransform: \"none\" }}\n                    color=\"primary\"\n                    onClick={() => handleLoginOpen(\"Report\")}\n                  >\n                    Report\n                </Button>\n\n                  {/* login dialog asking user to sign in if they want to report, save, or like */}\n                  <Dialog\n                    fullWidth=\"true\"\n                    maxWidth=\"sm\"\n                    open={loginOpen.open}\n                    onClose={handleLoginClose}\n                  >\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Box flexGrow={1}>\n                        <DialogTitle>{loginOpen.userOption} a Doctor</DialogTitle>\n                      </Box>\n                      <Box>\n                        <DialogActions>\n                          <IconButton\n                            size=\"small\"\n                            onClick={handleLoginClose}\n                            color=\"primary\"\n                          >\n                            <CloseIcon />\n                          </IconButton>\n                        </DialogActions>\n                      </Box>\n                    </Box>\n                    <DialogContent>\n                      <Box\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                      >\n                        <Icon style={{ color: \"red\" }} />\n                        <br></br>\n                        <Typography variant=\"body1\" align=\"center\">\n                          You need to sign in to {loginOpen.userOption.toLowerCase()} this doctor\n                        </Typography>\n                      </Box>\n                      <Box display=\"flex\" mt={2} mb={2}>\n                        <Button\n                          className={classes.signUpInButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ textTransform: \"none\" }}\n                          fullWidth\n                          component={Link}\n                          to=\"/login\"\n                        >\n                          Log in\n                        </Button>\n                      </Box>\n\n                      <Box display=\"flex\" mb={2}>\n                        <Button\n                          className={classes.signUpInButton}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ textTransform: \"none\" }}\n                          fullWidth\n                          component={Link}\n                          to=\"/signup\"\n                        >\n                          Sign up\n                        </Button>\n                      </Box>\n                    </DialogContent>\n                  </Dialog>\n\n                </Fragment>\n              )}\n\n                {/* report dialogue 新加的 5/10/2020 */}\n              <Dialog\n                fullWidth=\"true\"\n                maxWidth=\"sm\"\n                open={reportOpen}\n                onClose={handleReportClose}\n              >\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Box flexGrow={1}>\n                    <DialogTitle>Report</DialogTitle>\n                  </Box>\n                  <Box>\n                    <DialogActions>\n                      <IconButton\n                        size=\"small\"\n                        onClick={handleReportClose}\n                        color=\"primary\"\n                      >\n                        <CloseIcon />\n                      </IconButton>\n                    </DialogActions>\n                  </Box>\n                </Box>\n                <DialogContent>\n                  <Typography variant=\"body1\">\n                    Please provide a reason for why you are reporting this\n                    doctor:\n                  </Typography>\n                  <br></br>\n                  <TextField\n                    fullWidth\n                    multiline\n                    required\n                    variant=\"outlined\"\n                    label=\"Reason\"\n                    rows={5}\n                    onChange={handleReportReason}\n                  />\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    className={classes.reportButton}\n                    disabled={!likeSaveInfo.oneReason}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\" }}\n                    onClick={submitReport}\n                  >\n                    Submit\n                  </Button>\n                </DialogActions>\n              </Dialog>\n\n\n              {/* save button */}\n\n              {authenticated ? (\n                <Button\n                  startIcon={<SaveIcon />}\n                  style={{ textTransform: \"none\" }}\n                  color=\"primary\"\n                  onClick={toggleSaveUnsave}\n                >\n                  Save\n              </Button>\n              ) : (\n                <Fragment>\n                  <Button\n                    startIcon={<SaveIcon />}\n                    style={{ textTransform: \"none\" }}\n                    color=\"primary\"\n                    onClick={() => handleLoginOpen(\"Save\")}\n                  >\n                    Save\n                </Button>\n              </Fragment>\n                )}\n\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={6}>\n          {/* 大屏幕会出现的格式：doctor name 在右边 */}\n          <Hidden xsDown>\n            <Typography variant=\"h5\" color=\"primary\">\n              {\"Dr.\" + props.targetDoc[\"DocName\"]}\n            </Typography>\n          </Hidden>\n          <br></br>\n\n          {/* 手机幕会出现的格式：灰色比较粗的divider line */}\n          <Hidden smUp>\n            <hr className={classes.line}></hr>\n          </Hidden>\n\n          {/* Doctor basic info */}\n          <Box className={classes.profileGrid} mt={3} mb={3}>\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Specialty: </strong>{\" \"}\n              <span>{props.targetDoc[\"Specialty\"]} </span>\n            </Typography>\n\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Years of Practice: </strong>{\" \"}\n              <span>{props.targetDoc[\"YearsofPractice\"] + \" years\"} </span>\n            </Typography>\n\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Hospital: </strong>\n              <span>{props.targetDoc[\"Hospital\"]}</span>\n              {/* private tag */}\n              <Chip\n                style={{ marginLeft: 10 }}\n                color=\"primary\"\n                size=\"small\"\n                label={props.targetDoc[\"Type\"]}\n              ></Chip>\n            </Typography>\n            <br></br>\n\n            <Box display=\"flex\" flexDirection=\"row\" mt={1}>\n              <LocationOnOutlinedIcon style={{ marginRight: 10 }} />\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <span>{props.targetDoc[\"Address\"]}</span>\n              </Typography>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\" mt={1}>\n              <PhoneOutlinedIcon style={{ marginRight: 10 }} />\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <span>{props.targetDoc[\"Phone\"]}</span>\n              </Typography>\n            </Box>\n          </Box>\n          {console.log(props.targetDoc)}\n\n          <DocTags tagInfo={props.targetDoc[\"tags\"]} targetDoc={props.targetDoc} handleLoginOpen={handleLoginOpen} />\n        </Grid>\n\n        <Grid item xs={12} sm={1} md={2}>\n          {/* 大屏幕会出现的格式：like icon在最右边 */}\n          <Hidden xsDown>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              {/* 如果登入了，爱心icon成了iconButton，可以点 , 但是我没写logic, 目前点了的话，这个button不会从\n              <FavoriteBorderOutlinedIcon> 换成<FavoriteIcon>, likeCount也不会增加，麻烦你了\n              */}\n              {authenticated ? (\n                <IconButton onClick={toggleLikeUnlike}>\n                  <LikeIcon style={{ color: \"red\" }} />\n                </IconButton>\n              ) : (\n                  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的\n                  <Fragment>\n                    <IconButton onClick={() => handleLoginOpen(\"Recommend\")}>\n                      <FavoriteBorderOutlinedIcon style={{ color: \"red\" }} />\n                    </IconButton>\n                  </Fragment>\n\n                )}\n              <Typography variant=\"body2\" color=\"primary\">\n                {likeSaveInfo.numLikes.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n              </Typography>\n            </Box>\n          </Hidden>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nDocInfo.propTypes = {\n  // like\n  changeDocLikeStatus: PropTypes.func.isRequired,\n  updateDoctorLikes: PropTypes.func.isRequired,\n\n  // save\n  changeDocSaveStatus: PropTypes.func.isRequired,\n\n  // report\n  sendReportedDoctors: PropTypes.func.isRequired,\n  report: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.user.authenticated,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.searchInfo\n});\n\nconst mapActionsToProps = {\n  // like\n  changeDocLikeStatus,\n  updateDoctorLikes,\n\n  // save\n  changeDocSaveStatus,\n\n  // report\n  sendReportedDoctors,\n  report\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(DocInfo);\n"]},"metadata":{},"sourceType":"module"}
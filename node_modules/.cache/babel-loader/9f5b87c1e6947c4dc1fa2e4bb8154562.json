{"ast":null,"code":"var _jsxFileName = \"/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/components/GeneralSignup.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\"; //mui stuff\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; //redux  6:45\n\nimport { connect } from \"react-redux\"; //bring in action\n\nimport { signupGeneralUser } from \"../redux/actions/userActions\";\n\nconst styles = theme => ({ ...theme.auth\n});\n\nclass GeneralSignup extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const newGeneralUserData = {\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword\n      };\n      this.props.signupGeneralUser(newGeneralUserData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.UI.errors) {\n      return {\n        errors: props.UI.errors\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    //destructuring\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"username\",\n      name: \"username\",\n      type: \"text\",\n      label: \"Username\",\n      className: classes.textField,\n      helperText: errors.handle,\n      error: errors.handle ? true : false,\n      value: this.state.handle,\n      onChange: this.handleChange,\n      fullWidth: true,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email address\",\n      className: classes.textField,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textField,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      type: \"password\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      helperText: errors.confirmPassword,\n      error: errors.confirmPassword ? true : false,\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      fullWidth: true,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.customError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.button,\n      fullWidth: true,\n      size: \"large\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, \"Sign up\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \"Already have an account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      style: {\n        color: \"#003367\"\n      },\n      className: classes.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \"Log in\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nGeneralSignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  signupGeneralUser: PropTypes.func.isRequired\n}; //take global state and take what we need (right now we have user, data, ui), only need user and ui\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  signupGeneralUser\n})(withStyles(styles)(GeneralSignup)));","map":{"version":3,"sources":["/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/components/GeneralSignup.js"],"names":["React","Component","Link","withRouter","withStyles","PropTypes","Grid","Typography","TextField","Button","CircularProgress","connect","signupGeneralUser","styles","theme","auth","GeneralSignup","constructor","handleSubmit","event","preventDefault","newGeneralUserData","username","state","email","password","confirmPassword","props","history","handleChange","setState","target","name","value","errors","getDerivedStateFromProps","UI","render","classes","loading","form","textField","handle","general","customError","button","progress","color","link","propTypes","object","isRequired","user","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\n\n//mui stuff\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n//redux  6:45\nimport { connect } from \"react-redux\";\n//bring in action\nimport { signupGeneralUser } from \"../redux/actions/userActions\";\n\nconst styles = (theme) => ({\n  ...theme.auth,\n});\n\nclass GeneralSignup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.UI.errors) {\n      return {\n        errors: props.UI.errors,\n      };\n    }\n    return null;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newGeneralUserData = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n    this.props.signupGeneralUser(newGeneralUserData, this.props.history);\n  };\n\n  //5:30\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    //destructuring\n    const {\n      classes,\n      UI: { loading },\n    } = this.props;\n    const { errors } = this.state;\n    return (\n      <div>\n        <Grid container className={classes.form}>\n          <Grid item sm />\n          <Grid item sm>\n            <form noValidate onSubmit={this.handleSubmit}>\n              <TextField\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                label=\"Username\"\n                className={classes.textField}\n                helperText={errors.handle}\n                error={errors.handle ? true : false}\n                value={this.state.handle}\n                onChange={this.handleChange}\n                fullWidth\n                variant=\"outlined\"\n              />\n\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                label=\"Email address\"\n                className={classes.textField}\n                helperText={errors.email}\n                error={errors.email ? true : false}\n                value={this.state.email}\n                onChange={this.handleChange}\n                fullWidth\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                className={classes.textField}\n                helperText={errors.password}\n                error={errors.password ? true : false}\n                value={this.state.password}\n                onChange={this.handleChange}\n                fullWidth\n                variant=\"outlined\"\n              />\n\n              <TextField\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                label=\"Confirm Password\"\n                className={classes.textField}\n                helperText={errors.confirmPassword}\n                error={errors.confirmPassword ? true : false}\n                value={this.state.confirmPassword}\n                onChange={this.handleChange}\n                fullWidth\n                variant=\"outlined\"\n              />\n\n              {errors.general && (\n                <Typography variant=\"body2\" className={classes.customError}>\n                  {errors.general}\n                </Typography>\n              )}\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                fullWidth\n                size=\"large\"\n                disabled={loading}\n              >\n                Sign up\n                {loading && (\n                  <CircularProgress\n                    size={30}\n                    className={classes.progress}\n                    color=\"secondary\"\n                  />\n                )}\n              </Button>\n\n              <small>\n                Already have an account?{\" \"}\n                <Link\n                  to=\"/login\"\n                  style={{ color: \"#003367\" }}\n                  className={classes.link}\n                >\n                  Log in\n                </Link>\n              </small>\n            </form>\n          </Grid>\n          <Grid item sm />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nGeneralSignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  signupGeneralUser: PropTypes.func.isRequired,\n};\n\n//take global state and take what we need (right now we have user, data, ui), only need user and ui\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { signupGeneralUser })(\n    withStyles(styles)(GeneralSignup)\n  )\n);\n"]},"metadata":{},"sourceType":"module"}
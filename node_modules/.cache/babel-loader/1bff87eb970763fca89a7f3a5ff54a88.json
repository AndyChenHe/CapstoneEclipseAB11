{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/finalCapstoneII/CapstoneEclipseAB11/src/Components/results/FiltersFunctions.js\";\nimport React, { useEffect } from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Checkbox from \"@material-ui/core/Checkbox\"; //These filters functions are imported in 'SearchResult.js'\n// Filter: hospital type\n\nexport function HospitalType(props) {\n  const [value, setValue] = React.useState(\"both\");\n\n  const handleChange = event => {\n    props.filterHosType(event.target.value);\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Hospital Type\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 63\n    }\n  }), /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"hospital-type\",\n    name: \"hospital-type\",\n    value: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"both\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 49\n      }\n    }),\n    label: \"Both\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"public\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 51\n      }\n    }),\n    label: \"Public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"private\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 52\n      }\n    }),\n    label: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n} // Filter: languages\n\nexport function Languages(props) {\n  const [state, setState] = React.useState({\n    English: false,\n    Malay: false,\n    Mandarin: false,\n    Tamil: false,\n    Cantonese: false\n  });\n  const [changeLanguage, setChangeLanguage] = React.useState(true);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n    setChangeLanguage(true);\n  };\n\n  useEffect(() => {\n    if (changeLanguage) {\n      let languagesList = [];\n\n      for (let key in state) {\n        if (state[key]) {\n          languagesList.push(key);\n        }\n      }\n\n      console.log(languagesList);\n      props.filterLanguageList(languagesList);\n    }\n\n    return setChangeLanguage(false);\n  });\n  const {\n    English,\n    Malay,\n    Mandarin,\n    Tamil,\n    Cantonese\n  } = state;\n  return /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Languages\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: English,\n      onChange: handleChange,\n      name: \"English\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }),\n    label: \"English\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: Malay,\n      onChange: handleChange,\n      name: \"Malay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }),\n    label: \"Malay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: Mandarin,\n      onChange: handleChange,\n      name: \"Mandarin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }),\n    label: \"Mandarin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: Tamil,\n      onChange: handleChange,\n      name: \"Tamil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }),\n    label: \"Tamil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: Cantonese,\n      onChange: handleChange,\n      name: \"Cantonese\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }),\n    label: \"Cantonese\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })));\n} // Filter: years of practice\n\nexport function YearsOfPractice(props) {\n  const [state, setState] = React.useState({\n    oneyear: false,\n    onetofive: false,\n    sixtoten: false,\n    eleventotwenty: false,\n    twenty: false\n  });\n  const [yearChange, setYearChange] = React.useState(false);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n    setYearChange(true);\n  };\n\n  useEffect(() => {\n    if (yearChange) {\n      let yearRangeTrans = {\n        oneyear: [0, 1],\n        onetofive: [1, 5],\n        sixtoten: [6, 10],\n        eleventotwenty: [11, 20],\n        twenty: [20, 100]\n      };\n      let yearRange = [1000, -1];\n\n      for (let key in state) {\n        if (state[key]) {\n          let min = yearRangeTrans[key][0];\n          let max = yearRangeTrans[key][1];\n\n          if (yearRange[0] >= min) {\n            yearRange[0] = min;\n          }\n\n          if (yearRange[1] <= max) {\n            yearRange[1] = max;\n          }\n        }\n      }\n\n      props.filterYear(yearRange);\n    }\n\n    return setYearChange(false);\n  });\n  const {\n    oneyear,\n    onetofive,\n    sixtoten,\n    eleventotwenty,\n    twenty\n  } = state;\n  return /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, \"Years of Practice\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: oneyear,\n      onChange: handleChange,\n      name: \"oneyear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }),\n    label: \"< 1 year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: onetofive,\n      onChange: handleChange,\n      name: \"onetofive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }),\n    label: \"1 - 5 years\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: sixtoten,\n      onChange: handleChange,\n      name: \"sixtoten\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }),\n    label: \"6 - 10 years\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: eleventotwenty,\n      onChange: handleChange,\n      name: \"eleventotwenty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }),\n    label: \"11 - 20 years\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: twenty,\n      onChange: handleChange,\n      name: \"twenty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }),\n    label: \"> 20 years\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  })));\n} // Filter: location\n\nexport function Location(props) {\n  const [state, setState] = React.useState({\n    lessThan30mins: false,\n    between30minsTo1hour: false,\n    between1hourTo2hours: false,\n    between2hoursTo3hours: false,\n    over3hours: false\n  });\n  const [timeDomain, settimeDomain] = React.useState(true);\n  useEffect(() => {\n    if (timeDomain) {\n      console.log(state);\n      let timeRangeTrans = {\n        lessThan30mins: [0, 0.5],\n        between30minsTo1hour: [0.5, 1],\n        between1hourTo2hours: [1, 2],\n        between2hoursTo3hours: [2, 3],\n        over3hours: [3, 1000]\n      };\n      let timeRange = [1000, -1];\n      console.log(timeRangeTrans);\n\n      for (let key in state) {\n        if (state[key]) {\n          let min = timeRangeTrans[key][0];\n          let max = timeRangeTrans[key][1];\n\n          if (timeRange[0] >= min) {\n            timeRange[0] = min;\n          }\n\n          if (timeRange[1] <= max) {\n            timeRange[1] = max;\n          }\n        }\n      }\n\n      props.filterDrivingTime(timeRange);\n    }\n\n    return settimeDomain(false);\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n    settimeDomain(true);\n  };\n\n  const {\n    lessThan30mins,\n    between30minsTo1hour,\n    between1hourTo2hours,\n    between2hoursTo3hours,\n    over3hours\n  } = state;\n  return /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, \"Driving time\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: lessThan30mins,\n      onChange: handleChange,\n      name: \"lessThan30mins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }\n    }),\n    label: \"< 30mins\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: between30minsTo1hour,\n      onChange: handleChange,\n      name: \"between30minsTo1hour\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    }),\n    label: \"30mins - 1hour\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: between1hourTo2hours,\n      onChange: handleChange,\n      name: \"between1hourTo2hours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }),\n    label: \"1hour - 2hours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: between2hoursTo3hours,\n      onChange: handleChange,\n      name: \"between2hoursTo3hours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }),\n    label: \"2hours - 3hours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: over3hours,\n      onChange: handleChange,\n      name: \"over3hours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }),\n    label: \"> 3hours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/andychenhe/Desktop/finalCapstoneII/CapstoneEclipseAB11/src/Components/results/FiltersFunctions.js"],"names":["React","useEffect","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","FormGroup","Checkbox","HospitalType","props","value","setValue","useState","handleChange","event","filterHosType","target","Languages","state","setState","English","Malay","Mandarin","Tamil","Cantonese","changeLanguage","setChangeLanguage","name","checked","languagesList","key","push","console","log","filterLanguageList","YearsOfPractice","oneyear","onetofive","sixtoten","eleventotwenty","twenty","yearChange","setYearChange","yearRangeTrans","yearRange","min","max","filterYear","Location","lessThan30mins","between30minsTo1hour","between1hourTo2hours","between2hoursTo3hours","over3hours","timeDomain","settimeDomain","timeRangeTrans","timeRange","filterDrivingTime"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n//These filters functions are imported in 'SearchResult.js'\n// Filter: hospital type\nexport function HospitalType(props) {\n  const [value, setValue] = React.useState(\"both\");\n\n  const handleChange = (event) => {\n    props.filterHosType(event.target.value);\n    setValue(event.target.value);\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Hospital Type</FormLabel> <br></br>\n      <RadioGroup\n        aria-label=\"hospital-type\"\n        name=\"hospital-type\"\n        value={value}\n        onChange={handleChange}\n      >\n        <FormControlLabel value=\"both\" control={<Radio />} label=\"Both\" />\n        <FormControlLabel value=\"public\" control={<Radio />} label=\"Public\" />\n        <FormControlLabel value=\"private\" control={<Radio />} label=\"Private\" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n\n// Filter: languages\nexport function Languages(props) {\n  const [state, setState] = React.useState({\n    English: false,\n    Malay: false,\n    Mandarin: false,\n    Tamil: false,\n    Cantonese: false,\n  });\n  const [changeLanguage, setChangeLanguage] = React.useState(true);\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    setChangeLanguage(true);\n  };\n\n  useEffect(()=>{\n    if(changeLanguage){\n      let languagesList = [];\n      for (let key in state){\n        if(state[key]){\n          languagesList.push(key);\n        }\n      }\n      console.log(languagesList);\n      props.filterLanguageList(languagesList) \n    }\n    return setChangeLanguage(false);\n\n  });\n\n  const { English, Malay, Mandarin, Tamil, Cantonese } = state;\n  \n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Languages</FormLabel>\n      <br></br>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={English}\n              onChange={handleChange}\n              name=\"English\"\n            />\n          }\n          label=\"English\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox checked={Malay} onChange={handleChange} name=\"Malay\" />\n          }\n          label=\"Malay\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={Mandarin}\n              onChange={handleChange}\n              name=\"Mandarin\"\n            />\n          }\n          label=\"Mandarin\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox checked={Tamil} onChange={handleChange} name=\"Tamil\" />\n          }\n          label=\"Tamil\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={Cantonese}\n              onChange={handleChange}\n              name=\"Cantonese\"\n            />\n          }\n          label=\"Cantonese\"\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n\n// Filter: years of practice\nexport function YearsOfPractice(props) {\n  const [state, setState] = React.useState({\n    oneyear: false,\n    onetofive: false,\n    sixtoten: false,\n    eleventotwenty: false,\n    twenty: false,\n  });\n\n  const [yearChange, setYearChange] = React.useState(false);\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    setYearChange(true);\n  };\n\n  useEffect(()=>{\n    if(yearChange){\n      let yearRangeTrans = {\n        oneyear: [0,1],\n        onetofive: [1,5],\n        sixtoten: [6,10],\n        eleventotwenty: [11,20],\n        twenty: [20,100],\n      };\n      let yearRange = [1000,-1];\n      for (let key in state){\n        if(state[key]){\n          let min = yearRangeTrans[key][0];\n          let max = yearRangeTrans[key][1];\n          if(yearRange[0] >= min){\n            yearRange[0] = min;\n          }\n          if (yearRange[1] <= max){\n            yearRange[1] = max;\n          }\n        }\n      }\n      props.filterYear(yearRange);\n    }\n    return setYearChange(false);\n\n  });\n\n  const { oneyear, onetofive, sixtoten, eleventotwenty, twenty } = state;\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Years of Practice</FormLabel>\n      <br></br>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Checkbox checked={oneyear} onChange={handleChange} name=\"oneyear\" />\n          }\n          label=\"< 1 year\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={onetofive}\n              onChange={handleChange}\n              name=\"onetofive\"\n            />\n          }\n          label=\"1 - 5 years\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={sixtoten}\n              onChange={handleChange}\n              name=\"sixtoten\"\n            />\n          }\n          label=\"6 - 10 years\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={eleventotwenty}\n              onChange={handleChange}\n              name=\"eleventotwenty\"\n            />\n          }\n          label=\"11 - 20 years\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox checked={twenty} onChange={handleChange} name=\"twenty\" />\n          }\n          label=\"> 20 years\"\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n\n// Filter: location\nexport function Location(props) {\n  const [state, setState] = React.useState({\n    lessThan30mins: false,\n    between30minsTo1hour: false,\n    between1hourTo2hours: false,\n    between2hoursTo3hours: false,\n    over3hours: false\n  });\n\n  const [timeDomain, settimeDomain] = React.useState(true);\n\n  useEffect(()=>{\n    if(timeDomain){\n      console.log(state);\n      let timeRangeTrans = {\n        lessThan30mins: [0,0.5],\n        between30minsTo1hour: [0.5,1],\n        between1hourTo2hours: [1,2],\n        between2hoursTo3hours: [2,3],\n        over3hours: [3,1000],\n      };\n      let timeRange = [1000,-1];\n      console.log(timeRangeTrans);\n      for (let key in state){\n        if(state[key]){\n          let min = timeRangeTrans[key][0];\n          let max = timeRangeTrans[key][1];\n          if(timeRange[0] >= min){\n            timeRange[0] = min;\n          }\n          if (timeRange[1] <= max){\n            timeRange[1] = max;\n          }\n        }\n      }\n      props.filterDrivingTime(timeRange);\n    }\n    return settimeDomain(false);\n\n  });\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    settimeDomain(true);\n  };\n\n  const {\n    lessThan30mins,\n    between30minsTo1hour,\n    between1hourTo2hours,\n    between2hoursTo3hours,\n    over3hours\n  } = state;\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Driving time</FormLabel>\n      <br></br>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Checkbox checked={lessThan30mins} onChange={handleChange} name=\"lessThan30mins\" />\n          }\n          label=\"< 30mins\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={between30minsTo1hour}\n              onChange={handleChange}\n              name=\"between30minsTo1hour\"\n            />\n          }\n          label=\"30mins - 1hour\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={between1hourTo2hours}\n              onChange={handleChange}\n              name=\"between1hourTo2hours\"\n            />\n          }\n          label=\"1hour - 2hours\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={between2hoursTo3hours}\n              onChange={handleChange}\n              name=\"between2hoursTo3hours\"\n            />\n          }\n          label=\"2hours - 3hours\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox checked={over3hours} onChange={handleChange} name=\"over3hours\" />\n          }\n          label=\"> 3hours\"\n        />\n      </FormGroup>\n  </FormControl>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
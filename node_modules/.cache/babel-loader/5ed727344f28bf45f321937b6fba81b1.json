{"ast":null,"code":"import _objectSpread from\"/Users/andychenhe/Desktop/may8-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/andychenhe/Desktop/may8-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import TextField from\"@material-ui/core/TextField\";import Autocomplete from\"@material-ui/lab/Autocomplete\";import LocationOnIcon from\"@material-ui/icons/LocationOn\";import Grid from\"@material-ui/core/Grid\";import Typography from\"@material-ui/core/Typography\";import{makeStyles}from\"@material-ui/core/styles\";import parse from\"autosuggest-highlight/parse\";import throttle from\"lodash/throttle\";function loadScript(src,position,id){if(!position){return;}var script=document.createElement(\"script\");script.setAttribute(\"async\",\"\");script.setAttribute(\"id\",id);script.src=src;position.appendChild(script);}var autocompleteService={current:null};var useStyles=makeStyles(function(theme){return{icon:{color:theme.palette.text.secondary,marginRight:theme.spacing(2)},inputRoot:{\"& .MuiFilledInput-root\":{backgroundColor:\"rgba(255,255,255)\",borderRadius:4},flex:1},autocompelte:{},search:{}};});// Autocomplete + Google MAP Api for Location search box\nexport default function Location(props){var classes=useStyles();var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),inputValue=_React$useState2[0],setInputValue=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),options=_React$useState4[0],setOptions=_React$useState4[1];var loaded=React.useRef(false);if(typeof window!==\"undefined\"&&!loaded.current){if(!document.querySelector(\"#google-maps\")){loadScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDIrcr-B4aW4aiYZDc2_v-egqfKPvpjD_g&libraries=places&region=MY\",document.querySelector(\"head\"),\"google-maps\");}loaded.current=true;}var handleChange=function handleChange(event){setInputValue(event.target.value);};var handleUserSelection=function handleUserSelection(targetLocation){var targetValue='';if(targetLocation){targetValue=targetLocation.description;}props.getLocationValue(targetValue);};var fetch=React.useMemo(function(){return throttle(function(request,callback){autocompleteService.current.getPlacePredictions(request,callback);},200);},[]);React.useEffect(function(){var active=true;if(!autocompleteService.current&&window.google){autocompleteService.current=new window.google.maps.places.AutocompleteService();}if(!autocompleteService.current){return undefined;}if(inputValue===\"\"){setOptions([]);return undefined;}fetch({input:inputValue},function(results){if(active){setOptions(results||[]);}});return function(){active=false;};},[inputValue,fetch]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Autocomplete,{onChange:function onChange(event,value){handleUserSelection(value);},className:classes.autocomplete,getOptionLabel:function getOptionLabel(option){return typeof option===\"string\"?option:option.description;},filterOptions:function filterOptions(x){return x;},options:options,autoComplete:true,includeInputInList:true,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"Add city, state, or postal code\",onChange:handleChange,variant:\"filled\",className:classes.inputRoot,InputProps:_objectSpread({},params.InputProps,{disableUnderline:true})}));},renderOption:function renderOption(option){var matches=option.structured_formatting.main_text_matched_substrings;var parts=parse(option.structured_formatting.main_text,matches.map(function(match){return[match.offset,match.offset+match.length];}));var allOptions=parts.map(function(part,index){return/*#__PURE__*/React.createElement(\"span\",{key:index,style:{fontWeight:part.highlight?700:400}},part.text);});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true,alignItems:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(LocationOnIcon,{className:classes.icon})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},allOptions,/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\"},option.structured_formatting.secondary_text))));}}));}","map":{"version":3,"sources":["/Users/andychenhe/Desktop/may8-test/src/Components/home/Location.js"],"names":["React","TextField","Autocomplete","LocationOnIcon","Grid","Typography","makeStyles","parse","throttle","loadScript","src","position","id","script","document","createElement","setAttribute","appendChild","autocompleteService","current","useStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","inputRoot","backgroundColor","borderRadius","flex","autocompelte","search","Location","props","classes","useState","inputValue","setInputValue","options","setOptions","loaded","useRef","window","querySelector","handleChange","event","target","value","handleUserSelection","targetLocation","targetValue","description","getLocationValue","fetch","useMemo","request","callback","getPlacePredictions","useEffect","active","google","maps","places","AutocompleteService","undefined","input","results","autocomplete","option","x","params","InputProps","disableUnderline","matches","structured_formatting","main_text_matched_substrings","parts","main_text","map","match","offset","length","allOptions","part","index","fontWeight","highlight","secondary_text"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport parse from \"autosuggest-highlight/parse\";\nimport throttle from \"lodash/throttle\";\n\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n\n  const script = document.createElement(\"script\");\n  script.setAttribute(\"async\", \"\");\n  script.setAttribute(\"id\", id);\n  script.src = src;\n  position.appendChild(script);\n}\n\nconst autocompleteService = { current: null };\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n  inputRoot: {\n    \"& .MuiFilledInput-root\": {\n      backgroundColor: \"rgba(255,255,255)\",\n      borderRadius: 4,\n    },\n    flex: 1,\n  },\n  autocompelte: {},\n\n  search: {},\n}));\n\n// Autocomplete + Google MAP Api for Location search box\nexport default function Location(props) {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [options, setOptions] = React.useState([]);\n  const loaded = React.useRef(false);\n\n  if (typeof window !== \"undefined\" && !loaded.current) {\n    if (!document.querySelector(\"#google-maps\")) {\n      loadScript(\n        \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDIrcr-B4aW4aiYZDc2_v-egqfKPvpjD_g&libraries=places&region=MY\",\n        document.querySelector(\"head\"),\n        \"google-maps\"\n      );\n    }\n\n    loaded.current = true;\n  }\n\n  const handleChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleUserSelection = (targetLocation) => {\n    let targetValue = '';\n    if (targetLocation){\n      targetValue = targetLocation.description;\n    }\n    props.getLocationValue(targetValue);\n  }\n\n  const fetch = React.useMemo(\n    () =>\n      throttle((request, callback) => {\n        autocompleteService.current.getPlacePredictions(request, callback);\n      }, 200),\n    []\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!autocompleteService.current && window.google) {\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\n    }\n    if (!autocompleteService.current) {\n      return undefined;\n    }\n\n    if (inputValue === \"\") {\n      setOptions([]);\n      return undefined;\n    }\n\n    fetch({ input: inputValue }, (results) => {\n      if (active) {\n        setOptions(results || []);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [inputValue, fetch]);\n\n  return (\n    <div>\n      <Autocomplete\n        onChange={(event, value) =>{handleUserSelection(value)}}\n        className={classes.autocomplete}\n        getOptionLabel={(option) =>{\n          return typeof option === \"string\" ? option : option.description}\n        }\n        filterOptions={(x) => x}\n        options={options}\n        autoComplete\n        includeInputInList\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Add city, state, or postal code\"\n            onChange={handleChange}\n            variant=\"filled\"\n            className={classes.inputRoot}\n            InputProps={{ ...params.InputProps, disableUnderline: true }}\n          />\n        )}\n        renderOption={(option) => {\n          const matches =\n            option.structured_formatting.main_text_matched_substrings;\n          const parts = parse(\n            option.structured_formatting.main_text,\n            matches.map((match) => {\n                return [match.offset, match.offset + match.length]\n              }\n            )\n          );\n          let allOptions = parts.map((part, index) => { \n            return <span\n              key={index}\n              style={{ fontWeight: part.highlight ? 700 : 400 }}\n            >\n              {part.text}\n            </span>\n          });\n\n          return (\n            <div>\n              <Grid container alignItems=\"center\">\n                <Grid item>\n                  <LocationOnIcon className={classes.icon} />\n                </Grid>\n                <Grid item xs>\n                  {allOptions}\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    {option.structured_formatting.secondary_text}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n          );\n        }}\n      ></Autocomplete>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER // 新加5/14\n, GET_PROFILE, GET_SPEC, GET_SPECIALTY, GET_CONDITION } from \"../types\"; // initial state; when user is not logged in!\n\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  // 5/14\n  doctorData: {},\n  specData: {},\n  specialtyList: {},\n  conditionsList: {}\n}; //depending on the action type we receive, we will do something\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    /*catch action type */\n\n    /* if we get set_authenticated (call from App.js) spread the state we already have, make authenticated: true*/\n    case SET_AUTHENTICATED:\n      return { ...state,\n        authenticated: true\n      };\n\n    /*when we logout, return to initial state*/\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload\n      };\n\n    case LOADING_USER:\n      return { ...state,\n        loading: true\n      };\n    // -------------------- ------------------------- //\n    // 新加5/14\n    // GET\n\n    case GET_PROFILE:\n      return { ...state,\n        doctorData: action.payload\n      };\n\n    case GET_SPEC:\n      return { ...state,\n        specData: action.payload\n      };\n\n    case GET_SPECIALTY:\n      return { ...state,\n        specialtyList: action.payload\n      };\n\n    case GET_CONDITION:\n      return { ...state,\n        conditionsList: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Michelle/Desktop/Capstone/CapstoneEclipseAB11/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USER","GET_PROFILE","GET_SPEC","GET_SPECIALTY","GET_CONDITION","initialState","authenticated","loading","credentials","doctorData","specData","specialtyList","conditionsList","state","action","type","payload"],"mappings":"AAAA,SACEA,QADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,YAJF,CAMI;AANJ,EAOIC,WAPJ,EAQIC,QARJ,EASIC,aATJ,EAUIC,aAVJ,QAWO,UAXP,C,CAaA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAKnB;AACAC,EAAAA,UAAU,EAAE,EANO;AAOnBC,EAAAA,QAAQ,EAAE,EAPS;AAQnBC,EAAAA,aAAa,EAAE,EARI;AASnBC,EAAAA,cAAc,EAAE;AATG,CAArB,C,CAYA;;AACA,eAAe,UAAUC,KAAK,GAAGR,YAAlB,EAAgCS,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE;;AACA;AACA,SAAKjB,iBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELP,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF;;AACA,SAAKP,mBAAL;AACE,aAAOM,YAAP;;AAEF,SAAKR,QAAL;AACE,aAAO;AACLS,QAAAA,aAAa,EAAE,IADV;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGL,WAAGO,MAAM,CAACE;AAHL,OAAP;;AAKF,SAAKhB,YAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELN,QAAAA,OAAO,EAAE;AAFJ,OAAP;AAKI;AAEN;AACA;;AACA,SAAKN,WAAL;AACA,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAFd,OAAP;;AAIA,SAAKd,QAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFZ,OAAP;;AAIJ,SAAKb,aAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,aAAa,EAAEG,MAAM,CAACE;AAFjB,OAAP;;AAIF,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,cAAc,EAAEE,MAAM,CAACE;AAFlB,OAAP;;AAIA;AACE,aAAOH,KAAP;AAjDJ;AAmDD","sourcesContent":["import {\n  SET_USER,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  LOADING_USER,\n\n    // 新加5/14\n    GET_PROFILE,\n    GET_SPEC,\n    GET_SPECIALTY,\n    GET_CONDITION,\n} from \"../types\";\n\n// initial state; when user is not logged in!\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n\n  // 5/14\n  doctorData: {},\n  specData: {},\n  specialtyList: {},\n  conditionsList: {}\n};\n\n//depending on the action type we receive, we will do something\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    /*catch action type */\n    /* if we get set_authenticated (call from App.js) spread the state we already have, make authenticated: true*/\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true,\n      };\n    /*when we logout, return to initial state*/\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload,\n      };\n    case LOADING_USER:\n      return {\n        ...state,\n        loading: true,\n      };\n\n          // -------------------- ------------------------- //\n\n    // 新加5/14\n    // GET\n    case GET_PROFILE:\n    return {\n      ...state,\n      doctorData: action.payload,\n    };\n    case GET_SPEC:\n      return {\n        ...state,\n        specData: action.payload,\n      };\n  case GET_SPECIALTY:\n    return {\n      ...state,\n      specialtyList: action.payload,\n    };\n  case GET_CONDITION:\n    return {\n      ...state,\n      conditionsList: action.payload,\n    };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
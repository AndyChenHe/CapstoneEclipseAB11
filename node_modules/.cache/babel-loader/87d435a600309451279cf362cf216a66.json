{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Desktop/Capstone/CapstoneEclipseAB11/src/App.js\";\nimport React from \"react\";\nimport \"./css/login.css\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthRoute from \"./util/AuthRoute\";\nimport { useState, useEffect } from \"react\"; // material ui theme\n\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeFile from \"./util/theme\"; //redux\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { SET_AUTHENTICATED } from \"./redux/types\";\nimport { logoutUser, getUserData, getSpecProfile, getSpecList, getCondList } from \"./redux/actions/userActions\";\nimport { getAllSearchData, getAllSearchDataHospital } from \"./redux/actions/dataActions\"; // pages\n\nimport Home from \"./pages/Home\";\nimport login from \"./pages/Login\";\nimport signup from \"./pages/Signup\";\nimport covid from \"./pages/Covid\";\nimport Results from \"./pages/Results\";\nimport Docprofile from \"./pages/DocProfile\";\nimport Hospprofile from \"./pages/HospProfile\"; //新加的 5/1/2020\n\nimport Hospspecialtyprofile from \"./pages/HospSpecialtyProfile\";\nimport Account from \"./pages/Account\"; // use themeFile from theme.js\n\nconst theme = createMuiTheme(themeFile); // set up api\n\naxios.defaults.baseURL = \"https://cors-anywhere.herokuapp.com/https://us-central1-mydoc-f3cd9.cloudfunctions.net/api/\"; // backend stuff\n\nconst token = localStorage.FBIdToken;\n\nif (token) {\n  const decodedToken = jwtDecode(token); // log user out when expire\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser());\n    window.location.href = \"/login\";\n  } else {\n    store.dispatch({\n      type: SET_AUTHENTICATED\n    });\n    axios.defaults.headers.common[\"Authorization\"] = token; //deal with page refresh\n\n    store.dispatch(getUserData()); // get user data if logged in\n\n    store.dispatch(getSpecProfile());\n  }\n} // 加了这两句 （michelle)   5/14/20  search function写完之后我profile改一下variable就可以删了\n\n\nstore.dispatch(getAllSearchData());\nstore.dispatch(getAllSearchDataHospital()); // get info from \"inputList\" collection for account profile display\n\nstore.dispatch(getSpecList());\nstore.dispatch(getCondList()); // set up material ui theme\n// route to home/login/sign up\n\nfunction App() {\n  const [docInfo, setDocInfo] = useState([]);\n  const [hospitalInfo, sethospitalInfo] = useState([]);\n  const [docInfoCopy, setDocInfoCopy] = useState([]);\n  const [hospitalInfoCopy, sethospitalInfoCopy] = useState([]);\n  const [searchMethod, setSearchMethod] = React.useState(\"Specialty\");\n  const [keywords, setKeywords] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n  const [searchBegin, setSearchBegin] = React.useState(false);\n  const [hosType, setHosType] = React.useState(\"both\");\n  const [languageList, setLanguageList] = React.useState([]);\n  const [yearOfPractice, setyearOfPractice] = React.useState([1000, -1]);\n  const [filterlocation, setFilterlocation] = React.useState([]);\n  const [filterBegin, setFilterBegin] = React.useState(false);\n  const [targetDoc, setTargetDoc] = React.useState(null);\n  const [targetHos, setTargetHos] = React.useState(null);\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // he chen Newest\n\n  const [conditionListForInput, setConditionListForInput] = React.useState();\n  const [specialtyListForInput, setSpecialtyListForInput] = React.useState();\n  const [profileBackToDestination, setProfileBackToDestination] = React.useState();\n  const [bodyPartsDic, setBodyPartsDic] = React.useState(null);\n  const [drivingTime, setDrivingTime] = React.useState([1000, -1]);\n  const [conditionLabel, setConditionLabel] = React.useState(\"\");\n  const [searchingState, setSearchingState] = React.useState(\"in-progress\");\n  const [database, setDatabase] = React.useState();\n  const reportMax = 50;\n  useEffect(() => {\n    if (database == null) {\n      axios.get(proxyurl + 'https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/getDatabase').then(res => {\n        setDatabase(res.data);\n      });\n    }\n\n    if (conditionListForInput == null) {\n      axios.get(proxyurl + 'https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/getAllInputs').then(res => {\n        setConditionListForInput(res.data[0]);\n        setSpecialtyListForInput(res.data[1]);\n      });\n    }\n\n    if (location == '') {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        let latitude;\n        let longitude;\n        latitude = position.coords.latitude;\n        longitude = position.coords.longitude;\n        axios.get(proxyurl + 'https://maps.googleapis.com/maps/api/geocode/json', {\n          params: {\n            latlng: latitude + ',' + longitude,\n            key: 'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n          }\n        }).then(res => {\n          //  Assume you live in this area (Kuala Lumpur).\n          setLocation('Pantai Hospital Kuala Lumpur, Jalan Bukit Pantai, Bangsar, Kuala Lumpur, Federal Territory of Kuala Lumpur');\n        });\n      });\n    }\n\n    if (bodyPartsDic == null) {\n      axios.get(proxyurl + 'https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/getBodyDic').then(res => {\n        setBodyPartsDic(res.data);\n      });\n    }\n  }, []);\n\n  const getLocationValue = value => {\n    setLocation(value);\n  };\n\n  const getKeyWords = value => {\n    setKeywords(value);\n  }; // he chen newest\n\n\n  const changeConditionLabel = (value, method) => {\n    setKeywords(value);\n\n    if (method == 'body') {\n      setConditionLabel(value);\n    } else {\n      setConditionLabel('');\n    }\n  };\n\n  const getSearchMethod = value => {\n    setSearchMethod(value);\n    setKeywords(\"\");\n  };\n\n  const startSearch = () => {\n    setConditionLabel('');\n    setSearchBegin(true);\n  };\n\n  const filterHosType = type => {\n    setHosType(type);\n    setFilterBegin(true);\n  };\n\n  const filterLanguageList = lang => {\n    setLanguageList(lang);\n    setFilterBegin(true);\n  }; // he chen newest\n\n\n  const filterYear = range => {\n    setyearOfPractice(range);\n    setFilterBegin(true);\n  }; // he chen newest\n\n\n  const filterDrivingTime = range => {\n    setDrivingTime(range);\n    setFilterBegin(true);\n  };\n\n  const updateTargetDoc = doctor => {\n    setTargetDoc(doctor);\n  };\n\n  const updateTargetHos = hospital => {\n    setTargetHos(hospital);\n  };\n\n  const filterFunction = () => {\n    let newDocList = [];\n    let newHospitalList = [];\n    docInfoCopy.forEach(doctor => {\n      let validateType = doctor[\"Type\"].toLowerCase() == hosType.toLowerCase() || hosType.toLowerCase() == \"both\";\n      let validateLanguage = languageList.every(element => doctor[\"Language\"].indexOf(element) > -1) || languageList == [];\n      let validateYear = yearOfPractice[0] <= doctor[\"YearsofPractice\"] && yearOfPractice[1] >= doctor[\"YearsofPractice\"] || yearOfPractice[0] == 1000;\n\n      if (validateType && validateLanguage && validateYear) {\n        newDocList.push(doctor);\n      }\n    }); // he chen newest\n\n    hospitalInfoCopy.forEach(hos => {\n      let validateType = hos[\"type\"].toLowerCase() == hosType.toLowerCase() || hosType.toLowerCase() == \"both\";\n      let validateLanguage = languageList.every(element => hos[\"Language\"].indexOf(element) > -1) || languageList == [];\n      let validateDrivingTime = hos['timeOfDriving'] >= drivingTime[0] && hos['timeOfDriving'] <= drivingTime[1] || drivingTime[0] == 1000;\n\n      if (validateType && validateLanguage && validateDrivingTime) {\n        newHospitalList.push(hos);\n      }\n    });\n    setDocInfo(newDocList);\n    sethospitalInfo(newHospitalList);\n  };\n\n  useEffect(() => {\n    if (filterBegin) {\n      filterFunction();\n      return setFilterBegin(false);\n    }\n  }); // he chen\n\n  const doMainSearch = pageProps => {\n    if (hospitalInfo.length != 0 || docInfo.lenghth != 0) {\n      sethospitalInfo([]);\n      setDocInfo([]);\n      sethospitalInfoCopy([]);\n      setDocInfoCopy([]);\n      setSearchingState('in-progress');\n    }\n\n    if (pageProps.history != null) {\n      pageProps.history.push(\"/results\");\n    }\n\n    if (searchBegin) {\n      let rootData = database;\n      let userKeyWords = keywords.replace(/\\s/g, '').toLowerCase();\n      let newDocData = [];\n      let newHosData = [];\n      getNewDocAndHospital(rootData, userKeyWords).then(res => {\n        newDocData = res.newDocData;\n        newHosData = res.newHosData;\n      }).then(() => {\n        sethospitalInfo(newHosData);\n        setDocInfo(newDocData);\n        sethospitalInfoCopy(newHosData);\n        setDocInfoCopy(newDocData);\n        setSearchingState('finished');\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n\n    return function resetSearchStatus() {\n      setSearchBegin(false);\n    };\n  }; // he chen newest\n\n\n  let getNewDocAndHospital = async (rootData, userKeyWords) => {\n    let newDocData = [];\n    let newHosData = [];\n\n    if (searchMethod == 'Specialty') {\n      for (let specialty in rootData) {\n        if (specialty.replace(/\\s/g, '').toLowerCase() == userKeyWords) {\n          if (location == '') {\n            for (let hospital in rootData[specialty]['hospitals']) {\n              let hospitalInfo = rootData[specialty]['hospitals'][hospital];\n\n              if (hospitalInfo.report == null || hospitalInfo.report.reportCount < reportMax) {\n                newHosData.push(hospitalInfo);\n              }\n\n              for (let doctor in hospitalInfo['doctors']) {\n                if (!hospitalInfo['doctors'][doctor]['deleted'] && hospitalInfo['doctors'][doctor]['publish'] && (hospitalInfo['doctors'][doctor]['report'] == null || hospitalInfo['doctors'][doctor]['report']['reportCount'] < reportMax)) {\n                  hospitalInfo['doctors'][doctor]['userName'] = doctor;\n                  newDocData.push(hospitalInfo['doctors'][doctor]);\n                }\n              }\n            }\n          } else {\n            for (let hospital in rootData[specialty]['hospitals']) {\n              let hospitalInfo = rootData[specialty]['hospitals'][hospital];\n              let potentialLocation = hospitalInfo.address;\n              let distanceInfo = await axios.get(proxyurl + 'https://maps.googleapis.com/maps/api/distancematrix/json', {\n                params: {\n                  origins: location,\n                  destinations: potentialLocation,\n                  key: 'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n                }\n              });\n              let duration;\n\n              if (distanceInfo.data.rows.length > 0 && distanceInfo.data.rows[0].elements.length > 0 && distanceInfo.data.rows[0].elements[0].status == 'OK') {\n                duration = (await distanceInfo.data.rows[0].elements[0].duration.value) / 3600;\n              } else {\n                duration = -1;\n              }\n\n              if (duration < 1.5 && duration >= 0) {\n                hospitalInfo.timeOfDriving = duration;\n\n                if (hospitalInfo.report == null || hospitalInfo.report.reportCount < reportMax) {\n                  newHosData.push(hospitalInfo);\n                }\n\n                for (let doctor in hospitalInfo['doctors']) {\n                  if (!hospitalInfo['doctors'][doctor]['deleted'] && (hospitalInfo['doctors'][doctor]['report'] == null || hospitalInfo['doctors'][doctor]['report']['reportCount'] < reportMax) && hospitalInfo['doctors'][doctor]['publish']) {\n                    hospitalInfo['doctors'][doctor]['userName'] = doctor;\n                    hospitalInfo['doctors'][doctor]['timeOfDriving'] = duration;\n                    newDocData.push(hospitalInfo['doctors'][doctor]);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (searchMethod == \"Doctor\") {\n      for (let specialty in rootData) {\n        for (let hos in rootData[specialty]['hospitals']) {\n          let potentialHos = rootData[specialty]['hospitals'][hos];\n\n          if (location == '') {\n            let docFound = 0;\n\n            for (let doctor in potentialHos['doctors']) {\n              let targetDoctor = potentialHos['doctors'][doctor];\n\n              if (targetDoctor['name'].replace(/\\s/g, '').toLowerCase().includes(userKeyWords.replace(/\\s/g, '').toLowerCase())) {\n                if (!targetDoctor['deleted'] && (targetDoctor['report'] == null || targetDoctor['report']['reportCount'] < reportMax) && targetDoctor['publish']) {\n                  targetDoctor['userName'] = doctor;\n                  newDocData.push(targetDoctor);\n                  docFound++;\n                }\n              }\n\n              if (docFound == 1) {\n                if (potentialHos.report == null || potentialHos.report.reportCount < reportMax) {\n                  newHosData.push(potentialHos);\n                }\n              }\n            }\n          } else {\n            let potentialLocation = potentialHos.address;\n            let distanceInfo = await axios.get(proxyurl + 'https://maps.googleapis.com/maps/api/distancematrix/json', {\n              params: {\n                origins: location,\n                destinations: potentialLocation,\n                key: 'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n              }\n            });\n            let duration;\n\n            if (distanceInfo.data.rows.length > 0 && distanceInfo.data.rows[0].elements.length > 0 && distanceInfo.data.rows[0].elements[0].status == 'OK') {\n              duration = (await distanceInfo.data.rows[0].elements[0].duration.value) / 3600;\n            } else {\n              duration = -1;\n            }\n\n            if (duration < 1.5 && duration >= 0) {\n              let docFound = 0;\n\n              for (let doctor in potentialHos['doctors']) {\n                let targetDoctor = potentialHos['doctors'][doctor];\n\n                if (targetDoctor['name'].replace(/\\s/g, '').toLowerCase().includes(userKeyWords.replace(/\\s/g, '').toLowerCase())) {\n                  if (!targetDoctor['deleted'] && (targetDoctor['report'] == null || targetDoctor['report']['reportCount'] < reportMax) && targetDoctor['publish']) {\n                    targetDoctor['userName'] = doctor;\n                    newDocData.push(targetDoctor);\n                    docFound++;\n                  }\n                }\n\n                if (docFound == 1) {\n                  if (potentialHos.report == null || potentialHos.report.reportCount < reportMax) {\n                    newHosData.push(potentialHos);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (searchMethod == \"Hospital\") {\n      for (let specialty in rootData) {\n        for (let hos in rootData[specialty]['hospitals']) {\n          let potentialHos = rootData[specialty]['hospitals'][hos];\n          let locationMatch = true;\n          let hosNameMacth = potentialHos['name'].replace(/\\s/g, '').toLowerCase().includes(userKeyWords);\n\n          if (hosNameMacth) {\n            if (location != '') {\n              let potentialLocation = potentialHos.address;\n              let distanceInfo = await axios.get(proxyurl + 'https://maps.googleapis.com/maps/api/distancematrix/json', {\n                params: {\n                  origins: location,\n                  destinations: potentialLocation,\n                  key: 'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n                }\n              });\n              let duration;\n\n              if (distanceInfo.data.rows.length > 0 && distanceInfo.data.rows[0].elements.length > 0 && distanceInfo.data.rows[0].elements[0].status == 'OK') {\n                duration = (await distanceInfo.data.rows[0].elements[0].duration.value) / 3600;\n              } else {\n                duration = -1;\n              }\n\n              if (duration > 1.5 || duration <= 0) {\n                locationMatch = false;\n              }\n            }\n\n            if (locationMatch) {\n              if (potentialHos.report == null || potentialHos.report.reportCount < reportMax) {\n                newHosData.push(potentialHos);\n              }\n\n              for (let doctor in potentialHos['doctors']) {\n                let targetDoctor = potentialHos['doctors'][doctor];\n\n                if (!targetDoctor['deleted'] && (targetDoctor['report'] == null || targetDoctor['report']['reportCount'] < reportMax) && targetDoctor['publish']) {\n                  potentialHos['doctors'][doctor]['userName'] = doctor;\n                  newDocData.push(potentialHos['doctors'][doctor]);\n                }\n              }\n            }\n          }\n        }\n      }\n    } else {\n      for (let specialty in rootData) {\n        let conditionList = rootData[specialty]['conditions'];\n        conditionList = conditionList.map(function (item) {\n          return item.toLowerCase().replace(/\\s/g, '');\n        });\n        let locationMatch = true;\n        let conditionMatch = conditionList.includes(userKeyWords);\n\n        if (conditionMatch) {\n          for (let hos in rootData[specialty]['hospitals']) {\n            let potentialHos = rootData[specialty]['hospitals'][hos];\n            let potentialLocation = potentialHos.address;\n\n            if (location != '') {\n              let distanceInfo = await axios.get(proxyurl + 'https://maps.googleapis.com/maps/api/distancematrix/json', {\n                params: {\n                  origins: location,\n                  destinations: potentialLocation,\n                  key: 'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n                }\n              });\n              let duration;\n\n              if (distanceInfo.data.rows.length > 0 && distanceInfo.data.rows[0].elements.length > 0 && distanceInfo.data.rows[0].elements[0].status == 'OK') {\n                duration = (await distanceInfo.data.rows[0].elements[0].duration.value) / 3600;\n              } else {\n                duration = -1;\n              }\n\n              if (duration > 1.5 || duration <= 0) {\n                locationMatch = false;\n              }\n            }\n\n            if (locationMatch) {\n              if (potentialHos.report == null || potentialHos.report.reportCount < reportMax) {\n                newHosData.push(potentialHos);\n              }\n\n              for (let doctor in potentialHos['doctors']) {\n                let doctorCondition = potentialHos['doctors'][doctor]['conditions'];\n                doctorCondition = doctorCondition.map(function (item) {\n                  return item.toLowerCase().replace(/\\s/g, '');\n                });\n                let targetDoctor = potentialHos['doctors'][doctor];\n\n                if (doctorCondition.includes(userKeyWords) && !targetDoctor['deleted'] && (targetDoctor['report'] == null || targetDoctor['report']['reportCount'] < reportMax) && targetDoctor['publish']) {\n                  potentialHos['doctors'][doctor]['userName'] = doctor;\n                  newDocData.push(potentialHos['doctors'][doctor]);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    newHosData.forEach(hos => {\n      hos[\"Address\"] = hos.address;\n      hos[\"HospitalType\"] = hos.type;\n      hos['Insurance'] = hos.insurance;\n      hos['Language'] = hos.languages;\n      hos['Phone'] = hos.phone;\n      hos['HospitalName'] = hos.name;\n      hos['RelateSpecialty'] = hos.relatedSpecialty;\n      hos['Tags'] = hos.tags;\n      hos['Web'] = hos.website;\n      let conditionList = [];\n\n      for (let doctor in hos['doctors']) {\n        let targetDoc = hos['doctors'][doctor];\n        targetDoc.conditions = targetDoc.conditions.map(item => {\n          let newItem = item.toLowerCase();\n          newItem = newItem.replace(newItem[0], newItem[0].toUpperCase());\n          return newItem;\n        });\n        targetDoc.conditions.forEach(condition => {\n          if (conditionList.indexOf(condition) == -1) {\n            conditionList.push(condition);\n          }\n        });\n      }\n\n      hos['Conditions'] = conditionList;\n    });\n    newDocData.forEach(doc => {\n      doc[\"Address\"] = doc.address;\n      doc[\"Language\"] = doc.languages;\n      doc['Phone'] = doc.phone;\n      doc['Hospital'] = doc.hospital;\n      doc['Conditions'] = doc.conditions;\n      doc['DocName'] = doc.name;\n      doc['Specialty'] = doc.specialty;\n      doc['YearsofPractice'] = doc.yearsOfPractice;\n      doc['Procedures'] = doc.procedures;\n      doc['NumberOfLikes'] = doc.likes;\n      doc['Qualifications'] = doc.qualifications;\n      doc['Type'] = doc.type;\n    });\n    newDocData.sort((a, b) => {\n      return b.likes - a.likes;\n    });\n    newHosData.sort((a, b) => {\n      return b.likes - a.likes;\n    });\n    return {\n      newDocData: newDocData,\n      newHosData: newHosData\n    };\n  };\n\n  const renderHome = renderProps => {\n    return /*#__PURE__*/React.createElement(Home, Object.assign({}, renderProps, {\n      database: database,\n      currentLocation: location,\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      getSearchMethod: getSearchMethod,\n      searchMethod: searchMethod,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      setKeywords: setKeywords,\n      changeConditionLabel: changeConditionLabel,\n      conditionLabel: conditionLabel,\n      keywords: keywords,\n      conditionListForInput: conditionListForInput,\n      specialtyListForInput: specialtyListForInput,\n      bodyPartsDic: bodyPartsDic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const renderResults = renderProps => {\n    return /*#__PURE__*/React.createElement(Results, Object.assign({}, renderProps, {\n      database: database,\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      docInfo: docInfo,\n      hospitalInfo: hospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      keywords: keywords,\n      setKeywords: setKeywords,\n      searchMethod: searchMethod,\n      getSearchMethod: getSearchMethod,\n      filterHosType: filterHosType,\n      filterLanguageList: filterLanguageList,\n      filterYear: filterYear,\n      filterDrivingTime: filterDrivingTime,\n      updateTargetDoc: updateTargetDoc,\n      updateTargetHos: updateTargetHos,\n      conditionListForInput: conditionListForInput,\n      specialtyListForInput: specialtyListForInput,\n      profileBackToDestination: profileBackToDestination,\n      setProfileBackToDestination: setProfileBackToDestination,\n      searchingState: searchingState,\n      setyearOfPractice: setyearOfPractice,\n      setDrivingTime: setyearOfPractice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const renderDocProfile = renderProps => {\n    return /*#__PURE__*/React.createElement(Docprofile, Object.assign({}, renderProps, {\n      database: database,\n      setDatabase: setDatabase,\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      docInfo: docInfo,\n      hospitalInfo: hospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      setKeywords: setKeywords,\n      getSearchMethod: getSearchMethod,\n      targetDoc: targetDoc,\n      conditionListForInput: conditionListForInput,\n      specialtyListForInput: specialtyListForInput,\n      profileBackToDestination: profileBackToDestination,\n      setProfileBackToDestination: setProfileBackToDestination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const renderHosProfile = renderProps => {\n    return /*#__PURE__*/React.createElement(Hospprofile, Object.assign({}, renderProps, {\n      database: database,\n      setDatabase: setDatabase,\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      docInfo: docInfo,\n      hospitalInfo: hospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      setKeywords: setKeywords,\n      getSearchMethod: getSearchMethod,\n      updateTargetDoc: updateTargetDoc,\n      targetHos: targetHos,\n      profileBackToDestination: profileBackToDestination,\n      setProfileBackToDestination: setProfileBackToDestination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 7\n      }\n    }));\n  }; // michelle改的/加的\n\n\n  const renderAccount = renderProps => {\n    return /*#__PURE__*/React.createElement(Account, Object.assign({}, renderProps, {\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      setProfileBackToDestination: setProfileBackToDestination,\n      database: database,\n      index: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  const renderAccountEditProfile = renderProps => {\n    return /*#__PURE__*/React.createElement(Account, Object.assign({}, renderProps, {\n      updateTargetDoc: updateTargetDoc,\n      updateTargetHos: updateTargetHos,\n      setProfileBackToDestination: setProfileBackToDestination,\n      database: database,\n      index: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  const renderSaved = renderProps => {\n    return /*#__PURE__*/React.createElement(Account, Object.assign({}, renderProps, {\n      updateTargetDoc: updateTargetDoc,\n      updateTargetHos: updateTargetHos,\n      setProfileBackToDestination: setProfileBackToDestination,\n      database: database,\n      index: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  const renderLikeHistory = renderProps => {\n    return /*#__PURE__*/React.createElement(Account, Object.assign({}, renderProps, {\n      updateTargetDoc: updateTargetDoc,\n      updateTargetHos: updateTargetHos,\n      setProfileBackToDestination: setProfileBackToDestination,\n      database: database,\n      index: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  const renderAccountVerification = renderProps => {\n    return /*#__PURE__*/React.createElement(Account, Object.assign({}, renderProps, {\n      updateTargetDoc: updateTargetDoc,\n      updateTargetHos: updateTargetHos,\n      setProfileBackToDestination: setProfileBackToDestination,\n      database: database,\n      index: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  const renderAccountSettings = renderProps => {\n    return /*#__PURE__*/React.createElement(Account, Object.assign({}, renderProps, {\n      updateTargetDoc: updateTargetDoc,\n      updateTargetHos: updateTargetHos,\n      setProfileBackToDestination: setProfileBackToDestination,\n      database: database,\n      index: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: renderHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AuthRoute, {\n    exact: true,\n    path: \"/login\",\n    component: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AuthRoute, {\n    exact: true,\n    path: \"/signup\",\n    component: signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/covid19\",\n    component: covid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/results\",\n    render: renderResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/docprofile\",\n    render: renderDocProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/hospprofile\",\n    render: renderHosProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/hospspecialtyprofile\",\n    component: Hospspecialtyprofile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/account\",\n    render: renderAccount,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/profile\",\n    render: renderAccountEditProfile,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/saved\",\n    render: renderSaved,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/likehistory\",\n    render: renderLikeHistory,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/accountverification\",\n    render: renderAccountVerification,\n    index: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/accountsettings\",\n    render: renderAccountSettings,\n    index: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Michelle/Desktop/Capstone/CapstoneEclipseAB11/src/App.js"],"names":["React","axios","BrowserRouter","Router","Switch","Route","jwtDecode","AuthRoute","useState","useEffect","ThemeProvider","MuiThemeProvider","createMuiTheme","themeFile","Provider","store","SET_AUTHENTICATED","logoutUser","getUserData","getSpecProfile","getSpecList","getCondList","getAllSearchData","getAllSearchDataHospital","Home","login","signup","covid","Results","Docprofile","Hospprofile","Hospspecialtyprofile","Account","theme","defaults","baseURL","token","localStorage","FBIdToken","decodedToken","exp","Date","now","dispatch","window","location","href","type","headers","common","App","docInfo","setDocInfo","hospitalInfo","sethospitalInfo","docInfoCopy","setDocInfoCopy","hospitalInfoCopy","sethospitalInfoCopy","searchMethod","setSearchMethod","keywords","setKeywords","setLocation","searchBegin","setSearchBegin","hosType","setHosType","languageList","setLanguageList","yearOfPractice","setyearOfPractice","filterlocation","setFilterlocation","filterBegin","setFilterBegin","targetDoc","setTargetDoc","targetHos","setTargetHos","proxyurl","conditionListForInput","setConditionListForInput","specialtyListForInput","setSpecialtyListForInput","profileBackToDestination","setProfileBackToDestination","bodyPartsDic","setBodyPartsDic","drivingTime","setDrivingTime","conditionLabel","setConditionLabel","searchingState","setSearchingState","database","setDatabase","reportMax","get","then","res","data","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","params","latlng","key","getLocationValue","value","getKeyWords","changeConditionLabel","method","getSearchMethod","startSearch","filterHosType","filterLanguageList","lang","filterYear","range","filterDrivingTime","updateTargetDoc","doctor","updateTargetHos","hospital","filterFunction","newDocList","newHospitalList","forEach","validateType","toLowerCase","validateLanguage","every","element","indexOf","validateYear","push","hos","validateDrivingTime","doMainSearch","pageProps","length","lenghth","history","rootData","userKeyWords","replace","newDocData","newHosData","getNewDocAndHospital","catch","error","console","resetSearchStatus","specialty","report","reportCount","potentialLocation","address","distanceInfo","origins","destinations","duration","rows","elements","status","timeOfDriving","potentialHos","docFound","targetDoctor","includes","locationMatch","hosNameMacth","conditionList","map","item","conditionMatch","doctorCondition","insurance","languages","phone","name","relatedSpecialty","tags","website","conditions","newItem","toUpperCase","condition","doc","yearsOfPractice","procedures","likes","qualifications","sort","a","b","renderHome","renderProps","renderResults","renderDocProfile","renderHosProfile","renderAccount","renderAccountEditProfile","renderSaved","renderLikeHistory","renderAccountVerification","renderAccountSettings"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/login.css\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthRoute from \"./util/AuthRoute\";\nimport { useState, useEffect } from \"react\";\n\n// material ui theme\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeFile from \"./util/theme\";\n\n//redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { SET_AUTHENTICATED } from \"./redux/types\";\nimport { logoutUser, getUserData, getSpecProfile, getSpecList, getCondList } from \"./redux/actions/userActions\";\n\nimport { getAllSearchData, getAllSearchDataHospital } from \"./redux/actions/dataActions\";\n\n\n// pages\nimport Home from \"./pages/Home\";\nimport login from \"./pages/Login\";\nimport signup from \"./pages/Signup\";\nimport covid from \"./pages/Covid\";\nimport Results from \"./pages/Results\";\nimport Docprofile from \"./pages/DocProfile\";\nimport Hospprofile from \"./pages/HospProfile\";\n\n//新加的 5/1/2020\nimport Hospspecialtyprofile from \"./pages/HospSpecialtyProfile\";\nimport Account from \"./pages/Account\";\n\n// use themeFile from theme.js\nconst theme = createMuiTheme(themeFile);\n\n\n// set up api\naxios.defaults.baseURL =\n  \"https://cors-anywhere.herokuapp.com/https://us-central1-mydoc-f3cd9.cloudfunctions.net/api/\";\n\n// backend stuff\nconst token = localStorage.FBIdToken;\n\nif (token) {\n  const decodedToken = jwtDecode(token);\n  // log user out when expire\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser());\n    window.location.href = \"/login\";\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common[\"Authorization\"] = token; //deal with page refresh\n    store.dispatch(getUserData()); // get user data if logged in\n    store.dispatch(getSpecProfile());\n  }\n}\n\n\n// 加了这两句 （michelle)   5/14/20  search function写完之后我profile改一下variable就可以删了\nstore.dispatch(getAllSearchData());\nstore.dispatch(getAllSearchDataHospital());\n\n// get info from \"inputList\" collection for account profile display\nstore.dispatch(getSpecList());\nstore.dispatch(getCondList());\n\n\n// set up material ui theme\n// route to home/login/sign up\nfunction App() {\n  const [docInfo, setDocInfo] = useState([]);\n  const [hospitalInfo, sethospitalInfo] = useState([]);\n  const [docInfoCopy, setDocInfoCopy] = useState([]);\n  const [hospitalInfoCopy, sethospitalInfoCopy] = useState([]);\n  const [searchMethod, setSearchMethod] = React.useState(\"Specialty\");\n  const [keywords, setKeywords] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n  const [searchBegin, setSearchBegin] = React.useState(false);\n  const [hosType, setHosType] = React.useState(\"both\");\n  const [languageList, setLanguageList] = React.useState([]);\n  const [yearOfPractice, setyearOfPractice] = React.useState([1000, -1]);\n  const [filterlocation, setFilterlocation] = React.useState([]);\n  const [filterBegin, setFilterBegin] = React.useState(false);\n  const [targetDoc, setTargetDoc] = React.useState(null);\n  const [targetHos, setTargetHos] = React.useState(null);\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n  // he chen Newest\n  const [conditionListForInput, setConditionListForInput] = React.useState();\n  const [specialtyListForInput, setSpecialtyListForInput] = React.useState();\n  const [profileBackToDestination, setProfileBackToDestination] = React.useState();\n  const [bodyPartsDic, setBodyPartsDic] = React.useState(null);\n  const [drivingTime, setDrivingTime] = React.useState([1000, -1]);\n  const [conditionLabel, setConditionLabel] = React.useState(\"\");\n  const [searchingState, setSearchingState] = React.useState(\"in-progress\");\n  const [database, setDatabase] = React.useState();\n  const reportMax = 50;\n\n\n\n  useEffect(() => {\n\n    if (database == null) {\n      axios.get(proxyurl + 'https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/getDatabase')\n        .then((res) => {\n          setDatabase(res.data);\n        })\n    }\n\n    if (conditionListForInput == null) {\n      axios.get(proxyurl + 'https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/getAllInputs')\n        .then((res) => {\n          setConditionListForInput(res.data[0]);\n          setSpecialtyListForInput(res.data[1]);\n        })\n    }\n\n    if (location == '') {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        let latitude;\n        let longitude;\n        latitude = position.coords.latitude;\n        longitude = position.coords.longitude;\n        axios.get(proxyurl + 'https://maps.googleapis.com/maps/api/geocode/json', {\n          params: {\n            latlng: latitude + ',' + longitude,\n            key: 'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n          }\n        }).then((res) => {\n          //  Assume you live in this area (Kuala Lumpur).\n          setLocation('Pantai Hospital Kuala Lumpur, Jalan Bukit Pantai, Bangsar, Kuala Lumpur, Federal Territory of Kuala Lumpur');\n        })\n\n      })\n    }\n\n    if (bodyPartsDic == null) {\n      axios.get(proxyurl + 'https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/getBodyDic')\n        .then((res) => {\n          setBodyPartsDic(res.data);\n        })\n    }\n\n  }, []);\n\n  const getLocationValue = (value) => {\n    setLocation(value);\n  };\n\n  const getKeyWords = (value) => {\n    setKeywords(value);\n  };\n\n  // he chen newest\n  const changeConditionLabel = (value, method) => {\n    setKeywords(value);\n    if (method == 'body') {\n      setConditionLabel(value);\n    } else {\n      setConditionLabel('');\n    }\n  }\n\n  const getSearchMethod = (value) => {\n    setSearchMethod(value);\n    setKeywords(\"\");\n  };\n\n  const startSearch = () => {\n    setConditionLabel('');\n    setSearchBegin(true);\n  };\n\n  const filterHosType = (type) => {\n    setHosType(type);\n    setFilterBegin(true);\n  };\n\n  const filterLanguageList = (lang) => {\n    setLanguageList(lang);\n    setFilterBegin(true);\n  };\n\n  // he chen newest\n  const filterYear = (range) => {\n    setyearOfPractice(range);\n    setFilterBegin(true);\n  };\n\n  // he chen newest\n  const filterDrivingTime = (range) => {\n    setDrivingTime(range);\n    setFilterBegin(true);\n  };\n\n  const updateTargetDoc = (doctor) => {\n    setTargetDoc(doctor);\n  };\n\n  const updateTargetHos = (hospital) => {\n    setTargetHos(hospital);\n  };\n\n  const filterFunction = () => {\n    let newDocList = [];\n    let newHospitalList = [];\n    docInfoCopy.forEach((doctor) => {\n      let validateType =\n        doctor[\"Type\"].toLowerCase() == hosType.toLowerCase() ||\n        hosType.toLowerCase() == \"both\";\n      let validateLanguage =\n        languageList.every(\n          (element) => doctor[\"Language\"].indexOf(element) > -1\n        ) || languageList == [];\n\n      let validateYear =\n        (yearOfPractice[0] <= doctor[\"YearsofPractice\"] &&\n          yearOfPractice[1] >= doctor[\"YearsofPractice\"]) ||\n        yearOfPractice[0] == 1000;\n      if (validateType && validateLanguage && validateYear) {\n        newDocList.push(doctor);\n      }\n    });\n\n    // he chen newest\n    hospitalInfoCopy.forEach((hos) => {\n      let validateType =\n        hos[\"type\"].toLowerCase() == hosType.toLowerCase() ||\n        hosType.toLowerCase() == \"both\";\n      let validateLanguage = languageList.every(\n        (element) => hos[\"Language\"].indexOf(element) > -1\n      ) || languageList == [];\n\n      let validateDrivingTime = hos['timeOfDriving'] >= drivingTime[0] && hos['timeOfDriving'] <= drivingTime[1]\n        || drivingTime[0] == 1000;\n      if (validateType && validateLanguage && validateDrivingTime) {\n        newHospitalList.push(hos);\n      }\n    });\n    setDocInfo(newDocList);\n    sethospitalInfo(newHospitalList);\n  };\n\n  useEffect(() => {\n    if (filterBegin) {\n      filterFunction();\n      return setFilterBegin(false);\n    }\n  });\n\n  // he chen\n  const doMainSearch = (pageProps) => {\n\n    if (hospitalInfo.length != 0 || docInfo.lenghth != 0) {\n      sethospitalInfo([]);\n      setDocInfo([]);\n      sethospitalInfoCopy([]);\n      setDocInfoCopy([]);\n      setSearchingState('in-progress')\n    }\n\n    if (pageProps.history != null) {\n      pageProps.history.push(\"/results\");\n    }\n\n    if (searchBegin) {\n      let rootData = database;\n      let userKeyWords = keywords.replace(/\\s/g, '').toLowerCase();\n      let newDocData = [];\n      let newHosData = [];\n      getNewDocAndHospital(rootData, userKeyWords)\n        .then((res) => {\n          newDocData = res.newDocData;\n          newHosData = res.newHosData;\n        }).then(() => {\n          sethospitalInfo(newHosData);\n          setDocInfo(newDocData);\n          sethospitalInfoCopy(newHosData);\n          setDocInfoCopy(newDocData);\n          setSearchingState('finished');\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n    }\n\n    return function resetSearchStatus() {\n      setSearchBegin(false);\n    };\n  };\n\n  // he chen newest\n  let getNewDocAndHospital = async (rootData, userKeyWords) => {\n    let newDocData = [];\n    let newHosData = [];\n    if (searchMethod == 'Specialty') {\n      for (let specialty in rootData) {\n        if (specialty.replace(/\\s/g, '').toLowerCase() == userKeyWords) {\n          if (location == '') {\n            for (let hospital in rootData[specialty]['hospitals']) {\n              let hospitalInfo = rootData[specialty]['hospitals'][hospital];\n              if (hospitalInfo.report == null || hospitalInfo.report.reportCount < reportMax) {\n                newHosData.push(hospitalInfo);\n              }\n              for (let doctor in hospitalInfo['doctors']) {\n                if (!hospitalInfo['doctors'][doctor]['deleted'] && hospitalInfo['doctors'][doctor]['publish'] && (hospitalInfo['doctors'][doctor]['report'] == null || hospitalInfo['doctors'][doctor]['report']['reportCount'] < reportMax)) {\n                  hospitalInfo['doctors'][doctor]['userName'] = doctor;\n                  newDocData.push(hospitalInfo['doctors'][doctor]);\n                }\n              }\n            }\n          } else {\n            for (let hospital in rootData[specialty]['hospitals']) {\n              let hospitalInfo = rootData[specialty]['hospitals'][hospital];\n              let potentialLocation = hospitalInfo.address;\n              let distanceInfo = await axios.get(proxyurl + 'https://maps.googleapis.com/maps/api/distancematrix/json', {\n                params: {\n                  origins: location,\n                  destinations: potentialLocation,\n                  key: 'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n                }\n              })\n              let duration;\n              if (distanceInfo.data.rows.length > 0 && distanceInfo.data.rows[0].elements.length > 0 && distanceInfo.data.rows[0].elements[0].status == 'OK') {\n                duration = await distanceInfo.data.rows[0].elements[0].duration.value / 3600;\n              } else {\n                duration = -1;\n              }\n              if (duration < 1.5 && duration >= 0) {\n                hospitalInfo.timeOfDriving = duration;\n                if (hospitalInfo.report == null || hospitalInfo.report.reportCount < reportMax) {\n                  newHosData.push(hospitalInfo);\n                }\n                for (let doctor in hospitalInfo['doctors']) {\n                  if (!hospitalInfo['doctors'][doctor]['deleted'] && (hospitalInfo['doctors'][doctor]['report'] == null || hospitalInfo['doctors'][doctor]['report']['reportCount'] < reportMax) && hospitalInfo['doctors'][doctor]['publish']) {\n                    hospitalInfo['doctors'][doctor]['userName'] = doctor;\n                    hospitalInfo['doctors'][doctor]['timeOfDriving'] = duration;\n                    newDocData.push(hospitalInfo['doctors'][doctor]);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (searchMethod == \"Doctor\") {\n      for (let specialty in rootData) {\n        for (let hos in rootData[specialty]['hospitals']) {\n          let potentialHos = rootData[specialty]['hospitals'][hos];\n          if (location == '') {\n            let docFound = 0;\n            for (let doctor in potentialHos['doctors']) {\n              let targetDoctor = potentialHos['doctors'][doctor];\n              if (targetDoctor['name'].replace(/\\s/g, '').toLowerCase().includes(userKeyWords.replace(/\\s/g, '').toLowerCase())) {\n                if (!targetDoctor['deleted'] && (targetDoctor['report'] == null || targetDoctor['report']['reportCount'] < reportMax) && targetDoctor['publish']) {\n                  targetDoctor['userName'] = doctor;\n                  newDocData.push(targetDoctor);\n                  docFound++;\n                }\n              }\n              if (docFound == 1) {\n                if (potentialHos.report == null || potentialHos.report.reportCount < reportMax) {\n                  newHosData.push(potentialHos);\n                }\n              }\n            }\n          } else {\n            let potentialLocation = potentialHos.address;\n            let distanceInfo = await axios.get(proxyurl + 'https://maps.googleapis.com/maps/api/distancematrix/json', {\n              params: {\n                origins: location,\n                destinations: potentialLocation,\n                key: 'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n              }\n            });\n            let duration;\n            if (distanceInfo.data.rows.length > 0 && distanceInfo.data.rows[0].elements.length > 0 && distanceInfo.data.rows[0].elements[0].status == 'OK') {\n              duration = await distanceInfo.data.rows[0].elements[0].duration.value / 3600;\n            } else {\n              duration = -1;\n            }\n            if (duration < 1.5 && duration >= 0) {\n              let docFound = 0;\n              for (let doctor in potentialHos['doctors']) {\n                let targetDoctor = potentialHos['doctors'][doctor];\n                if (targetDoctor['name'].replace(/\\s/g, '').toLowerCase().includes(userKeyWords.replace(/\\s/g, '').toLowerCase())) {\n                  if (!targetDoctor['deleted'] && (targetDoctor['report'] == null || targetDoctor['report']['reportCount'] < reportMax) && targetDoctor['publish']) {\n                    targetDoctor['userName'] = doctor;\n                    newDocData.push(targetDoctor);\n                    docFound++;\n                  }\n                }\n                if (docFound == 1) {\n                  if (potentialHos.report == null || potentialHos.report.reportCount < reportMax) {\n                    newHosData.push(potentialHos);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (searchMethod == \"Hospital\") {\n      for (let specialty in rootData) {\n        for (let hos in rootData[specialty]['hospitals']) {\n          let potentialHos = rootData[specialty]['hospitals'][hos];\n          let locationMatch = true;\n          let hosNameMacth = potentialHos['name'].replace(/\\s/g, '').toLowerCase().includes(userKeyWords);\n          if (hosNameMacth) {\n            if (location != '') {\n              let potentialLocation = potentialHos.address;\n              let distanceInfo = await axios.get(proxyurl + 'https://maps.googleapis.com/maps/api/distancematrix/json', {\n                params: {\n                  origins: location,\n                  destinations: potentialLocation,\n                  key: 'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n                }\n              });\n              let duration\n              if (distanceInfo.data.rows.length > 0 && distanceInfo.data.rows[0].elements.length > 0 && distanceInfo.data.rows[0].elements[0].status == 'OK') {\n                duration = await distanceInfo.data.rows[0].elements[0].duration.value / 3600;\n              } else {\n                duration = -1;\n              }\n              if (duration > 1.5 || duration <= 0) {\n                locationMatch = false;\n              }\n            }\n            if (locationMatch) {\n              if (potentialHos.report == null || potentialHos.report.reportCount < reportMax) {\n                newHosData.push(potentialHos);\n              }\n              for (let doctor in potentialHos['doctors']) {\n                let targetDoctor = potentialHos['doctors'][doctor];\n                if (!targetDoctor['deleted'] && (targetDoctor['report'] == null || targetDoctor['report']['reportCount'] < reportMax) && targetDoctor['publish']) {\n                  potentialHos['doctors'][doctor]['userName'] = doctor;\n                  newDocData.push(potentialHos['doctors'][doctor]);\n                }\n              }\n            }\n          }\n        }\n\n      }\n    } else {\n      for (let specialty in rootData) {\n        let conditionList = rootData[specialty]['conditions'];\n        conditionList = conditionList.map(function (item) {\n          return item.toLowerCase().replace(/\\s/g, '');\n        });\n        let locationMatch = true;\n        let conditionMatch = conditionList.includes(userKeyWords);\n        if (conditionMatch) {\n          for (let hos in rootData[specialty]['hospitals']) {\n            let potentialHos = rootData[specialty]['hospitals'][hos];\n            let potentialLocation = potentialHos.address;\n            if (location != '') {\n              let distanceInfo = await axios.get(proxyurl + 'https://maps.googleapis.com/maps/api/distancematrix/json', {\n                params: {\n                  origins: location,\n                  destinations: potentialLocation,\n                  key: 'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n                }\n              });\n              let duration\n              if (distanceInfo.data.rows.length > 0 && distanceInfo.data.rows[0].elements.length > 0 && distanceInfo.data.rows[0].elements[0].status == 'OK') {\n                duration = await distanceInfo.data.rows[0].elements[0].duration.value / 3600;\n              } else {\n                duration = -1;\n              }\n              if (duration > 1.5 || duration <= 0) {\n                locationMatch = false;\n              }\n            }\n            if (locationMatch) {\n              if (potentialHos.report == null || potentialHos.report.reportCount < reportMax) {\n                newHosData.push(potentialHos);\n              }\n              for (let doctor in potentialHos['doctors']) {\n                let doctorCondition = potentialHos['doctors'][doctor]['conditions'];\n                doctorCondition = doctorCondition.map(function (item) {\n                  return item.toLowerCase().replace(/\\s/g, '');\n                });\n                let targetDoctor = potentialHos['doctors'][doctor];\n                if (doctorCondition.includes(userKeyWords) && !targetDoctor['deleted'] && (targetDoctor['report'] == null || targetDoctor['report']['reportCount'] < reportMax) && targetDoctor['publish']) {\n                  potentialHos['doctors'][doctor]['userName'] = doctor;\n                  newDocData.push(potentialHos['doctors'][doctor]);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    newHosData.forEach((hos) => {\n      hos[\"Address\"] = hos.address;\n      hos[\"HospitalType\"] = hos.type;\n      hos['Insurance'] = hos.insurance;\n      hos['Language'] = hos.languages;\n      hos['Phone'] = hos.phone;\n      hos['HospitalName'] = hos.name;\n      hos['RelateSpecialty'] = hos.relatedSpecialty;\n      hos['Tags'] = hos.tags;\n      hos['Web'] = hos.website;\n      let conditionList = [];\n      for (let doctor in hos['doctors']) {\n        let targetDoc = hos['doctors'][doctor];\n        targetDoc.conditions = targetDoc.conditions.map((item) => {\n          let newItem = item.toLowerCase();\n          newItem = newItem.replace(newItem[0], newItem[0].toUpperCase())\n          return newItem\n        });\n        targetDoc.conditions.forEach((condition) => {\n          if (conditionList.indexOf(condition) == -1) {\n            conditionList.push(condition)\n          }\n        });\n      }\n      hos['Conditions'] = conditionList;\n    });\n\n    newDocData.forEach((doc) => {\n      doc[\"Address\"] = doc.address;\n      doc[\"Language\"] = doc.languages;\n      doc['Phone'] = doc.phone;\n      doc['Hospital'] = doc.hospital;\n      doc['Conditions'] = doc.conditions;\n      doc['DocName'] = doc.name;\n      doc['Specialty'] = doc.specialty;\n      doc['YearsofPractice'] = doc.yearsOfPractice;\n      doc['Procedures'] = doc.procedures;\n      doc['NumberOfLikes'] = doc.likes;\n      doc['Qualifications'] = doc.qualifications;\n      doc['Type'] = doc.type\n    });\n\n    newDocData.sort((a, b) => { return b.likes - a.likes });\n    newHosData.sort((a, b) => { return b.likes - a.likes });\n    return {\n      newDocData: newDocData,\n      newHosData: newHosData\n    }\n  };\n\n\n  const renderHome = (renderProps) => {\n    return (\n      <Home\n        {...renderProps}\n        database={database}\n        currentLocation={location}\n        setDocInfo={setDocInfo}\n        sethospitalInfo={sethospitalInfo}\n        doMainSearch={doMainSearch}\n        getLocationValue={getLocationValue}\n        getKeyWords={getKeyWords}\n        startSearch={startSearch}\n        getSearchMethod={getSearchMethod}\n        searchMethod={searchMethod}\n        searchBegin={searchBegin}\n        setSearchMethod={setSearchMethod}\n        setKeywords={setKeywords}\n        changeConditionLabel={changeConditionLabel}\n        conditionLabel={conditionLabel}\n        keywords={keywords}\n        conditionListForInput={conditionListForInput}\n        specialtyListForInput={specialtyListForInput}\n        bodyPartsDic={bodyPartsDic}\n      />\n    );\n  };\n  const renderResults = (renderProps) => {\n    return (\n      <Results\n        {...renderProps}\n        database={database}\n        setDocInfo={setDocInfo}\n        sethospitalInfo={sethospitalInfo}\n        docInfo={docInfo}\n        hospitalInfo={hospitalInfo}\n        doMainSearch={doMainSearch}\n        getLocationValue={getLocationValue}\n        getKeyWords={getKeyWords}\n        startSearch={startSearch}\n        searchBegin={searchBegin}\n        setSearchMethod={setSearchMethod}\n        keywords={keywords}\n        setKeywords={setKeywords}\n        searchMethod={searchMethod}\n        getSearchMethod={getSearchMethod}\n        filterHosType={filterHosType}\n        filterLanguageList={filterLanguageList}\n        filterYear={filterYear}\n        filterDrivingTime={filterDrivingTime}\n        updateTargetDoc={updateTargetDoc}\n        updateTargetHos={updateTargetHos}\n        conditionListForInput={conditionListForInput}\n        specialtyListForInput={specialtyListForInput}\n        profileBackToDestination={profileBackToDestination}\n        setProfileBackToDestination={setProfileBackToDestination}\n        searchingState={searchingState}\n        setyearOfPractice={setyearOfPractice}\n        setDrivingTime={setyearOfPractice}\n      />\n    );\n  };\n\n  const renderDocProfile = (renderProps) => {\n    return (\n      <Docprofile\n        {...renderProps}\n        database={database}\n        setDatabase={setDatabase}\n        setDocInfo={setDocInfo}\n        sethospitalInfo={sethospitalInfo}\n        docInfo={docInfo}\n        hospitalInfo={hospitalInfo}\n        doMainSearch={doMainSearch}\n        getLocationValue={getLocationValue}\n        getKeyWords={getKeyWords}\n        startSearch={startSearch}\n        searchBegin={searchBegin}\n        setSearchMethod={setSearchMethod}\n        setKeywords={setKeywords}\n        getSearchMethod={getSearchMethod}\n        targetDoc={targetDoc}\n        conditionListForInput={conditionListForInput}\n        specialtyListForInput={specialtyListForInput}\n        profileBackToDestination={profileBackToDestination}\n        setProfileBackToDestination={setProfileBackToDestination}\n\n      />\n    );\n  };\n\n  const renderHosProfile = (renderProps) => {\n    return (\n      <Hospprofile\n        {...renderProps}\n        database={database}\n        setDatabase={setDatabase}\n        setDocInfo={setDocInfo}\n        sethospitalInfo={sethospitalInfo}\n        docInfo={docInfo}\n        hospitalInfo={hospitalInfo}\n        doMainSearch={doMainSearch}\n        getLocationValue={getLocationValue}\n        getKeyWords={getKeyWords}\n        startSearch={startSearch}\n        searchBegin={searchBegin}\n        setSearchMethod={setSearchMethod}\n        setKeywords={setKeywords}\n        getSearchMethod={getSearchMethod}\n        updateTargetDoc={updateTargetDoc}\n        targetHos={targetHos}\n        profileBackToDestination={profileBackToDestination}\n        setProfileBackToDestination={setProfileBackToDestination}\n      />\n    );\n  };\n\n\n\n\n  // michelle改的/加的\n  const renderAccount = (renderProps) => {\n    return <Account\n      {...renderProps}\n      setDocInfo={setDocInfo}\n      sethospitalInfo={sethospitalInfo}\n      setProfileBackToDestination={setProfileBackToDestination}\n      database={database}\n      index={0}\n    />;\n  };\n\n  const renderAccountEditProfile = (renderProps) => {\n    return <Account\n      {...renderProps}\n      updateTargetDoc={updateTargetDoc}\n      updateTargetHos={updateTargetHos}\n      setProfileBackToDestination={setProfileBackToDestination}\n      database={database}\n      index={1}\n    />;\n  };\n\n  const renderSaved = (renderProps) => {\n    return <Account\n      {...renderProps}\n      updateTargetDoc={updateTargetDoc}\n      updateTargetHos={updateTargetHos}\n      setProfileBackToDestination={setProfileBackToDestination}\n      database={database}\n      index={2}\n    />;\n  };\n\n  const renderLikeHistory = (renderProps) => {\n    return <Account\n      {...renderProps}\n      updateTargetDoc={updateTargetDoc}\n      updateTargetHos={updateTargetHos}\n      setProfileBackToDestination={setProfileBackToDestination}\n      database={database}\n      index={3}\n    />;\n  };\n\n  const renderAccountVerification = (renderProps) => {\n    return <Account\n      {...renderProps}\n      updateTargetDoc={updateTargetDoc}\n      updateTargetHos={updateTargetHos}\n      setProfileBackToDestination={setProfileBackToDestination}\n      database={database}\n      index={4}\n    />;\n  };\n\n  const renderAccountSettings = (renderProps) => {\n    return <Account\n      {...renderProps}\n      updateTargetDoc={updateTargetDoc}\n      updateTargetHos={updateTargetHos}\n      setProfileBackToDestination={setProfileBackToDestination}\n      database={database}\n      index={5}\n    />;\n  };\n\n\n\n\n\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <div className=\"container\">\n              <Route exact path=\"/\" render={renderHome}></Route>\n              <AuthRoute exact path=\"/login\" component={login} />\n              <AuthRoute exact path=\"/signup\" component={signup} />\n              <Route exact path=\"/covid19\" component={covid}></Route>\n              <Route exact path=\"/results\" render={renderResults}></Route>\n              <Route exact path=\"/docprofile\" render={renderDocProfile}></Route>\n              <Route\n                exact\n                path=\"/hospprofile\"\n                render={renderHosProfile}\n              ></Route>\n\n              {/*新加的 5/1/2020 */}\n              <Route\n                exact\n                path=\"/hospspecialtyprofile\"\n                component={Hospspecialtyprofile}\n              ></Route>\n\n              {/* michelle改的/加的 */}\n              <Route\n                exact\n                path=\"/account\"\n                render={renderAccount}\n                index={0}\n              ></Route>\n              <Route\n                exact\n                path=\"/profile\"\n                render={renderAccountEditProfile}\n                index={1}\n              ></Route>\n              <Route exact path=\"/saved\" render={renderSaved} index={2}></Route>\n              <Route\n                exact\n                path=\"/likehistory\"\n                render={renderLikeHistory}\n                index={3}\n              ></Route>\n              <Route\n                exact\n                path=\"/accountverification\"\n                render={renderAccountVerification}\n                index={4}\n              ></Route>\n              <Route\n                exact\n                path=\"/accountsettings\"\n                render={renderAccountSettings}\n                index={5}\n              ></Route>\n            </div>\n          </Switch>\n        </Router>\n      </Provider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
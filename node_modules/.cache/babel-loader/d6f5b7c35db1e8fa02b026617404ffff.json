{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Downloads/may3_getVerify_issue/src/Components/profile/DocTags.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Divider from \"@material-ui/core/Divider\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nconst useStyles = makeStyles(theme => ({\n  editTagDialog: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0\n  },\n  tag: {\n    margin: theme.spacing(0.5)\n  },\n  tagDialog: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0,\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 10\n    },\n    marginBottom: 20\n  },\n  editTagsButton: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20\n    }\n  },\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\"\n    }\n  },\n  reviewTagsBox: {\n    [theme.breakpoints.down(\"xs\")]: {\n      justifyContent: \"left\",\n      alignItems: \"left\",\n      marginLeft: 20\n    }\n  },\n  divider: {\n    height: 2,\n    width: 115,\n    backgroundColor: \"#FF8686\"\n  }\n})); // Edit Tags (用在DocInfo.js)\n// 目前doctor所有的tags and edit tags 都是hardcoded， 麻烦你了\n\nfunction Tags(props) {\n  const classes = useStyles(); // load user authenticate \n\n  const authenticated = props.authenticated; // 这是点进去edit tags 会出现的tags选项\n\n  const [editTags, displayEditedTags] = React.useState([{\n    key: 0,\n    label: \"Attentive\"\n  }, {\n    key: 1,\n    label: \"Bedside manner\"\n  }, {\n    key: 2,\n    label: \"Empathetic\"\n  }, {\n    key: 3,\n    label: \"Enthusiastic\"\n  }, {\n    key: 4,\n    label: \"Friendly\"\n  }, {\n    key: 5,\n    label: \"Honest\"\n  }, {\n    key: 6,\n    label: \"Knowledgeable\"\n  }, {\n    key: 7,\n    label: \"Passionate\"\n  }, {\n    key: 8,\n    label: \"Patient\"\n  }, {\n    key: 9,\n    label: \"Respectful\"\n  }, {\n    key: 10,\n    label: \"Responsible\"\n  }, {\n    key: 11,\n    label: \"Trustworthy\"\n  }]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  }; // 这里我想说点了一个tag，就会换色（从outlined 换成default)\n  // 但是我不会写那个logic,所以目前是点了一个tag,所有tag都一起换色了。。麻烦你了\n  // 还有需要弄一个logic是 user再点一次又会换成原来outlined的style,麻烦你了\n  // const [color, setColor] = React.useState(\"outlined\");\n  // const handleClick = () => {\n  //   setColor(\"default\");\n  // };\n  // create a tag list that contains all tags for this doctor\n\n\n  let tagList = [];\n  props.tagInfo.map(tag => {\n    tagList.push( /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      key: tag.TagName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      label: tag.TagName + ' (' + tag.Number + ')',\n      className: classes.tag,\n      color: \"secondary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }))));\n  });\n  console.log(props.tagInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    mb: 2,\n    display: \"flex\",\n    flexDirection: \"column\",\n    className: classes.reviewTagsBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Review Tags\"), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tagDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, tagList, \" \", authenticated ? /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(EditOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 24\n      }\n    }),\n    onClick: handleClickOpen,\n    style: {\n      textTransform: \"none\"\n    },\n    className: classes.editTagsButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, \"Edit Tags\") : \"\"), /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"Body\",\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"Please select tag(s) that best describe this doctor from the list below:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.editTagDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, editTags.map(tag => {\n    let selected;\n    let doctorIndex = props.tagInfo.findIndex(tag => eachTag.tagName == tag);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PreDefinedTag, {\n      tag: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    variant: \"outlined\",\n    color: \"primary\",\n    style: {\n      textTransform: \"none\",\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Done\"))));\n}\n\nfunction PreDefinedTag(props) {\n  const classes = useStyles();\n  const [selected, selectUnselectTag] = React.useState(false);\n\n  const handleClick = () => {\n    selectUnselectTag(!selected);\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: props.tag.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Chip, {\n    label: props.tag.label,\n    className: classes.tag,\n    color: \"secondary\",\n    variant: selected ? \"default\" : \"secondary\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticated: state.user.authenticated\n  };\n}\n\nexport default connect(mapStateToProps)(Tags);","map":{"version":3,"sources":["/Users/Michelle/Downloads/may3_getVerify_issue/src/Components/profile/DocTags.js"],"names":["React","Fragment","connect","makeStyles","Dialog","Chip","Button","Box","Typography","DialogActions","Hidden","Divider","EditOutlinedIcon","useStyles","theme","editTagDialog","display","justifyContent","flexWrap","listStyle","padding","spacing","margin","tag","tagDialog","breakpoints","down","marginLeft","marginBottom","editTagsButton","line","border","reviewTagsBox","alignItems","divider","height","width","backgroundColor","Tags","props","classes","authenticated","editTags","displayEditedTags","useState","key","label","open","setOpen","handleClickOpen","handleClose","value","tagList","tagInfo","map","push","TagName","Number","console","log","textTransform","selected","doctorIndex","findIndex","eachTag","tagName","PreDefinedTag","selectUnselectTag","handleClick","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Divider from \"@material-ui/core/Divider\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  editTagDialog: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  tag: {\n    margin: theme.spacing(0.5),\n  },\n\n  tagDialog: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0,\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 10,\n    },\n    marginBottom: 20,\n  },\n\n  editTagsButton: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n    },\n  },\n\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\",\n    },\n  },\n  reviewTagsBox: {\n    [theme.breakpoints.down(\"xs\")]: {\n      justifyContent: \"left\",\n      alignItems: \"left\",\n      marginLeft: 20,\n    },\n  },\n  divider: {\n    height: 2,\n    width: 115,\n    backgroundColor: \"#FF8686\",\n  },\n}));\n\n\n\n\n// Edit Tags (用在DocInfo.js)\n// 目前doctor所有的tags and edit tags 都是hardcoded， 麻烦你了\nfunction Tags(props) {\n\n  const classes = useStyles();\n  // load user authenticate \n  const authenticated = props.authenticated;\n  // 这是点进去edit tags 会出现的tags选项\n  const [editTags, displayEditedTags] = React.useState([\n    { key: 0, label: \"Attentive\" },\n    { key: 1, label: \"Bedside manner\" },\n    { key: 2, label: \"Empathetic\" },\n    { key: 3, label: \"Enthusiastic\" },\n    { key: 4, label: \"Friendly\" },\n    { key: 5, label: \"Honest\" },\n    { key: 6, label: \"Knowledgeable\" },\n    { key: 7, label: \"Passionate\" },\n    { key: 8, label: \"Patient\" },\n    { key: 9, label: \"Respectful\" },\n    { key: 10, label: \"Responsible\" },\n    { key: 11, label: \"Trustworthy\" },\n  ]);\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n\n  // 这里我想说点了一个tag，就会换色（从outlined 换成default)\n  // 但是我不会写那个logic,所以目前是点了一个tag,所有tag都一起换色了。。麻烦你了\n  // 还有需要弄一个logic是 user再点一次又会换成原来outlined的style,麻烦你了\n  // const [color, setColor] = React.useState(\"outlined\");\n  // const handleClick = () => {\n  //   setColor(\"default\");\n  // };\n\n  // create a tag list that contains all tags for this doctor\n  let tagList = [];\n  props.tagInfo.map((tag) => {\n\n    tagList.push((\n      <Fragment>\n        <li key={tag.TagName}>\n          <Chip\n            label={tag.TagName + ' (' + tag.Number + ')'}\n            className={classes.tag}\n            color=\"secondary\"\n            size=\"small\"\n          />\n        </li>\n      </Fragment>\n    ));\n  })\n\n  console.log(props.tagInfo)\n\n  return (\n    <div>\n      <Hidden smUp>\n        <hr className={classes.line}></hr>\n        <Box\n          mt={2}\n          mb={2}\n          display=\"flex\"\n          flexDirection=\"column\"\n          className={classes.reviewTagsBox}\n        >\n          <Typography variant=\"h6\" color=\"primary\">\n            Review Tags\n          </Typography>\n          <Divider className={classes.divider} />\n        </Box>\n      </Hidden>\n      {/* 显示这个doctor现在有的tags, 目前是hardcoded的， 麻烦你了 */}\n      <div className={classes.tagDialog}>\n        {tagList}{\" \"}\n        {/* 如果登入了，edit tags的button会出现，否则不会出现 */}\n        {authenticated ? (\n          <Button\n            color=\"primary\"\n            startIcon={<EditOutlinedIcon />}\n            onClick={handleClickOpen}\n            style={{ textTransform: \"none\" }}\n            className={classes.editTagsButton}\n          >\n            Edit Tags\n          </Button>\n        ) : (\n            \"\"\n          )}\n      </div>\n\n      <Dialog onClose={handleClose} open={open} maxWidth=\"xs\">\n        <Typography variant=\"Body\" style={{ margin: 20 }}>\n          Please select tag(s) that best describe this doctor from the list\n          below:\n        </Typography>\n        {/* 弹窗出现所有tags选项 */}\n        <div className={classes.editTagDialog}>\n          {editTags.map((tag) => {\n\n            let selected;\n\n            let doctorIndex = props.tagInfo.findIndex(tag => eachTag.tagName == tag)\n\n            \n\n              return (\n                <Fragment>\n                  <PreDefinedTag tag={tag} />\n                </Fragment>\n              );\n          })}\n        </div>\n\n        {/* Done button， 目前是点了就关掉窗口，没有save user点了什么 */}\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ textTransform: \"none\", margin: 10 }}\n          >\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nfunction PreDefinedTag(props) {\n  const classes = useStyles();\n\n  const [selected, selectUnselectTag] = React.useState(false);\n\n  const handleClick = () => {\n    selectUnselectTag(!selected);\n  };\n\n  return (\n    <li key={props.tag.key}>\n      <Chip\n        label={props.tag.label}\n        className={classes.tag}\n        color=\"secondary\"\n        variant={selected ? \"default\" : \"secondary\"}\n        onClick={handleClick}\n      />\n    </li>\n  )\n}\n\n\nfunction mapStateToProps(state) {\n  return { authenticated: state.user.authenticated };\n}\n\nexport default connect(mapStateToProps)(Tags);\n"]},"metadata":{},"sourceType":"module"}
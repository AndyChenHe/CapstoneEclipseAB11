{"ast":null,"code":"var _jsxFileName = \"/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/Navbar.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Logo from \"../img/login/logo.svg\";\nimport LogoWhite from \"../img/login/logo-white.svg\"; // material ui\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Hidden from \"@material-ui/core/Hidden\"; //search\n\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\"; //redux\n\nimport { connect } from \"react-redux\"; // User menu component\n\nimport UserMenu from \"./UserMenu\"; // material ui style\n\nconst styles = theme => ({ ...theme.nav,\n  appbar: {\n    [theme.breakpoints.down(\"sm\")]: {\n      background: \"transparent\",\n      position: \"static\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {},\n    zIndex: theme.zIndex.drawer + 1\n  },\n  logo: {\n    width: \"120px\",\n    height: \"40px\",\n    align: \"left\",\n    position: \"relative\",\n    marginLeft: -10\n  },\n  logowhite: {\n    width: \"96px\",\n    height: \"28px\",\n    align: \"left\",\n    position: \"relative\"\n  },\n  //search ui\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    //backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {//  backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\"\n    }\n  }\n});\n\nclass Navbar extends Component {\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      authenticated\n    } = this.props; //search dialog\n\n    const [open, setOpen] = React.useState(false);\n    const [fullWidth, setFullWidth] = React.useState(true);\n    const [maxWidth, setMaxWidth] = React.useState(\"sm\");\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleMaxWidthChange = event => {\n      setMaxWidth(event.target.value);\n    };\n\n    const handleFullWidthChange = event => {\n      setFullWidth(event.target.checked);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      className: classes.appbar,\n      position: \"fixed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      className: \"nav-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      component: Link,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      only: [\"xs\", \"sm\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Logo,\n      alt: \"logo\",\n      className: classes.logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Hidden, {\n      only: [\"md\", \"lg\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: LogoWhite,\n      alt: \"logo\",\n      className: classes.logowhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, \"You can set my maximum width and whether to adapt or not.\")), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, \"Search\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.search,\n      onClick: handleClickOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.searchIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(InputBase, {\n      placeholder: \"Search\\u2026\",\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.grow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }), authenticated ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(UserMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      only: [\"md\", \"lg\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.iconButton,\n      component: Link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(AccountCircleIcon, {\n      color: \"primary\",\n      style: {\n        fontSize: 28\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Hidden, {\n      only: [\"xs\", \"sm\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.navButton,\n      size: \"small\",\n      variant: \"outlined\",\n      color: \"inherit\",\n      component: Link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, \"Login / Sign up\"))))));\n  }\n\n}\n\nNavbar.propTypes = {\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Navbar));","map":{"version":3,"sources":["/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/Navbar.js"],"names":["React","Component","Fragment","Link","PropTypes","withStyles","AppBar","Toolbar","Button","IconButton","AccountCircleIcon","Hidden","InputBase","SearchIcon","Dialog","DialogActions","DialogContent","DialogContentText","connect","UserMenu","styles","theme","nav","appbar","breakpoints","down","background","position","zIndex","drawer","logo","width","height","align","marginLeft","logowhite","search","borderRadius","shape","marginRight","spacing","up","searchIcon","padding","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Navbar","render","classes","props","authenticated","open","setOpen","useState","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","Logo","LogoWhite","root","input","grow","iconButton","fontSize","navButton","propTypes","bool","isRequired","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Logo from \"../img/login/logo.svg\";\nimport LogoWhite from \"../img/login/logo-white.svg\";\n\n// material ui\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n//search\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n//redux\nimport { connect } from \"react-redux\";\n\n// User menu component\nimport UserMenu from \"./UserMenu\";\n\n// material ui style\nconst styles = (theme) => ({\n  ...theme.nav,\n  appbar: {\n    [theme.breakpoints.down(\"sm\")]: {\n      background: \"transparent\",\n      position: \"static\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {},\n    zIndex: theme.zIndex.drawer + 1,\n  },\n\n  logo: {\n    width: \"120px\",\n    height: \"40px\",\n    align: \"left\",\n    position: \"relative\",\n    marginLeft: -10,\n  },\n\n  logowhite: {\n    width: \"96px\",\n    height: \"28px\",\n    align: \"left\",\n    position: \"relative\",\n  },\n\n  //search ui\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    //backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      //  backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n});\n\nclass Navbar extends Component {\n  render() {\n    const { classes } = this.props;\n    const { authenticated } = this.props;\n\n    //search dialog\n    const [open, setOpen] = React.useState(false);\n    const [fullWidth, setFullWidth] = React.useState(true);\n    const [maxWidth, setMaxWidth] = React.useState(\"sm\");\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleMaxWidthChange = (event) => {\n      setMaxWidth(event.target.value);\n    };\n\n    const handleFullWidthChange = (event) => {\n      setFullWidth(event.target.checked);\n    };\n\n    return (\n      <div>\n        <AppBar className={classes.appbar} position=\"fixed\">\n          <Toolbar className=\"nav-container\">\n            <Button component={Link} to=\"/\">\n              <Hidden only={[\"xs\", \"sm\"]}>\n                <img src={Logo} alt=\"logo\" className={classes.logo} />\n              </Hidden>\n              <Hidden only={[\"md\", \"lg\"]}>\n                <img src={LogoWhite} alt=\"logo\" className={classes.logowhite} />\n              </Hidden>\n            </Button>\n            <React.Fragment>\n              <Dialog\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                open={open}\n                onClose={handleClose}\n              >\n                <DialogContent>\n                  <DialogContentText>\n                    You can set my maximum width and whether to adapt or not.\n                  </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleClose} color=\"primary\">\n                    Search\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </React.Fragment>\n\n            <div className={classes.search} onClick={handleClickOpen}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n              />\n            </div>\n            <div className={classes.grow} />\n\n            {authenticated ? (\n              <Fragment>\n                <UserMenu />\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Hidden only={[\"md\", \"lg\"]}>\n                  <IconButton\n                    className={classes.iconButton}\n                    component={Link}\n                    to=\"/login\"\n                  >\n                    <AccountCircleIcon\n                      color=\"primary\"\n                      style={{ fontSize: 28 }}\n                    />\n                  </IconButton>\n                </Hidden>\n                <Hidden only={[\"xs\", \"sm\"]}>\n                  <Button\n                    className={classes.navButton}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    color=\"inherit\"\n                    component={Link}\n                    to=\"/login\"\n                  >\n                    Login / Sign up\n                  </Button>\n                </Hidden>\n              </Fragment>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  authenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.user.authenticated,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Navbar));\n"]},"metadata":{},"sourceType":"module"}
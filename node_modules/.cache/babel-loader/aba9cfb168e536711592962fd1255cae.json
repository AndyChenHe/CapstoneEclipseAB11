{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/may4_eshin/src/App.js\";\nimport React from \"react\";\nimport \"./css/login.css\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthRoute from \"./util/AuthRoute\";\nimport { useState, useEffect } from \"react\"; // material ui theme\n\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeFile from \"./util/theme\"; //redux\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { SET_AUTHENTICATED } from \"./redux/types\";\nimport { logoutUser, getUserData } from \"./redux/actions/userActions\"; // pages\n\nimport Home from \"./pages/Home\";\nimport login from \"./pages/Login\";\nimport signup from \"./pages/Signup\";\nimport covid from \"./pages/Covid\";\nimport Results from \"./pages/Results\";\nimport Docprofile from \"./pages/DocProfile\";\nimport Hospprofile from \"./pages/HospProfile\"; //新加的 5/1/2020\n\nimport Hospspecialtyprofile from \"./pages/HospSpecialtyProfile\";\nimport Docaccount from \"./pages/DocAccount\";\nimport Axios from \"axios\"; // use themeFile from theme.js\n\nconst theme = createMuiTheme(themeFile); // set up api\n\naxios.defaults.baseURL = \"https://us-central1-mydoc-f3cd9.cloudfunctions.net/api/\"; // backend stuff\n\nconst token = localStorage.FBIdToken;\n\nif (token) {\n  const decodedToken = jwtDecode(token); // log user out when expire\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser());\n    window.location.href = \"/login\";\n  } else {\n    store.dispatch({\n      type: SET_AUTHENTICATED\n    });\n    axios.defaults.headers.common[\"Authorization\"] = token; //deal with page refresh\n\n    store.dispatch(getUserData()); // get user data if logged in\n  }\n} // set up material ui theme\n// route to home/login/sign up\n\n\nfunction App() {\n  const [docInfo, setDocInfo] = useState([]);\n  const [hospitalInfo, sethospitalInfo] = useState([]);\n  const [docInfoCopy, setDocInfoCopy] = useState([]);\n  const [hospitalInfoCopy, sethospitalInfoCopy] = useState([]);\n  const [searchMethod, setSearchMethod] = React.useState(\"Specialty\");\n  const [keywords, setKeywords] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n  const [searchBegin, setSearchBegin] = React.useState(false);\n  const [hosType, setHosType] = React.useState(\"both\");\n  const [languageList, setLanguageList] = React.useState([]);\n  const [yearOfPractice, setyearOfPractice] = React.useState([1000, -1]);\n  const [filterlocation, setFilterlocation] = React.useState([]);\n  const [filterBegin, setFilterBegin] = React.useState(false);\n  const [targetDoc, setTargetDoc] = React.useState(null);\n  const [targetHos, setTargetHos] = React.useState(null);\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n  const getLocationValue = value => {\n    setLocation(value);\n  };\n\n  const getKeyWords = value => {\n    setKeywords(value);\n  };\n\n  const getSearchMethod = value => {\n    setSearchMethod(value);\n    setKeywords(\"\");\n  };\n\n  const startSearch = () => {\n    setSearchBegin(true);\n  };\n\n  const filterHosType = type => {\n    setHosType(type);\n    setFilterBegin(true);\n  };\n\n  const filterLanguageList = lang => {\n    setLanguageList(lang);\n    setFilterBegin(true);\n  };\n\n  const filterYear = range => {\n    setyearOfPractice(range);\n    setFilterBegin(true);\n  };\n\n  const updateTargetDoc = doctor => {\n    setTargetDoc(doctor);\n  };\n\n  const updateTargetHos = hospital => {\n    setTargetHos(hospital);\n  };\n\n  const filterFunction = () => {\n    let newDocList = [];\n    let newHospitalList = [];\n    docInfoCopy.forEach(doctor => {\n      let validateType = doctor[\"Type\"].toLowerCase() == hosType.toLowerCase() || hosType.toLowerCase() == \"both\";\n      let validateLanguage = languageList.every(element => doctor[\"Language\"].indexOf(element) > -1) || languageList == [];\n      let validateYear = yearOfPractice[0] <= doctor[\"YearsofPractice\"] && yearOfPractice[1] >= doctor[\"YearsofPractice\"] || yearOfPractice[0] == 1000;\n\n      if (validateType && validateLanguage && validateYear) {\n        newDocList.push(doctor);\n      }\n    });\n    hospitalInfoCopy.forEach(hos => {\n      let validateType = hos[\"HospitalType\"].toLowerCase() == hosType.toLowerCase() || hosType.toLowerCase() == \"both\";\n      let validateLanguage = languageList.every(element => hos[\"Language\"].indexOf(element) > -1) || languageList == [];\n\n      if (validateType && validateLanguage) {\n        newHospitalList.push(hos);\n      }\n    });\n    setDocInfo(newDocList);\n    sethospitalInfo(newHospitalList);\n  };\n\n  useEffect(() => {\n    if (filterBegin) {\n      filterFunction();\n      return setFilterBegin(false);\n    }\n  });\n\n  const doMainSearch = pageProps => {\n    if (searchBegin) {\n      let rootData = {\n        Gastroenterology: {\n          Name: \"Gastroenterology\",\n          Condition: [\"Fever\", \"Headache\"],\n          Hospital: {\n            PantaiHospitalKualaLumpur: {\n              HospitalName: \"Pantai Hospital Kuala Lumpur\",\n              HospitalType: \"Private\",\n              Language: [\"English\", \"Mandarin\", \"Malay\", \"Hokkien\", \"Cantonese\"],\n              likes: 10000000,\n              RelateSpecialty: \"Gastroenterology\",\n              Web: \"https://www.pantai.com.my/kuala-lumpur\",\n              Hours: \"24 hours\",\n              Address: \"8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n              Zip: \"92310\",\n              Phone: \"+603-2296 0888\",\n              Tags: [{\n                TagName: \"Customer Service\",\n                Number: 2\n              }, {\n                TagName: \"Facility\",\n                Number: 3\n              }, {\n                TagName: \"Friendly\",\n                Number: 5\n              }],\n              Insurance: [\"Asia Assistance Network\", \"AIA\", \"AIA - Employee Benefit\", \"AIA Datalink\"],\n              TopSpecialty: [{\n                SpecialtyName: \"Gastroenterology\",\n                Likes: 10\n              }, {\n                SpecialtyName: \"TestA\",\n                Likes: 5\n              }, {\n                SpecialtyName: \"TestB\",\n                Likes: 6\n              }, {\n                SpecialtyName: \"TestC\",\n                Likes: 1\n              }],\n              Doctors: {\n                AlexLeow1: {\n                  DocName: \"Alex Leow1\",\n                  Specialty: \"Gastroenterology\",\n                  Hospital: \"Pantai Hospital Kuala Lumpur\",\n                  YearsofPractice: 7,\n                  Address: \"No. A103a - Endoscopy Centre, 1st Floor, Block A, 8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n                  Phone: \" +603-2296 0763 Ext. 1111\",\n                  Tags: [{\n                    TagName: \"Bedside Manner\",\n                    Number: 1\n                  }, {\n                    TagName: \"Enthusiastic\",\n                    Number: 10\n                  }, {\n                    TagName: \"Friendly\",\n                    Number: 5\n                  }],\n                  Appointment: {\n                    Onsite: {\n                      Content: \"Onsite\",\n                      Status: \"Active\"\n                    },\n                    PhoneCall: {\n                      Content: \"206-123-4567\",\n                      Status: \"\"\n                    },\n                    Online: {\n                      Content: \"https://www.pantai.com.my/kuala-lumpur\",\n                      Status: \"Active\"\n                    },\n                    Email: {\n                      Content: \"chenh57@uw.edu\",\n                      Status: \"Active\"\n                    }\n                  },\n                  Qualification: \"MMed (Mal), MB. BCh. BAO. (Hons) LRCPI & LRCSI (Ire), B. Biomed Sci. (Hons) (UM)\",\n                  Language: [\"English\", \"Mandarin\", \"Malay\", \"Hokkien\", \"Cantonese\"],\n                  Type: \"Private\",\n                  Procedures: [\"Colonoscopy\", \"Gastroscopy\", \"Endoscopic Retrograde Cholangiopancreatography (ERCP)\", \"Fibroscan\", \"Liver Biopsy\", \"Endoscopic Ultrasound (EUS)\", \"Small Bowel Enteroscopy\", \"Capsule Endoscopy\"],\n                  Conditions: [\"Helicobacter Pylori Infection\", \"Dyspepsia\", \"Gastro Esophageal Reflux Disease\", \"Fever\"],\n                  NumberOfLikes: 12315\n                },\n                AlexLeow2: {\n                  DocName: \"Alex Leow2\",\n                  Specialty: \"Gastroenterology\",\n                  Hospital: \"Pantai Hospital Kuala Lumpur\",\n                  YearsofPractice: 7,\n                  Address: \"No. A103a - Endoscopy Centre, 1st Floor, Block A, 8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n                  Phone: \" +603-2296 0763 Ext. 1111\",\n                  Tags: [{\n                    TagName: \"Bedside Manner\",\n                    Number: 1\n                  }, {\n                    TagName: \"Enthusiastic\",\n                    Number: 10\n                  }, {\n                    TagName: \"Friendly\",\n                    Number: 5\n                  }],\n                  Appointment: {\n                    Onsite: {\n                      Content: \"Onsite\",\n                      Status: \"Active\"\n                    },\n                    PhoneCall: {\n                      Content: \"206-123-4567\",\n                      Status: \"\"\n                    },\n                    Online: {\n                      Content: \"https://www.pantai.com.my/kuala-lumpur\",\n                      Status: \"Active\"\n                    },\n                    Email: {\n                      Content: \"chenh57@uw.edu\",\n                      Status: \"Active\"\n                    }\n                  },\n                  Qualification: \"MMed (Mal), MB. BCh. BAO. (Hons) LRCPI & LRCSI (Ire), B. Biomed Sci. (Hons) (UM)\",\n                  Language: [\"English\", \"Mandarin\", \"Malay\", \"Hokkien\", \"Cantonese\"],\n                  Type: \"Private\",\n                  Procedures: [\"Colonoscopy\", \"Gastroscopy\", \"Endoscopic Retrograde Cholangiopancreatography (ERCP)\", \"Fibroscan\", \"Liver Biopsy\", \"Endoscopic Ultrasound (EUS)\", \"Small Bowel Enteroscopy\", \"Capsule Endoscopy\"],\n                  Conditions: [\"Helicobacter Pylori Infection\", \"Dyspepsia\", \"Gastro Esophageal Reflux Disease\", \"Fever\"],\n                  NumberOfLikes: 12315\n                }\n              }\n            }\n          }\n        }\n      };\n      let newDocData = [];\n      let newHosData = [];\n      let userKeyWords = keywords.replace(\" \", \"\").toLowerCase();\n      console.log(location); // let geoLocation = null;\n      // axios.get('https://maps.googleapis.com/maps/api/geocode/json', {\n      //   params:{\n      //     address:location,\n      //     key:'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n      //  }\n      // }).then(function(response){\n      //   geoLocation = response.data.results[0].geometry.location;\n      // }).then(function(res){\n      //     console.log(geoLocation);\n      // })\n      // .catch(function(error){\n      //   console.log(error);\n      // });\n      // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      // axios.get(proxyurl+'https://maps.googleapis.com/maps/api/distancematrix/json', {\n      //   params:{\n      //     origins:location,\n      //     destinations: 'Beijing',\n      //     key:'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n      //  }\n      // }).then(function(response){\n      //   // console.log('hi');\n      //   geoLocation = response;\n      // }).then(function(){\n      //     // console.log(geoLocation.data.rows[0].elements[0].duration.value / 3600);\n      // })\n      // .catch(function(error){\n      //   console.log(error);\n      // });\n\n      if (searchMethod == 'Specialty') {\n        for (let specialty in rootData) {\n          // console.log(rootData[specialty]);\n          if (specialty.replace(\" \", \"\").toLowerCase() == userKeyWords) {\n            if (location == '') {\n              for (let hospital in rootData[specialty]['Hospital']) {\n                let hospitalInfo = rootData[specialty]['Hospital'][hospital];\n                newHosData.push(hospitalInfo);\n\n                for (let doctor in hospitalInfo['Doctors']) {\n                  newDocData.push(hospitalInfo['Doctors'][doctor]);\n                }\n              }\n            } else {\n              for (let hospital in rootData[specialty]['Hospital']) {\n                let hospitalInfo = rootData[specialty]['Hospital'][hospital];\n                let potentialLocation = hospitalInfo.Address;\n                axios.get(proxyurl + 'https://maps.googleapis.com/maps/api/distancematrix/json', {\n                  params: {\n                    origins: location,\n                    destinations: potentialLocation,\n                    key: 'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n                  }\n                }).then(function (response) {\n                  // console.log('hi');\n                  // 两地之间坐车所需的时间(hours)\n                  let duration = response.data.rows[0].elements[0].duration.value / 3600;\n\n                  if (duration < 1.5) {\n                    newHosData.push(hospital);\n                  }\n\n                  geoLocation = response;\n                }).catch(function (error) {\n                  console.log(error);\n                });\n              }\n            }\n          }\n        }\n\n        console.log(newHosData);\n        console.log(newDocData);\n      } // if (searchMethod == \"Specialty\") {\n      //   if (locationInfo == \"\") {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let specialtyName = specialtyItem[\"Name\"];\n      //       specialtyName = specialtyName.replace(\" \", \"\").toLowerCase();\n      //       if (userKeyWords == specialtyName) {\n      //         specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //           newHosData.push(hospital);\n      //           newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n      //         });\n      //       }\n      //     });\n      //   } else {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let specialtyName = specialtyItem[\"Name\"];\n      //       specialtyName = specialtyName.replace(\" \", \"\").toLowerCase();\n      //       specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //         let locationZip = hospital[\"Zip\"];\n      //         if (\n      //           locationZip == locationInfo &&\n      //           userKeyWords == specialtyName\n      //         ) {\n      //           newHosData.push(hospital);\n      //           newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n      //         }\n      //       });\n      //     });\n      //   }\n      // } else if (searchMethod == \"Doctor\") {\n      //   if (locationInfo == \"\") {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let foundDoc = 0;\n      //       specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //         let docName = hospital[\"Doctors\"];\n      //         docName.forEach((doctor) => {\n      //           let docName = doctor[\"DocName\"].replace(\" \", \"\").toLowerCase();\n      //           if (docName == userKeyWords) {\n      //             newDocData.push(doctor);\n      //             if (foundDoc == 0) {\n      //               newHosData.push(hospital);\n      //             }\n      //             foundDoc++;\n      //           }\n      //         });\n      //       });\n      //     });\n      //   } else {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let foundDoc = 0;\n      //       specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //         let locationZip = hospital[\"Zip\"];\n      //         let docName = hospital[\"Doctors\"];\n      //         docName.forEach((doctor) => {\n      //           let docName = doctor[\"DocName\"];\n      //           if (\n      //             docName.replace(\" \", \"\").toLowerCase() ==\n      //               userKeyWords.toLowerCase() &&\n      //             locationZip == locationInfo\n      //           ) {\n      //             newDocData.push(doctor);\n      //             foundDoc++;\n      //           }\n      //           if (foundDoc == 1) {\n      //             newHosData.push(hospital);\n      //           }\n      //         });\n      //       });\n      //     });\n      //   }\n      // } else if (searchMethod == \"Hospital\") {\n      //   if (locationInfo == \"\") {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let foundTarget = true;\n      //       let hosList = specialtyItem[\"Hospital\"];\n      //       hosList.forEach((hospital) => {\n      //         let hosName = hospital[\"HospitalName\"];\n      //         hosName = hosName.replace(\" \", \"\").toLowerCase();\n      //         if (userKeyWords.toLowerCase() == hosName) {\n      //           if (foundTarget) {\n      //             newHosData.push(hospital);\n      //           }\n      //           newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n      //           foundTarget = false;\n      //         }\n      //       });\n      //     });\n      //   } else {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let foundTarget = true;\n      //       let hosList = specialtyItem[\"Hospital\"];\n      //       hosList.forEach((hospital) => {\n      //         let hosName = hospital[\"HospitalName\"];\n      //         let locationZip = hospital[\"Zip\"];\n      //         hosName = hosName.replace(\" \", \"\").toLowerCase();\n      //         if (\n      //           userKeyWords.toLowerCase() == hosName &&\n      //           locationZip == locationInfo\n      //         ) {\n      //           if (foundTarget) {\n      //             newHosData.push(hospital);\n      //           }\n      //           newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n      //           foundTarget = false;\n      //         }\n      //       });\n      //     });\n      //   }\n      // } else {\n      //   if (locationInfo == \"\") {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let condtionList = specialtyItem[\"Condition\"];\n      //       condtionList = condtionList.map(function (item) {\n      //         return item.toLowerCase();\n      //       });\n      //       if (condtionList.includes(userKeyWords)) {\n      //         specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //           newHosData.push(hospital);\n      //           hospital[\"Doctors\"].forEach((doctor) => {\n      //             let docCondition = doctor[\"Conditions\"];\n      //             docCondition = docCondition.map(function (item) {\n      //               return item.toLowerCase();\n      //             });\n      //             if (docCondition.includes(userKeyWords)) {\n      //               newDocData.push(doctor);\n      //             }\n      //           });\n      //         });\n      //       }\n      //     });\n      //   } else {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let condtionList = specialtyItem[\"Condition\"];\n      //       condtionList = condtionList.map(function (item) {\n      //         return item.toLowerCase();\n      //       });\n      //       specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //         let locationZip = hospital[\"Zip\"];\n      //         if (\n      //           locationZip == locationInfo &&\n      //           condtionList.includes(userKeyWords)\n      //         ) {\n      //           newHosData.push(hospital);\n      //           hospital[\"Doctors\"].forEach((doctor) => {\n      //             let docCondition = doctor[\"Conditions\"];\n      //             docCondition = docCondition.map(function (item) {\n      //               return item.toLowerCase();\n      //             });\n      //             if (docCondition.includes(userKeyWords)) {\n      //               newDocData.push(doctor);\n      //             }\n      //           });\n      //         }\n      //       });\n      //     });\n      //   }\n      // }\n      // sethospitalInfo(newHosData);\n      // setDocInfo(newDocData);\n      // sethospitalInfoCopy(newHosData);\n      // setDocInfoCopy(newDocData);\n      // if (pageProps.history != null) {\n      //   pageProps.history.push(\"/results\");\n      // }\n\n    }\n\n    return function resetSearchStatus() {\n      setSearchBegin(false);\n    };\n  };\n\n  const renderHome = renderProps => {\n    return /*#__PURE__*/React.createElement(Home, Object.assign({}, renderProps, {\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      getSearchMethod: getSearchMethod,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      setKeywords: setKeywords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const renderResults = renderProps => {\n    return /*#__PURE__*/React.createElement(Results, Object.assign({}, renderProps, {\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      docInfo: docInfo,\n      hospitalInfo: hospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      setKeywords: setKeywords,\n      getSearchMethod: getSearchMethod,\n      filterHosType: filterHosType,\n      filterLanguageList: filterLanguageList,\n      filterYear: filterYear,\n      updateTargetDoc: updateTargetDoc,\n      updateTargetHos: updateTargetHos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const renderDocProfile = renderProps => {\n    return /*#__PURE__*/React.createElement(Docprofile, Object.assign({}, renderProps, {\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      docInfo: docInfo,\n      hospitalInfo: hospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      setKeywords: setKeywords,\n      getSearchMethod: getSearchMethod,\n      targetDoc: targetDoc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const renderHosProfile = renderProps => {\n    return /*#__PURE__*/React.createElement(Hospprofile, Object.assign({}, renderProps, {\n      setDocInfo: setDocInfo,\n      sethospitalInfo: sethospitalInfo,\n      docInfo: docInfo,\n      hospitalInfo: hospitalInfo,\n      doMainSearch: doMainSearch,\n      getLocationValue: getLocationValue,\n      getKeyWords: getKeyWords,\n      startSearch: startSearch,\n      searchBegin: searchBegin,\n      setSearchMethod: setSearchMethod,\n      setKeywords: setKeywords,\n      getSearchMethod: getSearchMethod,\n      updateTargetDoc: updateTargetDoc,\n      targetHos: targetHos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 7\n      }\n    }));\n  }; // michelle改的/加的\n\n\n  const renderDocAccount = renderProps => {\n    return /*#__PURE__*/React.createElement(Docaccount, {\n      index: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderDocAccountEditProfile = renderProps => {\n    return /*#__PURE__*/React.createElement(Docaccount, {\n      index: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderSaved = renderProps => {\n    return /*#__PURE__*/React.createElement(Docaccount, {\n      index: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderLikeHistory = renderProps => {\n    return /*#__PURE__*/React.createElement(Docaccount, {\n      index: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderDocAccountVerification = renderProps => {\n    return /*#__PURE__*/React.createElement(Docaccount, {\n      index: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderAccountSettings = renderProps => {\n    return /*#__PURE__*/React.createElement(Docaccount, {\n      index: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: renderHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AuthRoute, {\n    exact: true,\n    path: \"/login\",\n    component: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AuthRoute, {\n    exact: true,\n    path: \"/signup\",\n    component: signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/covid19\",\n    component: covid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/results\",\n    render: renderResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/docprofile\",\n    render: renderDocProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/hospprofile\",\n    render: renderHosProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/hospspecialtyprofile\",\n    component: Hospspecialtyprofile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/docaccount\",\n    render: renderDocAccount,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/profile\",\n    render: renderDocAccountEditProfile,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/saved\",\n    render: renderSaved,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/likehistory\",\n    render: renderLikeHistory,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/accountverification\",\n    render: renderDocAccountVerification,\n    index: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/accountsettings\",\n    render: renderAccountSettings,\n    index: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andychenhe/Desktop/may4_eshin/src/App.js"],"names":["React","axios","BrowserRouter","Router","Switch","Route","jwtDecode","AuthRoute","useState","useEffect","ThemeProvider","MuiThemeProvider","createMuiTheme","themeFile","Provider","store","SET_AUTHENTICATED","logoutUser","getUserData","Home","login","signup","covid","Results","Docprofile","Hospprofile","Hospspecialtyprofile","Docaccount","Axios","theme","defaults","baseURL","token","localStorage","FBIdToken","decodedToken","exp","Date","now","dispatch","window","location","href","type","headers","common","App","docInfo","setDocInfo","hospitalInfo","sethospitalInfo","docInfoCopy","setDocInfoCopy","hospitalInfoCopy","sethospitalInfoCopy","searchMethod","setSearchMethod","keywords","setKeywords","setLocation","searchBegin","setSearchBegin","hosType","setHosType","languageList","setLanguageList","yearOfPractice","setyearOfPractice","filterlocation","setFilterlocation","filterBegin","setFilterBegin","targetDoc","setTargetDoc","targetHos","setTargetHos","proxyurl","getLocationValue","value","getKeyWords","getSearchMethod","startSearch","filterHosType","filterLanguageList","lang","filterYear","range","updateTargetDoc","doctor","updateTargetHos","hospital","filterFunction","newDocList","newHospitalList","forEach","validateType","toLowerCase","validateLanguage","every","element","indexOf","validateYear","push","hos","doMainSearch","pageProps","rootData","Gastroenterology","Name","Condition","Hospital","PantaiHospitalKualaLumpur","HospitalName","HospitalType","Language","likes","RelateSpecialty","Web","Hours","Address","Zip","Phone","Tags","TagName","Number","Insurance","TopSpecialty","SpecialtyName","Likes","Doctors","AlexLeow1","DocName","Specialty","YearsofPractice","Appointment","Onsite","Content","Status","PhoneCall","Online","Email","Qualification","Type","Procedures","Conditions","NumberOfLikes","AlexLeow2","newDocData","newHosData","userKeyWords","replace","console","log","specialty","potentialLocation","get","params","origins","destinations","key","then","response","duration","data","rows","elements","geoLocation","catch","error","resetSearchStatus","renderHome","renderProps","renderResults","renderDocProfile","renderHosProfile","renderDocAccount","renderDocAccountEditProfile","renderSaved","renderLikeHistory","renderDocAccountVerification","renderAccountSettings"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/login.css\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthRoute from \"./util/AuthRoute\";\nimport { useState, useEffect } from \"react\";\n\n// material ui theme\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeFile from \"./util/theme\";\n\n//redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { SET_AUTHENTICATED } from \"./redux/types\";\nimport { logoutUser, getUserData } from \"./redux/actions/userActions\";\n\n// pages\nimport Home from \"./pages/Home\";\nimport login from \"./pages/Login\";\nimport signup from \"./pages/Signup\";\nimport covid from \"./pages/Covid\";\nimport Results from \"./pages/Results\";\nimport Docprofile from \"./pages/DocProfile\";\nimport Hospprofile from \"./pages/HospProfile\";\n\n//新加的 5/1/2020\nimport Hospspecialtyprofile from \"./pages/HospSpecialtyProfile\";\nimport Docaccount from \"./pages/DocAccount\";\nimport Axios from \"axios\";\n\n// use themeFile from theme.js\nconst theme = createMuiTheme(themeFile);\n\n// set up api\naxios.defaults.baseURL =\n  \"https://us-central1-mydoc-f3cd9.cloudfunctions.net/api/\";\n\n// backend stuff\nconst token = localStorage.FBIdToken;\n\nif (token) {\n  const decodedToken = jwtDecode(token);\n  // log user out when expire\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser());\n    window.location.href = \"/login\";\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common[\"Authorization\"] = token; //deal with page refresh\n    store.dispatch(getUserData()); // get user data if logged in\n  }\n}\n\n// set up material ui theme\n// route to home/login/sign up\nfunction App() {\n  const [docInfo, setDocInfo] = useState([]);\n  const [hospitalInfo, sethospitalInfo] = useState([]);\n  const [docInfoCopy, setDocInfoCopy] = useState([]);\n  const [hospitalInfoCopy, sethospitalInfoCopy] = useState([]);\n  const [searchMethod, setSearchMethod] = React.useState(\"Specialty\");\n  const [keywords, setKeywords] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n  const [searchBegin, setSearchBegin] = React.useState(false);\n  const [hosType, setHosType] = React.useState(\"both\");\n  const [languageList, setLanguageList] = React.useState([]);\n  const [yearOfPractice, setyearOfPractice] = React.useState([1000, -1]);\n  const [filterlocation, setFilterlocation] = React.useState([]);\n  const [filterBegin, setFilterBegin] = React.useState(false);\n  const [targetDoc, setTargetDoc] = React.useState(null);\n  const [targetHos, setTargetHos] = React.useState(null);\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n\n  const getLocationValue = (value) => {\n    setLocation(value);\n  };\n\n  const getKeyWords = (value) => {\n    setKeywords(value);\n  };\n\n  const getSearchMethod = (value) => {\n    setSearchMethod(value);\n    setKeywords(\"\");\n  };\n\n  const startSearch = () => {\n    setSearchBegin(true);\n  };\n\n  const filterHosType = (type) => {\n    setHosType(type);\n    setFilterBegin(true);\n  };\n\n  const filterLanguageList = (lang) => {\n    setLanguageList(lang);\n    setFilterBegin(true);\n  };\n\n  const filterYear = (range) => {\n    setyearOfPractice(range);\n    setFilterBegin(true);\n  };\n\n  const updateTargetDoc = (doctor) => {\n    setTargetDoc(doctor);\n  };\n\n  const updateTargetHos = (hospital) => {\n    setTargetHos(hospital);\n  };\n\n  const filterFunction = () => {\n    let newDocList = [];\n    let newHospitalList = [];\n    docInfoCopy.forEach((doctor) => {\n      let validateType =\n        doctor[\"Type\"].toLowerCase() == hosType.toLowerCase() ||\n        hosType.toLowerCase() == \"both\";\n      let validateLanguage =\n        languageList.every(\n          (element) => doctor[\"Language\"].indexOf(element) > -1\n        ) || languageList == [];\n      let validateYear =\n        (yearOfPractice[0] <= doctor[\"YearsofPractice\"] &&\n          yearOfPractice[1] >= doctor[\"YearsofPractice\"]) ||\n        yearOfPractice[0] == 1000;\n      if (validateType && validateLanguage && validateYear) {\n        newDocList.push(doctor);\n      }\n    });\n\n    hospitalInfoCopy.forEach((hos) => {\n      let validateType =\n        hos[\"HospitalType\"].toLowerCase() == hosType.toLowerCase() ||\n        hosType.toLowerCase() == \"both\";\n      let validateLanguage =\n        languageList.every(\n          (element) => hos[\"Language\"].indexOf(element) > -1\n        ) || languageList == [];\n      if (validateType && validateLanguage) {\n        newHospitalList.push(hos);\n      }\n    });\n    setDocInfo(newDocList);\n    sethospitalInfo(newHospitalList);\n  };\n\n  useEffect(() => {\n    if (filterBegin) {\n      filterFunction();\n      return setFilterBegin(false);\n    }\n  });\n\n  const doMainSearch = (pageProps) => {\n    if (searchBegin) {\n      let rootData = {\n        Gastroenterology: \n          {\n            Name: \"Gastroenterology\",\n            Condition: [\"Fever\", \"Headache\"],\n            Hospital: {\n              PantaiHospitalKualaLumpur : {\n                HospitalName: \"Pantai Hospital Kuala Lumpur\",\n                HospitalType: \"Private\",\n                Language: [\n                  \"English\",\n                  \"Mandarin\",\n                  \"Malay\",\n                  \"Hokkien\",\n                  \"Cantonese\",\n                ],\n                likes: 10000000,\n                RelateSpecialty: \"Gastroenterology\",\n                Web: \"https://www.pantai.com.my/kuala-lumpur\",\n                Hours: \"24 hours\",\n                Address: \"8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n                Zip: \"92310\",\n                Phone: \"+603-2296 0888\",\n                Tags: [\n                  {\n                    TagName: \"Customer Service\",\n                    Number: 2,\n                  },\n                  {\n                    TagName: \"Facility\",\n                    Number: 3,\n                  },\n                  {\n                    TagName: \"Friendly\",\n                    Number: 5,\n                  },\n                ],\n                Insurance: [\n                  \"Asia Assistance Network\",\n                  \"AIA\",\n                  \"AIA - Employee Benefit\",\n                  \"AIA Datalink\",\n                ],\n                TopSpecialty: [\n                  {\n                    SpecialtyName: \"Gastroenterology\",\n                    Likes: 10,\n                  },\n                  {\n                    SpecialtyName: \"TestA\",\n                    Likes: 5,\n                  },\n                  {\n                    SpecialtyName: \"TestB\",\n                    Likes: 6,\n                  },\n                  {\n                    SpecialtyName: \"TestC\",\n                    Likes: 1,\n                  },\n                ],\n                Doctors: {\n                  AlexLeow1 : {\n                    DocName: \"Alex Leow1\",\n                    Specialty: \"Gastroenterology\",\n                    Hospital: \"Pantai Hospital Kuala Lumpur\",\n                    YearsofPractice: 7,\n                    Address:\n                      \"No. A103a - Endoscopy Centre, 1st Floor, Block A, 8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n                    Phone: \" +603-2296 0763 Ext. 1111\",\n                    Tags: [\n                      {\n                        TagName: \"Bedside Manner\",\n                        Number: 1,\n                      },\n                      {\n                        TagName: \"Enthusiastic\",\n                        Number: 10,\n                      },\n                      {\n                        TagName: \"Friendly\",\n                        Number: 5,\n                      },\n                    ],\n                    Appointment: {\n                      Onsite: {\n                        Content: \"Onsite\",\n                        Status: \"Active\",\n                      },\n                      PhoneCall: {\n                        Content: \"206-123-4567\",\n                        Status: \"\",\n                      },\n                      Online: {\n                        Content: \"https://www.pantai.com.my/kuala-lumpur\",\n                        Status: \"Active\",\n                      },\n                      Email: {\n                        Content: \"chenh57@uw.edu\",\n                        Status: \"Active\",\n                      },\n                    },\n                    Qualification:\n                      \"MMed (Mal), MB. BCh. BAO. (Hons) LRCPI & LRCSI (Ire), B. Biomed Sci. (Hons) (UM)\",\n                    Language: [\n                      \"English\",\n                      \"Mandarin\",\n                      \"Malay\",\n                      \"Hokkien\",\n                      \"Cantonese\",\n                    ],\n                    Type: \"Private\",\n                    Procedures: [\n                      \"Colonoscopy\",\n                      \"Gastroscopy\",\n                      \"Endoscopic Retrograde Cholangiopancreatography (ERCP)\",\n                      \"Fibroscan\",\n                      \"Liver Biopsy\",\n                      \"Endoscopic Ultrasound (EUS)\",\n                      \"Small Bowel Enteroscopy\",\n                      \"Capsule Endoscopy\",\n                    ],\n                    Conditions: [\n                      \"Helicobacter Pylori Infection\",\n                      \"Dyspepsia\",\n                      \"Gastro Esophageal Reflux Disease\",\n                      \"Fever\",\n                    ],\n                    NumberOfLikes: 12315\n                  },\n                  AlexLeow2 : {\n                    DocName: \"Alex Leow2\",\n                    Specialty: \"Gastroenterology\",\n                    Hospital: \"Pantai Hospital Kuala Lumpur\",\n                    YearsofPractice: 7,\n                    Address:\n                      \"No. A103a - Endoscopy Centre, 1st Floor, Block A, 8, Jalan Bukit Pantai 59100 Kuala Lumpur\",\n                    Phone: \" +603-2296 0763 Ext. 1111\",\n                    Tags: [\n                      {\n                        TagName: \"Bedside Manner\",\n                        Number: 1,\n                      },\n                      {\n                        TagName: \"Enthusiastic\",\n                        Number: 10,\n                      },\n                      {\n                        TagName: \"Friendly\",\n                        Number: 5,\n                      },\n                    ],\n                    Appointment: {\n                      Onsite: {\n                        Content: \"Onsite\",\n                        Status: \"Active\",\n                      },\n                      PhoneCall: {\n                        Content: \"206-123-4567\",\n                        Status: \"\",\n                      },\n                      Online: {\n                        Content: \"https://www.pantai.com.my/kuala-lumpur\",\n                        Status: \"Active\",\n                      },\n                      Email: {\n                        Content: \"chenh57@uw.edu\",\n                        Status: \"Active\",\n                      },\n                    },\n                    Qualification:\n                      \"MMed (Mal), MB. BCh. BAO. (Hons) LRCPI & LRCSI (Ire), B. Biomed Sci. (Hons) (UM)\",\n                    Language: [\n                      \"English\",\n                      \"Mandarin\",\n                      \"Malay\",\n                      \"Hokkien\",\n                      \"Cantonese\",\n                    ],\n                    Type: \"Private\",\n                    Procedures: [\n                      \"Colonoscopy\",\n                      \"Gastroscopy\",\n                      \"Endoscopic Retrograde Cholangiopancreatography (ERCP)\",\n                      \"Fibroscan\",\n                      \"Liver Biopsy\",\n                      \"Endoscopic Ultrasound (EUS)\",\n                      \"Small Bowel Enteroscopy\",\n                      \"Capsule Endoscopy\",\n                    ],\n                    Conditions: [\n                      \"Helicobacter Pylori Infection\",\n                      \"Dyspepsia\",\n                      \"Gastro Esophageal Reflux Disease\",\n                      \"Fever\",\n                    ],\n                    NumberOfLikes: 12315\n                  }\n                }\n              }\n            }\n          }\n        };\n      let newDocData = [];\n      let newHosData = [];\n      let userKeyWords = keywords.replace(\" \", \"\").toLowerCase();\n      console.log(location);\n      \n      // let geoLocation = null;\n\n      // axios.get('https://maps.googleapis.com/maps/api/geocode/json', {\n      //   params:{\n      //     address:location,\n      //     key:'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n      //  }\n      // }).then(function(response){\n      //   geoLocation = response.data.results[0].geometry.location;\n      // }).then(function(res){\n      //     console.log(geoLocation);\n      // })\n      // .catch(function(error){\n      //   console.log(error);\n      // });\n      \n      // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      // axios.get(proxyurl+'https://maps.googleapis.com/maps/api/distancematrix/json', {\n      //   params:{\n      //     origins:location,\n      //     destinations: 'Beijing',\n      //     key:'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n      //  }\n      // }).then(function(response){\n      //   // console.log('hi');\n      //   geoLocation = response;\n      // }).then(function(){\n      //     // console.log(geoLocation.data.rows[0].elements[0].duration.value / 3600);\n      // })\n      // .catch(function(error){\n      //   console.log(error);\n      // });\n\n      if(searchMethod == 'Specialty'){\n        for (let specialty in rootData){\n          // console.log(rootData[specialty]);\n          if(specialty.replace(\" \", \"\").toLowerCase() == userKeyWords){\n            if (location == ''){\n              for (let hospital in rootData[specialty]['Hospital']){\n                let hospitalInfo = rootData[specialty]['Hospital'][hospital];\n                newHosData.push(hospitalInfo);\n                for (let doctor in hospitalInfo['Doctors'] ){\n                  newDocData.push(hospitalInfo['Doctors'][doctor]);\n                }\n              }\n            } else {\n              for (let hospital in rootData[specialty]['Hospital']){\n                let hospitalInfo = rootData[specialty]['Hospital'][hospital];\n                let potentialLocation = hospitalInfo.Address;\n                axios.get(proxyurl+'https://maps.googleapis.com/maps/api/distancematrix/json', {\n                  params:{\n                    origins:location,\n                    destinations: potentialLocation,\n                    key:'AIzaSyDHEaLdiFVUAJGJUW9fqq_VhOhBL4FzebQ'\n                 }\n                }).then(function(response){\n                  // console.log('hi');\n                  // 两地之间坐车所需的时间(hours)\n                  let duration = response.data.rows[0].elements[0].duration.value / 3600\n                  if (duration <1.5){\n                    newHosData.push(hospital);\n                  }\n                  geoLocation = response;\n                })\n                .catch(function(error){\n                  console.log(error);\n                });\n              }\n            }\n          }\n        }\n        console.log(newHosData);\n        console.log(newDocData);\n      \n      \n      }\n\n      // if (searchMethod == \"Specialty\") {\n      //   if (locationInfo == \"\") {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let specialtyName = specialtyItem[\"Name\"];\n      //       specialtyName = specialtyName.replace(\" \", \"\").toLowerCase();\n      //       if (userKeyWords == specialtyName) {\n      //         specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //           newHosData.push(hospital);\n      //           newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n      //         });\n      //       }\n      //     });\n      //   } else {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let specialtyName = specialtyItem[\"Name\"];\n      //       specialtyName = specialtyName.replace(\" \", \"\").toLowerCase();\n      //       specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //         let locationZip = hospital[\"Zip\"];\n      //         if (\n      //           locationZip == locationInfo &&\n      //           userKeyWords == specialtyName\n      //         ) {\n      //           newHosData.push(hospital);\n      //           newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n      //         }\n      //       });\n      //     });\n      //   }\n      // } else if (searchMethod == \"Doctor\") {\n      //   if (locationInfo == \"\") {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let foundDoc = 0;\n      //       specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //         let docName = hospital[\"Doctors\"];\n      //         docName.forEach((doctor) => {\n      //           let docName = doctor[\"DocName\"].replace(\" \", \"\").toLowerCase();\n      //           if (docName == userKeyWords) {\n      //             newDocData.push(doctor);\n      //             if (foundDoc == 0) {\n      //               newHosData.push(hospital);\n      //             }\n      //             foundDoc++;\n      //           }\n      //         });\n      //       });\n      //     });\n      //   } else {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let foundDoc = 0;\n      //       specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //         let locationZip = hospital[\"Zip\"];\n      //         let docName = hospital[\"Doctors\"];\n      //         docName.forEach((doctor) => {\n      //           let docName = doctor[\"DocName\"];\n      //           if (\n      //             docName.replace(\" \", \"\").toLowerCase() ==\n      //               userKeyWords.toLowerCase() &&\n      //             locationZip == locationInfo\n      //           ) {\n      //             newDocData.push(doctor);\n      //             foundDoc++;\n      //           }\n      //           if (foundDoc == 1) {\n      //             newHosData.push(hospital);\n      //           }\n      //         });\n      //       });\n      //     });\n      //   }\n      // } else if (searchMethod == \"Hospital\") {\n      //   if (locationInfo == \"\") {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let foundTarget = true;\n      //       let hosList = specialtyItem[\"Hospital\"];\n      //       hosList.forEach((hospital) => {\n      //         let hosName = hospital[\"HospitalName\"];\n      //         hosName = hosName.replace(\" \", \"\").toLowerCase();\n      //         if (userKeyWords.toLowerCase() == hosName) {\n      //           if (foundTarget) {\n      //             newHosData.push(hospital);\n      //           }\n      //           newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n      //           foundTarget = false;\n      //         }\n      //       });\n      //     });\n      //   } else {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let foundTarget = true;\n      //       let hosList = specialtyItem[\"Hospital\"];\n      //       hosList.forEach((hospital) => {\n      //         let hosName = hospital[\"HospitalName\"];\n      //         let locationZip = hospital[\"Zip\"];\n      //         hosName = hosName.replace(\" \", \"\").toLowerCase();\n      //         if (\n      //           userKeyWords.toLowerCase() == hosName &&\n      //           locationZip == locationInfo\n      //         ) {\n      //           if (foundTarget) {\n      //             newHosData.push(hospital);\n      //           }\n      //           newDocData.push.apply(newDocData, hospital[\"Doctors\"]);\n      //           foundTarget = false;\n      //         }\n      //       });\n      //     });\n      //   }\n      // } else {\n      //   if (locationInfo == \"\") {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let condtionList = specialtyItem[\"Condition\"];\n      //       condtionList = condtionList.map(function (item) {\n      //         return item.toLowerCase();\n      //       });\n      //       if (condtionList.includes(userKeyWords)) {\n      //         specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //           newHosData.push(hospital);\n      //           hospital[\"Doctors\"].forEach((doctor) => {\n      //             let docCondition = doctor[\"Conditions\"];\n      //             docCondition = docCondition.map(function (item) {\n      //               return item.toLowerCase();\n      //             });\n      //             if (docCondition.includes(userKeyWords)) {\n      //               newDocData.push(doctor);\n      //             }\n      //           });\n      //         });\n      //       }\n      //     });\n      //   } else {\n      //     rootData[\"Specialty\"].forEach((specialtyItem) => {\n      //       let condtionList = specialtyItem[\"Condition\"];\n      //       condtionList = condtionList.map(function (item) {\n      //         return item.toLowerCase();\n      //       });\n      //       specialtyItem[\"Hospital\"].forEach((hospital) => {\n      //         let locationZip = hospital[\"Zip\"];\n      //         if (\n      //           locationZip == locationInfo &&\n      //           condtionList.includes(userKeyWords)\n      //         ) {\n      //           newHosData.push(hospital);\n      //           hospital[\"Doctors\"].forEach((doctor) => {\n      //             let docCondition = doctor[\"Conditions\"];\n      //             docCondition = docCondition.map(function (item) {\n      //               return item.toLowerCase();\n      //             });\n      //             if (docCondition.includes(userKeyWords)) {\n      //               newDocData.push(doctor);\n      //             }\n      //           });\n      //         }\n      //       });\n      //     });\n      //   }\n      // }\n      // sethospitalInfo(newHosData);\n      // setDocInfo(newDocData);\n      // sethospitalInfoCopy(newHosData);\n      // setDocInfoCopy(newDocData);\n      // if (pageProps.history != null) {\n      //   pageProps.history.push(\"/results\");\n      // }\n    }\n\n    return function resetSearchStatus() {\n      setSearchBegin(false);\n    };\n  };\n\n  const renderHome = (renderProps) => {\n    return (\n      <Home\n        {...renderProps}\n        setDocInfo={setDocInfo}\n        sethospitalInfo={sethospitalInfo}\n        doMainSearch={doMainSearch}\n        getLocationValue={getLocationValue}\n        getKeyWords={getKeyWords}\n        startSearch={startSearch}\n        getSearchMethod={getSearchMethod}\n        searchBegin={searchBegin}\n        setSearchMethod={setSearchMethod}\n        setKeywords={setKeywords}\n      />\n    );\n  };\n  const renderResults = (renderProps) => {\n    return (\n      <Results\n        {...renderProps}\n        setDocInfo={setDocInfo}\n        sethospitalInfo={sethospitalInfo}\n        docInfo={docInfo}\n        hospitalInfo={hospitalInfo}\n        doMainSearch={doMainSearch}\n        getLocationValue={getLocationValue}\n        getKeyWords={getKeyWords}\n        startSearch={startSearch}\n        searchBegin={searchBegin}\n        setSearchMethod={setSearchMethod}\n        setKeywords={setKeywords}\n        getSearchMethod={getSearchMethod}\n        filterHosType={filterHosType}\n        filterLanguageList={filterLanguageList}\n        filterYear={filterYear}\n        updateTargetDoc={updateTargetDoc}\n        updateTargetHos={updateTargetHos}\n      />\n    );\n  };\n\n  const renderDocProfile = (renderProps) => {\n    return (\n      <Docprofile\n        {...renderProps}\n        setDocInfo={setDocInfo}\n        sethospitalInfo={sethospitalInfo}\n        docInfo={docInfo}\n        hospitalInfo={hospitalInfo}\n        doMainSearch={doMainSearch}\n        getLocationValue={getLocationValue}\n        getKeyWords={getKeyWords}\n        startSearch={startSearch}\n        searchBegin={searchBegin}\n        setSearchMethod={setSearchMethod}\n        setKeywords={setKeywords}\n        getSearchMethod={getSearchMethod}\n        targetDoc={targetDoc}\n      />\n    );\n  };\n\n  const renderHosProfile = (renderProps) => {\n    return (\n      <Hospprofile\n        {...renderProps}\n        setDocInfo={setDocInfo}\n        sethospitalInfo={sethospitalInfo}\n        docInfo={docInfo}\n        hospitalInfo={hospitalInfo}\n        doMainSearch={doMainSearch}\n        getLocationValue={getLocationValue}\n        getKeyWords={getKeyWords}\n        startSearch={startSearch}\n        searchBegin={searchBegin}\n        setSearchMethod={setSearchMethod}\n        setKeywords={setKeywords}\n        getSearchMethod={getSearchMethod}\n        updateTargetDoc={updateTargetDoc}\n        targetHos={targetHos}\n      />\n    );\n  };\n\n  // michelle改的/加的\n  const renderDocAccount = (renderProps) => {\n    return <Docaccount index={0} />;\n  };\n\n  const renderDocAccountEditProfile = (renderProps) => {\n    return <Docaccount index={1} />;\n  };\n\n  const renderSaved = (renderProps) => {\n    return <Docaccount index={2} />;\n  };\n\n  const renderLikeHistory = (renderProps) => {\n    return <Docaccount index={3} />;\n  };\n\n  const renderDocAccountVerification = (renderProps) => {\n    return <Docaccount index={4} />;\n  };\n\n  const renderAccountSettings = (renderProps) => {\n    return <Docaccount index={5} />;\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <div className=\"container\">\n              <Route exact path=\"/\" render={renderHome}></Route>\n              <AuthRoute exact path=\"/login\" component={login} />\n              <AuthRoute exact path=\"/signup\" component={signup} />\n              <Route exact path=\"/covid19\" component={covid}></Route>\n              <Route exact path=\"/results\" render={renderResults}></Route>\n              <Route exact path=\"/docprofile\" render={renderDocProfile}></Route>\n              <Route\n                exact\n                path=\"/hospprofile\"\n                render={renderHosProfile}\n              ></Route>\n\n              {/*新加的 5/1/2020 */}\n              <Route\n                exact\n                path=\"/hospspecialtyprofile\"\n                component={Hospspecialtyprofile}\n              ></Route>\n\n              {/* michelle改的/加的 */}\n              <Route\n                exact\n                path=\"/docaccount\"\n                render={renderDocAccount}\n                index={0}\n              ></Route>\n              <Route\n                exact\n                path=\"/profile\"\n                render={renderDocAccountEditProfile}\n                index={1}\n              ></Route>\n              <Route exact path=\"/saved\" render={renderSaved} index={2}></Route>\n              <Route\n                exact\n                path=\"/likehistory\"\n                render={renderLikeHistory}\n                index={3}\n              ></Route>\n              <Route\n                exact\n                path=\"/accountverification\"\n                render={renderDocAccountVerification}\n                index={4}\n              ></Route>\n              <Route\n                exact\n                path=\"/accountsettings\"\n                render={renderAccountSettings}\n                index={5}\n              ></Route>\n            </div>\n          </Switch>\n        </Router>\n      </Provider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
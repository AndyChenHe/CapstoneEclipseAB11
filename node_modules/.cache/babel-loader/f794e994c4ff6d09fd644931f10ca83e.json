{"ast":null,"code":"var _jsxFileName = \"/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/home/SearchTabs.js\";\nimport React from \"react\"; // material ui\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nconst useStyles = makeStyles(theme => ({\n  inputRoot: {\n    \"& .MuiFilledInput-root\": {\n      backgroundColor: \"rgba(255,255,255)\",\n      borderRadius: 4\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      variant: \"outline\"\n    }\n  },\n  tabContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }\n})); //filter specialty\n\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.specialty\n}); //filter doctor\n\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.name\n}); //filter hospital\n\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.hospName\n}); //filter condition\n\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.condition\n}); // specialties options\n\nconst specialties = [{\n  specialty: \"Allergy and Immunology\"\n}, {\n  specialty: \"Anesthesiology\"\n}, {\n  specialty: \"Arthroplasty\"\n}]; // doctor name options\n\nconst docNames = [{\n  name: \"Alex Leow\"\n}, {\n  name: \"Alex Tan\"\n}, {\n  name: \"Bryan Lee\"\n}]; // hospital options\n\nconst hospNames = [{\n  hospName: \"Pantai Hospital Kuala Lumpur\"\n}, {\n  hospName: \"Sunway Medical\"\n}]; // Conditions options\n\nconst conditions = [{\n  condition: \"A\"\n}, {\n  condition: \"B\"\n}];\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props;\n  return value === index && /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, children);\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\"\n    }\n  }\n})(props => /*#__PURE__*/React.createElement(Tabs, Object.assign({}, props, {\n  TabIndicatorProps: {\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 63\n      }\n    })\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 15\n  }\n})));\nconst StyledTab = withStyles(theme => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"1em\",\n    marginTop: 10,\n    \"&:focus\": {\n      opacity: 1\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"0.75em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"0.7em\"\n    }\n  }\n}))(props => /*#__PURE__*/React.createElement(Tab, Object.assign({\n  disableRipple: true\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 16\n  }\n})));\nexport default function SearchTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledTabs, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"search tabs\",\n    className: classes.styledTabs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledTab, Object.assign({\n    label: \"Specialty\"\n  }, a11yProps(0), {\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(StyledTab, Object.assign({\n    label: \"Doctor\"\n  }, a11yProps(1), {\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(StyledTab, Object.assign({\n    label: \"Hospital\"\n  }, a11yProps(2), {\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(StyledTab, Object.assign({\n    label: \"Condition\"\n  }, a11yProps(3), {\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: specialties,\n    getOptionLabel: option => option.specialty,\n    filterOptions: filterSpecialtyOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by specialty\",\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: docNames,\n    getOptionLabel: option => option.name,\n    filterOptions: filterDocOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by doctor's name\",\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: hospNames,\n    getOptionLabel: option => option.hospName,\n    filterOptions: filterHospOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by hospital's name\",\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: conditions,\n    getOptionLabel: option => option.condition,\n    filterOptions: filterConditionOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by medical condition\",\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/home/SearchTabs.js"],"names":["React","withStyles","makeStyles","Tabs","Tab","Typography","Box","TextField","Autocomplete","createFilterOptions","useStyles","theme","inputRoot","backgroundColor","borderRadius","breakpoints","down","variant","tabContainer","display","flexDirection","justifyContent","alignItems","filterSpecialtyOptions","matchFrom","stringify","option","specialty","filterDocOptions","name","filterHospOptions","hospName","filterConditionOptions","condition","specialties","docNames","hospNames","conditions","TabPanel","props","children","value","index","a11yProps","id","StyledTabs","indicator","width","StyledTab","root","textTransform","color","fontWeight","fontSize","marginTop","opacity","SearchTabs","classes","setValue","useState","handleChange","event","newValue","styledTabs","minWidth","params","InputProps","disableUnderline"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// material ui\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    \"& .MuiFilledInput-root\": {\n      backgroundColor: \"rgba(255,255,255)\",\n      borderRadius: 4,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      variant: \"outline\",\n    },\n  },\n\n  tabContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  },\n}));\n\n//filter specialty\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.specialty,\n});\n\n//filter doctor\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.name,\n});\n\n//filter hospital\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.hospName,\n});\n\n//filter condition\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.condition,\n});\n\n// specialties options\nconst specialties = [\n  { specialty: \"Allergy and Immunology\" },\n  { specialty: \"Anesthesiology\" },\n  { specialty: \"Arthroplasty\" },\n];\n// doctor name options\nconst docNames = [\n  { name: \"Alex Leow\" },\n  { name: \"Alex Tan\" },\n  { name: \"Bryan Lee\" },\n];\n// hospital options\nconst hospNames = [\n  { hospName: \"Pantai Hospital Kuala Lumpur\" },\n  { hospName: \"Sunway Medical\" },\n];\n// Conditions options\nconst conditions = [{ condition: \"A\" }, { condition: \"B\" }];\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n  return value === index && <Box mt={2}>{children}</Box>;\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"1em\",\n    marginTop: 10,\n    \"&:focus\": {\n      opacity: 1,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"0.75em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"0.7em\",\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\nexport default function SearchTabs() {\n  const classes = useStyles();\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div>\n      <div className={classes.tabContainer}>\n        <StyledTabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"search tabs\"\n          className={classes.styledTabs}\n        >\n          <StyledTab\n            label=\"Specialty\"\n            {...a11yProps(0)}\n            style={{ minWidth: 10 }}\n          />\n          <StyledTab\n            label=\"Doctor\"\n            {...a11yProps(1)}\n            style={{ minWidth: 10 }}\n          />\n          <StyledTab\n            label=\"Hospital\"\n            {...a11yProps(2)}\n            style={{ minWidth: 10 }}\n          />\n          <StyledTab\n            label=\"Condition\"\n            {...a11yProps(3)}\n            style={{ minWidth: 10 }}\n          />\n        </StyledTabs>\n      </div>\n\n      <Typography />\n\n      {/* autocomplete: search by specialty */}\n      <TabPanel value={value} index={0}>\n        <Autocomplete\n          options={specialties}\n          getOptionLabel={(option) => option.specialty}\n          filterOptions={filterSpecialtyOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by specialty\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by doctor's namey */}\n      <TabPanel value={value} index={1}>\n        <Autocomplete\n          options={docNames}\n          getOptionLabel={(option) => option.name}\n          filterOptions={filterDocOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by doctor's name\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by hospital's name */}\n      <TabPanel value={value} index={2}>\n        <Autocomplete\n          options={hospNames}\n          getOptionLabel={(option) => option.hospName}\n          filterOptions={filterHospOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by hospital's name\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by condition */}\n      <TabPanel value={value} index={3}>\n        <Autocomplete\n          options={conditions}\n          getOptionLabel={(option) => option.condition}\n          filterOptions={filterConditionOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by medical condition\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
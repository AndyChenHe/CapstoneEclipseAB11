{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Downloads/may4_eshin/src/Components/docAccount/DocSideNav.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FavoriteOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport PersonIcon from \"@material-ui/icons/PersonOutlined\";\nimport BookmarkIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUserOutlined\";\nimport SettingsIcon from \"@material-ui/icons/SettingsOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Badge from \"@material-ui/core/Badge\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { changeProfilePic } from \"../../redux/actions/userActions\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    minHeight: \"100vh\",\n    [theme.breakpoints.down(\"sm\")]: {\n      \"& .MuiListItem-root\": {\n        borderBottom: \"10px solid rgba(237, 235, 237, 0.4)\",\n        backgroundColor: \"rgba(255, 255, 255, 100)\"\n      },\n      backgroundColor: \"rgba(237, 235, 237, 0.4)\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      borderRight: \"1px solid rgba(237, 235, 237, 1)\"\n    }\n  },\n  img: {\n    width: theme.spacing(12),\n    height: theme.spacing(12),\n    objectFit: \"contain\"\n  },\n  likeBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  tag: {\n    margin: theme.spacing(0.4)\n  },\n  tagBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 10\n    },\n    marginBottom: 20\n  }\n})); //Doctor Account 左边的navigation\n\nfunction DocSideNav(props) {\n  const classes = useStyles(); // determine if useEffect will be called: don't call if renderCount = 1\n\n  const [renderCount, setRenderCount] = React.useState(0); // initialie profilePic with firebase imgSrc\n\n  const [profilePic, setProfilePic] = React.useState(); // doctor tags\n\n  const [tags, setTags] = React.useState([]); // initial render: only gets called once\n\n  useEffect(() => {\n    console.log(renderCount);\n\n    if (renderCount == 0) {\n      console.log(\"fetching data .......\");\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredCredentials().then(res => {\n      let storedTags;\n\n      if (!res[0]) {\n        storedTags = \"\";\n      } else {\n        if (!res[0].tags) {\n          storedTags = \"\";\n        } else {\n          storedTags = res[0].tags;\n        }\n      }\n\n      setTags(storedTags);\n      setProfilePic(res[1].imgSrc);\n      setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // wait for returned props from firebase to be ready\n\n\n  let getStoredCredentials = async () => {\n    let [storedSearchInfo, userStoredCredentials] = await Promise.all([props.searchInfo, props.storedCredentials]);\n    return [storedSearchInfo, userStoredCredentials];\n  }; // reads new image and sets state\n\n\n  const uploadProfilePicture = event => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n\n    reader.onload = () => {\n      setProfilePic(reader.result);\n    };\n  }; // wait for the newly uploaded image to be updated to state and post to firebase\n\n\n  useEffect(() => {\n    if (renderCount == 1) {\n      console.log(\"changed, sending...\");\n      return postProfilePic();\n    }\n  }, [profilePic]);\n\n  const postProfilePic = () => {\n    waitProfileUpdate().then(imgSrc => {\n      const imgSrcVar = {\n        imgSrc: imgSrc\n      };\n      props.changeProfilePic(imgSrcVar);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let waitProfileUpdate = async () => {\n    let newProfilePic = await profilePic;\n    return newProfilePic;\n  }; // create a tag list that contains all tags for this doctor\n\n\n  let tagList = tags ? tags.map(tag => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: tag.tagName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      key: tag.tagName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      label: tag.tagName + ' (' + tag.count + ')',\n      className: classes.tag,\n      color: \"secondary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    })));\n  }) : \"\"; //选\blist item (profile, saved, like history, acc verification, acc settings)\n\n  const [selectedIndex, setSelectedIndex] = React.useState();\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  }; //tooltip first time user instruction\n\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleTooltipClose = () => {\n    setOpen(false);\n  };\n\n  const handleTooltipOpen = () => {\n    setOpen(true);\n  }; // console.log(props.storedCredentials)\n\n\n  if (renderCount == 0) {\n    // loading spinner if prop data is not yet available\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      style: {\n        marginLeft: '45%',\n        marginTop: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      component: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      mt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.uploadImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      style: {\n        display: \"none\"\n      },\n      id: \"contained-button-profile-pic\",\n      multiple: true,\n      type: \"file\",\n      onChange: uploadProfilePicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-profile-pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      style: {\n        cursor: \"pointer\"\n      },\n      overlap: \"circle\",\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      badgeContent: /*#__PURE__*/React.createElement(AddAPhotoIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.img,\n      alt: \"doctor profile picture\",\n      src: profilePic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, \"Hi, Alex!\"), /*#__PURE__*/React.createElement(Box, {\n      className: classes.likeBox,\n      mt: 2,\n      mb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }\n    }, \"100\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.tagBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }\n    }, tagList, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }, \"No review tags yet\"))), /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      selected: selectedIndex === 0,\n      onClick: event => handleListItemClick(event, 0),\n      component: \"a\",\n      href: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PersonIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      disableFocusListener: true,\n      placement: \"right\",\n      title: /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          fontWeight: \"normal\",\n          lineHeight: 1.5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }, \"2. Set up your profile \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 42\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 19\n        }\n      }), \"Add your personal, work, and expertise information.\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ErrorOutlineOutlinedIcon, {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      selected: selectedIndex === 1,\n      onClick: event => handleListItemClick(event, 1),\n      component: \"a\",\n      href: \"/saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BookmarkIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      selected: selectedIndex === 2,\n      onClick: event => handleListItemClick(event, 2),\n      component: \"a\",\n      href: \"/likehistory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Like History\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      selected: selectedIndex === 3,\n      onClick: event => handleListItemClick(event, 3),\n      style: {\n        position: \"relative\"\n      },\n      component: \"a\",\n      href: \"/accountverification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VerifiedUserIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Account Verification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      disableFocusListener: true,\n      placement: \"right\",\n      title: /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          fontWeight: \"normal\",\n          lineHeight: 1.5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 17\n        }\n      }, \"Welcome Alex! Before you start: \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 19\n        }\n      }), \"1. Verify your account \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 42\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 19\n        }\n      }), \"Once you verified your account, you will be able to publish your profile.\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ErrorOutlineOutlinedIcon, {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      selected: selectedIndex === 4,\n      onClick: event => handleListItemClick(event, 4),\n      component: \"a\",\n      href: \"/accountsettings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SettingsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Account Settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 13\n      }\n    })))));\n  }\n}\n\nDocSideNav.propTypes = {\n  changeProfilePic: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.doctorInfo\n});\n\nconst mapActionsToProps = {\n  changeProfilePic\n};\nexport default connect(mapStateToProps, mapActionsToProps)(DocSideNav);","map":{"version":3,"sources":["/Users/Michelle/Downloads/may4_eshin/src/Components/docAccount/DocSideNav.js"],"names":["React","Fragment","useEffect","makeStyles","List","ListItem","ListItemIcon","ListItemText","Avatar","Box","Typography","FavoriteIcon","Chip","FavoriteOutlinedIcon","PersonIcon","BookmarkIcon","VerifiedUserIcon","SettingsIcon","ErrorOutlineOutlinedIcon","Tooltip","Badge","AddAPhotoIcon","CircularProgress","connect","PropTypes","changeProfilePic","useStyles","theme","root","width","height","minHeight","breakpoints","down","borderBottom","backgroundColor","up","borderRight","img","spacing","objectFit","likeBox","display","flexDirection","justifyContent","alignItems","tag","margin","tagBox","flexWrap","listStyle","padding","marginLeft","marginBottom","DocSideNav","props","classes","renderCount","setRenderCount","useState","profilePic","setProfilePic","tags","setTags","console","log","displayStoredData","getStoredCredentials","then","res","storedTags","imgSrc","catch","error","storedSearchInfo","userStoredCredentials","Promise","all","searchInfo","storedCredentials","uploadProfilePicture","event","reader","FileReader","uploaded","target","files","readAsDataURL","onload","result","postProfilePic","waitProfileUpdate","imgSrcVar","newProfilePic","tagList","map","tagName","count","selectedIndex","setSelectedIndex","handleListItemClick","index","open","setOpen","handleTooltipClose","handleTooltipOpen","marginTop","uploadImg","cursor","vertical","horizontal","color","fontWeight","lineHeight","position","propTypes","func","isRequired","mapStateToProps","state","user","credentials","data","doctorInfo","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FavoriteOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport PersonIcon from \"@material-ui/icons/PersonOutlined\";\nimport BookmarkIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUserOutlined\";\nimport SettingsIcon from \"@material-ui/icons/SettingsOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Badge from \"@material-ui/core/Badge\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { changeProfilePic } from \"../../redux/actions/userActions\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    minHeight: \"100vh\",\n    [theme.breakpoints.down(\"sm\")]: {\n      \"& .MuiListItem-root\": {\n        borderBottom: \"10px solid rgba(237, 235, 237, 0.4)\",\n        backgroundColor: \"rgba(255, 255, 255, 100)\",\n      },\n      backgroundColor: \"rgba(237, 235, 237, 0.4)\",\n    },\n\n    [theme.breakpoints.up(\"md\")]: {\n      borderRight: \"1px solid rgba(237, 235, 237, 1)\",\n    },\n  },\n\n  img: {\n    width: theme.spacing(12),\n    height: theme.spacing(12),\n    objectFit: \"contain\",\n  },\n\n  likeBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  tag: {\n    margin: theme.spacing(0.4),\n  },\n\n  tagBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 10,\n    },\n    marginBottom: 20,\n  },\n}));\n\n//Doctor Account 左边的navigation\nfunction DocSideNav(props) {\n  const classes = useStyles();\n\n\n  // determine if useEffect will be called: don't call if renderCount = 1\n  const [renderCount, setRenderCount] = React.useState(0);\n  // initialie profilePic with firebase imgSrc\n  const [profilePic, setProfilePic] = React.useState();\n\n  // doctor tags\n  const [tags, setTags] = React.useState([]);\n\n  // initial render: only gets called once\n  useEffect(() => {\n    console.log(renderCount)\n    if (renderCount == 0) {\n      console.log(\"fetching data .......\")\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredCredentials()\n      .then((res) => {\n        let storedTags;\n\n        if (!res[0]) {\n          storedTags = \"\";\n        } else {\n          if (!res[0].tags) {\n            storedTags = \"\";\n          } else {\n            storedTags = res[0].tags;\n          }\n        }\n\n        setTags(storedTags);\n        setProfilePic(res[1].imgSrc);\n\n        setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  // wait for returned props from firebase to be ready\n  let getStoredCredentials = async () => {\n    let [storedSearchInfo, userStoredCredentials] =\n      await Promise.all([props.searchInfo, props.storedCredentials]);\n    return [storedSearchInfo, userStoredCredentials];\n\n  }\n\n\n  // reads new image and sets state\n  const uploadProfilePicture = (event) => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n    reader.onload = () => {\n      setProfilePic(reader.result);\n    };\n  };\n\n\n\n  // wait for the newly uploaded image to be updated to state and post to firebase\n  useEffect(() => {\n    if (renderCount == 1) {\n      console.log(\"changed, sending...\")\n      return postProfilePic();\n    }\n  }, [profilePic]);\n\n  const postProfilePic = () => {\n    waitProfileUpdate()\n      .then((imgSrc) => {\n        const imgSrcVar = {\n          imgSrc: imgSrc\n        }\n        props.changeProfilePic(imgSrcVar);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  let waitProfileUpdate = async () => {\n    let newProfilePic = await profilePic;\n    return newProfilePic;\n  }\n\n  // create a tag list that contains all tags for this doctor\n  let tagList = (tags) ? tags.map(tag => {\n    return (\n      <Fragment key={tag.tagName}>\n        <li key={tag.tagName}>\n          <Chip\n            label={tag.tagName + ' (' + tag.count + ')'}\n            className={classes.tag}\n            color=\"secondary\"\n            size=\"small\"\n          />\n        </li>\n      </Fragment>\n    )\n  }) : \"\";\n  \n\n\n\n\n\n\n\n  //选\blist item (profile, saved, like history, acc verification, acc settings)\n  const [selectedIndex, setSelectedIndex] = React.useState();\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  //tooltip first time user instruction\n  const [open, setOpen] = React.useState(false);\n  const handleTooltipClose = () => {\n    setOpen(false);\n  };\n  const handleTooltipOpen = () => {\n    setOpen(true);\n  };\n\n// console.log(props.storedCredentials)\n\nif (renderCount == 0) {\n  // loading spinner if prop data is not yet available\n  return (\n    <div>\n      <CircularProgress color=\"secondary\" style={{ marginLeft: '45%', marginTop: '5%' }} />\n    </div>\n  );\n\n} else {\n\n\n  return (\n    <Fragment>\n      <div className={classes.root}>\n        <List component=\"nav\">\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            mt={3}\n          >\n            {/* User profile image */}\n            <div className={classes.uploadImg}>\n              <input\n                accept=\"image/*\"\n                style={{ display: \"none\" }}\n                id=\"contained-button-profile-pic\"\n                multiple\n                type=\"file\"\n                onChange={uploadProfilePicture}\n              />\n              <label htmlFor=\"contained-button-profile-pic\">\n                <Badge\n                  style={{ cursor: \"pointer\" }}\n                  overlap=\"circle\"\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                  }}\n                  badgeContent={<AddAPhotoIcon />}\n                >\n                  <Avatar\n                    className={classes.img}\n                    alt=\"doctor profile picture\"\n                    src={profilePic}\n                  />\n                </Badge>\n              </label>\n            </div>\n\n            {/* <div className={classes.uploadImg}>\n              <IconButton>\n                <Avatar\n                  alt=\"Alex leow\"\n                  src={docImg}\n                  className={classes.img}\n                ></Avatar>\n              </IconButton>\n            </div> */}\n\n            <Typography variant=\"h6\" color=\"primary\">\n              Hi, Alex!\n            </Typography>\n\n            <Box className={classes.likeBox} mt={2} mb={2}>\n              {/* Likes */}\n              <FavoriteIcon style={{ color: \"red\" }} />\n              <Typography variant=\"body2\" color=\"primary\">\n                100\n              </Typography>\n            </Box>\n            {/* Tags */}\n            <div className={classes.tagBox}>\n              {tagList}\n              {/* 这边需要麻烦你写, 如果没有tag，要显示‘no review tags'， 有tag的话这个就要藏起来 */}\n              \n              <p>No review tags yet</p>\n            </div>\n          </Box>\n\n          {/* 目前写法是点了一个list item, 就跳到属于它的section, */}\n          {/* Profile */}\n          <ListItem\n            button\n            selected={selectedIndex === 0}\n            onClick={(event) => handleListItemClick(event, 0)}\n            component=\"a\"\n            href=\"/profile\"\n          >\n            <ListItemIcon style={{ marginLeft: 20 }}>\n              <PersonIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Profile\" />\n            {/* 第一次user要显示这个tooltip */}\n            <Tooltip\n              disableFocusListener\n              placement=\"right\"\n              title={\n                <h2 style={{ fontWeight: \"normal\", lineHeight: 1.5 }}>\n                  2. Set up your profile <br></br>\n                  <br></br>\n                  Add your personal, work, and expertise information.\n                </h2>\n              }\n            >\n              <ErrorOutlineOutlinedIcon style={{ color: \"red\" }} />\n            </Tooltip>\n          </ListItem>\n\n          {/* Saved  */}\n          <ListItem\n            button\n            selected={selectedIndex === 1}\n            onClick={(event) => handleListItemClick(event, 1)}\n            component=\"a\"\n            href=\"/saved\"\n          >\n            <ListItemIcon style={{ marginLeft: 20 }}>\n              <BookmarkIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Saved\" />\n          </ListItem>\n\n          {/* Like History */}\n          <ListItem\n            button\n            selected={selectedIndex === 2}\n            onClick={(event) => handleListItemClick(event, 2)}\n            component=\"a\"\n            href=\"/likehistory\"\n          >\n            <ListItemIcon style={{ marginLeft: 20 }}>\n              <FavoriteOutlinedIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Like History\" />\n          </ListItem>\n\n          {/* Account verification */}\n          <ListItem\n            button\n            selected={selectedIndex === 3}\n            onClick={(event) => handleListItemClick(event, 3)}\n            style={{ position: \"relative\" }}\n            component=\"a\"\n            href=\"/accountverification\"\n          >\n            <ListItemIcon style={{ marginLeft: 20 }}>\n              <VerifiedUserIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Account Verification\" />\n            {/* 第一次user要显示这个tooltip */}\n\n            <Tooltip\n              disableFocusListener\n              placement=\"right\"\n              title={\n                <h2 style={{ fontWeight: \"normal\", lineHeight: 1.5 }}>\n                  Welcome Alex! Before you start: <br></br>\n                  <br></br>\n                  1. Verify your account <br></br>\n                  <br></br>\n                  Once you verified your account, you will be able to publish\n                  your profile.\n                </h2>\n              }\n            >\n              <ErrorOutlineOutlinedIcon style={{ color: \"red\" }} />\n            </Tooltip>\n          </ListItem>\n\n          {/* Account settings */}\n          <ListItem\n            button\n            selected={selectedIndex === 4}\n            onClick={(event) => handleListItemClick(event, 4)}\n            component=\"a\"\n            href=\"/accountsettings\"\n          >\n            <ListItemIcon style={{ marginLeft: 20 }}>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Account Settings\" />\n          </ListItem>\n        </List>\n      </div>\n    </Fragment>\n  );\n}\n}\n\nDocSideNav.propTypes = {\n  changeProfilePic: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.doctorInfo\n});\n\nconst mapActionsToProps = {\n  changeProfilePic,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(DocSideNav);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Downloads/may10_michelle/src/Components/docAccount/LikeHistorySaved.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\"; // import DocCard from \"../../Components/results/DocCard\";\n// import HospCard from \"../../Components/results/HospitalCard\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport docImg from \"../../img/results/docAlex.png\";\nimport hospImg from \"../../img/results/pantaihospital.png\";\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// for small cards display, might delete later if naming conventions unify\n\nconst useStyles = makeStyles(theme => ({ ...theme.account,\n  root: {\n    display: \"flex\",\n    margin: 30\n  },\n  img: {\n    width: \"60%\",\n    [theme.breakpoints.only(\"md\")]: {\n      width: \"80%\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"40%\"\n    }\n  },\n  imageGrid: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 30,\n      marginBottom: 10\n    }\n  },\n  likeBox: {\n    marginTop: 16,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 0,\n      alignItems: \"flex-start\",\n      marginLeft: 20,\n      marginRight: 20,\n      marginBottom: 20\n    }\n  }\n})); // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nfunction LikeHistorySaved(props) {\n  const classes = useStyles(); // decide if the page should render Like History or Saved\n\n  const displayType = props.saveLike;\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0);\n  const [saveLike, setSaveLike] = React.useState({\n    doctors: [],\n    hospitals: []\n  });\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredCredentials();\n    }\n\n    return displayStoredCredentials();\n  }, []);\n\n  const displayStoredCredentials = () => {\n    getStoredCredentials().then(res => {\n      // let stored = res.data.credentials[displayType];\n      let stored = res[displayType];\n      let likedDoctors;\n      let likedHospitals; // if the user has not never liked any doctors or hospitals\n\n      if (!stored) {\n        likedDoctors = [];\n        likedHospitals = [];\n      } else {\n        likedDoctors = stored.doctors ? stored.doctors : [];\n        likedHospitals = stored.hospitals ? stored.hospitals : [];\n      }\n\n      setSaveLike({\n        doctors: likedDoctors,\n        hospitals: likedHospitals\n      });\n      setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let getStoredCredentials = async () => {\n    // let userStoredCredentials = await axios.get(proxyurl + axios.defaults.baseURL + \"user\");\n    let userStoredCredentials = await props.storedCredentials;\n    return userStoredCredentials;\n  };\n\n  let getSpecialtyData = async searchSpecialty => {\n    let data = await axios.get(proxyurl + axios.defaults.baseURL + \"getallsearchdata\", {\n      params: {\n        specialty: searchSpecialty\n      }\n    });\n    return data;\n  }; // list of liked doctor cards on doctor tab\n\n\n  let doctorCards = saveLike.doctors.map(doctor => {\n    return /*#__PURE__*/React.createElement(DocCard, {\n      key: doctor.username,\n      doctorInfo: doctor,\n      getSpecialtyData: getSpecialtyData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    });\n  }); // list of liked hospitals cards on hospital tab\n\n  let hospitalCards = saveLike.hospitals.map(hospital => {\n    return /*#__PURE__*/React.createElement(HospitalCard, {\n      key: hospital.name,\n      hospitalInfo: hospital,\n      getSpecialtyData: getSpecialtyData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    });\n  });\n\n  if (renderCount == 0) {\n    // loading spinner if prop data is not yet available\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      style: {\n        marginLeft: '45%',\n        marginTop: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      id: \"likehistory\",\n      className: classes.anchor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mt: 4,\n      mb: 3,\n      flexWrap: \"wrap\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      flexDirection: \"row\",\n      mb: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      mdUp: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"docaccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      className: classes.backIcon,\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, displayType === \"likeHistory\" ? \"Like History\" : \"Saved\"))), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      value: display,\n      exclusive: true,\n      onChange: handleDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      value: \"doctor\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }, \"Doctor\")), /*#__PURE__*/React.createElement(ToggleButton, {\n      value: \"hospital\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, \"Hospital\")))), \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }), display === \"doctor\" ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, doctorCards) : /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, hospitalCards)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    })));\n  }\n} // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// might be deleted later if naming conventions unify\n// Each indiivdual doctor card\n\n\nfunction DocCard(props) {\n  const classes = useStyles(); // create language strings\n\n  let language = \"\";\n  props.doctorInfo[\"languages\"].forEach(lang => {\n    language = language + \", \" + lang;\n  });\n  language = language.substring(1); // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n  const clickDoctorCard = () => {\n    const specialty = props.doctorInfo.specialty;\n    const hospital = props.doctorInfo.hospital.replace(/\\s+/g, \"\");\n    const username = props.doctorInfo.username;\n    props.getSpecialtyData(specialty).then(res => {\n      let targetDoctor = res.data[specialty].hospitals[hospital].doctors[username];\n      console.log(targetDoctor); // setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    onClick: clickDoctorCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    className: classes.imageGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    className: classes.img,\n    image: docImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, \"Dr.\" + props.doctorInfo[\"name\"]), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, \"Specialty: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, props.doctorInfo[\"specialty\"])), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }, \"Hospital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, props.doctorInfo[\"hospital\"])), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  }, \"Languages: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, language)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Chip, {\n    color: \"secondary\",\n    size: \"small\",\n    label: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.likeBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, props.doctorInfo[\"likes\"])))));\n}\n\nfunction HospitalCard(props) {\n  const classes = useStyles();\n\n  const clickHospitalCard = () => {\n    const specialty = props.hospitalInfo.relatedSpecialty;\n    const hospital = props.hospitalInfo.name.replace(/\\s+/g, \"\");\n    props.getSpecialtyData(specialty).then(res => {\n      let targetHospital = res.data[specialty].hospitals[hospital];\n      console.log(targetHospital); // setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // const handleClick = () => {\n  //   props.updateTargetHos(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/hospprofile\");\n  //   }\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    onClick: clickHospitalCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    className: classes.imageGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    className: classes.img,\n    image: hospImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }\n  }, props.hospitalInfo[\"name\"]), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 15\n    }\n  }, \"Address: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 15\n    }\n  }, props.hospitalInfo[\"address\"])), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 15\n    }\n  }, \"Related Specialty: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }, props.hospitalInfo[\"relatedSpecialty\"])), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }, \"Phone: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 15\n    }\n  }, props.hospitalInfo[\"phone\"])), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Chip, {\n    color: \"secondary\",\n    size: \"small\",\n    label: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.likeBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }, props.hospitalInfo[\"likes\"])))));\n}\n\nLikeHistorySaved.propTypes = {// updateVerification: PropTypes.func.isRequired,\n  // getAllSearchData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  storedCredentials: state.user.credentials // searchData: state.data.searchData\n\n});\n\nconst mapActionsToProps = {// updateVerification,\n  // getAllSearchData\n};\nexport default connect(mapStateToProps, mapActionsToProps)(LikeHistorySaved);","map":{"version":3,"sources":["/Users/Michelle/Downloads/may10_michelle/src/Components/docAccount/LikeHistorySaved.js"],"names":["React","Fragment","useEffect","makeStyles","Box","Typography","Grid","Hidden","ArrowBackIosIcon","ToggleButton","ToggleButtonGroup","CircularProgress","Link","connect","PropTypes","axios","Card","CardContent","CardMedia","Chip","FavoriteIcon","docImg","hospImg","proxyurl","useStyles","theme","account","root","display","margin","img","width","breakpoints","only","down","imageGrid","flexDirection","justifyContent","alignItems","marginTop","marginBottom","likeBox","marginLeft","marginRight","LikeHistorySaved","props","classes","displayType","saveLike","setDisplay","useState","handleDisplay","event","newDisplay","renderCount","setRenderCount","setSaveLike","doctors","hospitals","displayStoredCredentials","getStoredCredentials","then","res","stored","likedDoctors","likedHospitals","catch","error","console","userStoredCredentials","storedCredentials","getSpecialtyData","searchSpecialty","data","get","defaults","baseURL","params","specialty","doctorCards","map","doctor","username","hospitalCards","hospital","name","anchor","backIcon","textTransform","DocCard","language","doctorInfo","forEach","lang","substring","clickDoctorCard","replace","targetDoctor","log","color","HospitalCard","clickHospitalCard","hospitalInfo","relatedSpecialty","targetHospital","propTypes","mapStateToProps","state","user","credentials","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\n// import DocCard from \"../../Components/results/DocCard\";\n// import HospCard from \"../../Components/results/HospitalCard\";\n\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport docImg from \"../../img/results/docAlex.png\";\n\nimport hospImg from \"../../img/results/pantaihospital.png\";\n\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// for small cards display, might delete later if naming conventions unify\n\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.account,\n\n  root: {\n    display: \"flex\",\n    margin: 30,\n  },\n\n  img: {\n    width: \"60%\",\n    [theme.breakpoints.only(\"md\")]: {\n      width: \"80%\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"40%\",\n    },\n  },\n\n  imageGrid: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 30,\n      marginBottom: 10,\n    },\n  },\n  likeBox: {\n    marginTop: 16,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 0,\n      alignItems: \"flex-start\",\n      marginLeft: 20,\n      marginRight: 20,\n      marginBottom: 20,\n    },\n  },\n}));\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nfunction LikeHistorySaved(props) {\n  const classes = useStyles();\n\n  // decide if the page should render Like History or Saved\n  const displayType = props.saveLike;\n\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0);\n\n  const [saveLike, setSaveLike] = React.useState({\n    doctors: [],\n    hospitals: []\n  })\n\n\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredCredentials();\n\n    }\n    return displayStoredCredentials();\n  }, []);\n\n\n  const displayStoredCredentials = () => {\n    getStoredCredentials()\n      .then((res) => {\n        // let stored = res.data.credentials[displayType];\n        let stored = res[displayType];\n\n        let likedDoctors;\n        let likedHospitals;\n\n        // if the user has not never liked any doctors or hospitals\n        if (!stored) {\n          likedDoctors = [];\n          likedHospitals = [];\n        } else {\n          likedDoctors = stored.doctors ? stored.doctors : [];\n          likedHospitals = stored.hospitals ? stored.hospitals : [];\n        }\n\n        setSaveLike({\n          doctors: likedDoctors,\n          hospitals: likedHospitals\n        });\n\n        setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  let getStoredCredentials = async () => {\n    // let userStoredCredentials = await axios.get(proxyurl + axios.defaults.baseURL + \"user\");\n    let userStoredCredentials = await props.storedCredentials;\n    return userStoredCredentials;\n  }\n\n\n  let getSpecialtyData = async (searchSpecialty) => {\n    let data =\n      await axios.get(proxyurl + axios.defaults.baseURL + \"getallsearchdata\",\n        {\n          params: {\n            specialty: searchSpecialty\n          }\n        })\n    return data;\n  }\n\n\n\n  // list of liked doctor cards on doctor tab\n  let doctorCards = saveLike.doctors.map(doctor => {\n    return (\n      <DocCard key={doctor.username} doctorInfo={doctor} getSpecialtyData={getSpecialtyData} />\n    )\n  })\n\n  // list of liked hospitals cards on hospital tab\n  let hospitalCards = saveLike.hospitals.map(hospital => {\n    return (\n      <HospitalCard key={hospital.name} hospitalInfo={hospital} getSpecialtyData={getSpecialtyData} />\n    )\n  })\n\n\n  if (renderCount == 0) {\n    // loading spinner if prop data is not yet available\n    return (\n      <div>\n        <CircularProgress color=\"secondary\" style={{ marginLeft: '45%', marginTop: '10%' }} />\n      </div>\n    );\n\n  } else {\n\n\n    return (\n      <a id=\"likehistory\" className={classes.anchor}>\n        <Grid container spacing={0}>\n          <Grid item xs={1}></Grid>\n          <Grid item xs={10} md={8}>\n            <Box display=\"flex\" mt={4} mb={3} flexWrap=\"wrap\" alignItems=\"center\">\n              <Box flexGrow={1} flexDirection=\"row\" mb={1}>\n                <Typography variant=\"h5\" color=\"primary\">\n                  {/* Back button, 手机屏幕才会出现 */}\n                  <Hidden mdUp>\n                    {/* <IconButton> */}\n                    <Link to=\"docaccount\">\n                      <ArrowBackIosIcon\n                        className={classes.backIcon}\n                        fontSize=\"small\"\n                      />\n                    </Link>\n                    {/* </IconButton> */}\n                  </Hidden>\n                  <strong>\n                    {displayType === \"likeHistory\" ? \"Like History\" : \"Saved\"}\n                  </strong>\n                </Typography>\n              </Box>\n              {/* Display by Doctor/Hospital buttons */}\n              <Box>\n                <ToggleButtonGroup\n                  value={display}\n                  exclusive\n                  onChange={handleDisplay}\n                >\n                  <ToggleButton value=\"doctor\" color=\"primary\">\n                    <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                      Doctor\n                  </Typography>\n                  </ToggleButton>\n                  <ToggleButton value=\"hospital\">\n                    <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                      Hospital\n                  </Typography>\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </Box>{\" \"}\n            </Box>\n\n            <br></br>\n            <br></br>\n\n            {/* if user clicks on display by 'doctor', then render doctor cards */}\n            {display === \"doctor\" ? (\n              <Fragment>{doctorCards}</Fragment>\n            ) : (\n                <Fragment>{hospitalCards}</Fragment>\n              )}\n          </Grid>\n          <Grid item xs={1} md={3}></Grid>\n        </Grid>\n      </a>\n    );\n  }\n}\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// might be deleted later if naming conventions unify\n\n\n\n// Each indiivdual doctor card\nfunction DocCard(props) {\n  const classes = useStyles();\n  // create language strings\n  let language = \"\";\n  props.doctorInfo[\"languages\"].forEach((lang) => {\n    language = language + \", \" + lang;\n  });\n  language = language.substring(1);\n\n\n  // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n  const clickDoctorCard = () => {\n    const specialty = props.doctorInfo.specialty;\n    const hospital = props.doctorInfo.hospital.replace(/\\s+/g, \"\");\n    const username = props.doctorInfo.username;\n\n    props.getSpecialtyData(specialty)\n      .then((res) => {\n        let targetDoctor = res.data[specialty].hospitals[hospital].doctors[username];\n        console.log(targetDoctor);\n        // setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n\n  // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n  return (\n    <Card className={classes.root} onClick={clickDoctorCard}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={3} className={classes.imageGrid}>\n          {/* doctor image */}\n          <CardMedia\n            component=\"img\"\n            className={classes.img}\n            image={docImg}\n          ></CardMedia>\n        </Grid>\n        <Grid item xs={12} sm={7}>\n          <CardContent>\n            {/* doctor details */}\n            <Typography variant=\"h6\" color=\"primary\">\n              {\"Dr.\" + props.doctorInfo[\"name\"]}\n            </Typography>\n            <br></br>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Specialty: </strong>{\" \"}\n              <span>{props.doctorInfo[\"specialty\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Hospital: </strong>\n              <span>{props.doctorInfo[\"hospital\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Languages: </strong>\n              <span>{language}</span>\n            </Typography>\n            <br></br>\n            {/* private tag */}\n            <Chip color=\"secondary\" size=\"small\" label=\"Private\"></Chip>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          {/* Like icon + number of likes */}\n          <Box className={classes.likeBox}>\n            <FavoriteIcon style={{ color: \"red\" }} />\n            <Typography variant=\"body2\" color=\"primary\">\n              {props.doctorInfo[\"likes\"]}\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\n\nfunction HospitalCard(props) {\n  const classes = useStyles();\n\n  const clickHospitalCard = () => {\n    const specialty = props.hospitalInfo.relatedSpecialty;\n    const hospital = props.hospitalInfo.name.replace(/\\s+/g, \"\");\n\n    props.getSpecialtyData(specialty)\n      .then((res) => {\n        let targetHospital = res.data[specialty].hospitals[hospital];\n        console.log(targetHospital);\n        // setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n\n  // const handleClick = () => {\n  //   props.updateTargetHos(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/hospprofile\");\n  //   }\n  // };\n\n\n\n  return (\n    <Card className={classes.root} onClick={clickHospitalCard}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={3} className={classes.imageGrid}>\n          {/* hospital logo image */}\n          <CardMedia\n            component=\"img\"\n            className={classes.img}\n            image={hospImg}\n          ></CardMedia>\n        </Grid>\n\n        <Grid item xs={12} sm={7}>\n          <CardContent>\n            {/* hospital details */}\n            <Typography variant=\"h6\" color=\"primary\">\n              {props.hospitalInfo[\"name\"]}\n            </Typography>\n            <br></br>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Address: </strong>\n              <span>{props.hospitalInfo[\"address\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Related Specialty: </strong>\n              <span>{props.hospitalInfo[\"relatedSpecialty\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Phone: </strong>\n              <span>{props.hospitalInfo[\"phone\"]}</span>\n            </Typography>\n\n            <br></br>\n            <Chip color=\"secondary\" size=\"small\" label=\"Private\"></Chip>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          {/* like icon + number of likes */}\n          <Box className={classes.likeBox}>\n            <FavoriteIcon style={{ color: \"red\" }} />\n            <Typography variant=\"body2\" color=\"primary\">\n              {props.hospitalInfo[\"likes\"]}\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\n\n\n\n\n\n\n\nLikeHistorySaved.propTypes = {\n  // updateVerification: PropTypes.func.isRequired,\n  // getAllSearchData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  storedCredentials: state.user.credentials,\n  // searchData: state.data.searchData\n});\n\nconst mapActionsToProps = {\n  // updateVerification,\n  // getAllSearchData\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(LikeHistorySaved);"]},"metadata":{},"sourceType":"module"}
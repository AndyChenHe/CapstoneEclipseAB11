{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Downloads/may4_eshin/src/Components/docAccount/DocAccountVerification.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CloudUploadOutlinedIcon from \"@material-ui/icons/CloudUploadOutlined\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { updateVerification } from \"../../redux/actions/userActions\";\nconst useStyles = makeStyles(theme => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  anchor: {\n    display: \"block\",\n    paddingTop: 100,\n    marginTop: -100\n  }\n})); // doctor account verification\n\nfunction DocAccountVerification(props) {\n  const classes = useStyles(); // const { index } = props\n\n  const [renderCount, setRenderCount] = React.useState(0);\n  const [medicalRegistrationNumber, setMedicalNumber] = React.useState(\"\");\n  const [identityCard, setIdentityCard] = React.useState({\n    src: \"\",\n    name: \"\"\n  });\n  const [medicalDegree, setMedicalDegree] = React.useState({\n    src: \"\",\n    name: \"\"\n  }); // submit success snackbar\n\n  const [open, setOpen] = React.useState(false);\n  const [currentInfo, setState] = React.useState({\n    medicalRegistrationNumber: \"\",\n    identityCardSrc: \"\",\n    identityCardName: \"\",\n    medicalDegreeSrc: \"\",\n    medicalDegreeName: \"\",\n    // submit success snackbar message\n    openSubmitMsg: false\n  }); // only call useEffect if renderCount = 0 (will be updated to 1 if stored data\n  // in firebase is successfully set to state)\n\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredData().then(res => {\n      // set state\n      setMedicalNumber(res.medicalRegistrationNumber);\n      setIdentityCard({\n        src: res.identityCardSrc,\n        name: res.identityCardName\n      });\n      setMedicalDegree({\n        src: res.medicalDegreeSrc,\n        name: res.medicalDegreeName\n      }); // update renderCount to 1 to stop react from making any more useEffect call\n\n      setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // wait for returned props from firebase to be ready\n\n\n  let getStoredData = async () => {\n    let storedVerificationInfo = await props.storedVerificationInfo;\n    return storedVerificationInfo;\n  };\n\n  const editMedicalNumber = event => {\n    setState({\n      medicalRegistrationNumber: event.target.value\n    });\n  };\n\n  const uploadIdentityCard = event => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n\n    reader.onload = () => {\n      setState({\n        identityCardSrc: reader.result,\n        identityCardName: uploaded.name\n      });\n    };\n  };\n\n  const uploadMedicalDegree = event => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n\n    reader.onload = () => {\n      setState({\n        medicalDegreeSrc: reader.result,\n        medicalDegreeName: uploaded.name\n      });\n    };\n  };\n\n  const openSuccessMsg = () => {\n    setState({\n      openSubmitMsg: true\n    });\n  };\n\n  const closeSuccessMsg = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setState({\n      openSubmitMsg: false\n    });\n  }; // initiate push to firebase when submit button is clicked\n\n\n  const submitVerification = () => {\n    const newVerification = {\n      medicalRegistrationNumber: currentInfo[\"medicalRegistrationNumber\"],\n      identityCardSrc: currentInfo[\"identityCardSrc\"] ? currentInfo[\"identityCardSrc\"] : \" \",\n      identityCardName: currentInfo[\"identityCardName\"] ? urrentInfo[\"identityCardName\"] : \" \",\n      medicalDegreeSrc: medicalDegree[\"src\"] ? medicalDegree[\"src\"] : \" \",\n      medicalDegreeName: medicalDegree[\"name\"] ? medicalDegree[\"name\"] : \" \"\n    };\n    props.updateVerification(newVerification);\n    openSuccessMsg();\n  };\n\n  if (!medicalRegistrationNumber) {\n    // loading spinner if prop data is not yet available\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      style: {\n        marginLeft: '45%',\n        marginTop: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      id: \"accountverification\",\n      className: classes.anchor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      flexDirection: \"row\",\n      mb: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Snackbar, {\n      open: open,\n      onClose: closeSuccessMsg,\n      autoHideDuration: 6000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 1,\n      variant: \"filled\",\n      severity: \"success\",\n      onClose: closeSuccessMsg,\n      style: {\n        background: \"#FF8686\",\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, \"Documents successfully submitted!\")), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      mdUp: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"docaccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, \"Account Verification\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CancelIcon, {\n      style: {\n        color: \"red\",\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, \"Account not verified\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      required: true,\n      label: \"Medical Registration Number\" // defaultValue={storedMedicalNum}\n      ,\n      defaultValue: medicalRegistrationNumber,\n      variant: \"outlined\",\n      onChange: editMedicalNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mt: 5,\n      mb: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, \"Malaysian Identity Card\")), /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      style: {\n        display: \"none\"\n      },\n      id: \"contained-button-identity\",\n      multiple: true,\n      type: \"file\",\n      onChange: uploadIdentityCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-identity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 32\n        }\n      }),\n      variant: \"outlined\",\n      component: \"span\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    }, identityCard.name), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mt: 5,\n      mb: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, \"Certified copy of Medical Degree\")), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      style: {\n        display: \"none\"\n      },\n      id: \"contained-button-medical\",\n      multiple: true,\n      type: \"file\",\n      onChange: uploadMedicalDegree,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-medical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 32\n        }\n      }),\n      variant: \"outlined\",\n      component: \"span\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 19\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }\n    }, medicalDegree.name), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"large\",\n      onClick: submitVerification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }\n    })));\n  }\n}\n\nDocAccountVerification.propTypes = {\n  updateVerification: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  storedVerificationInfo: state.user.credentials.verification\n});\n\nconst mapActionsToProps = {\n  updateVerification\n};\nexport default connect(mapStateToProps, mapActionsToProps)(DocAccountVerification);","map":{"version":3,"sources":["/Users/Michelle/Downloads/may4_eshin/src/Components/docAccount/DocAccountVerification.js"],"names":["React","useEffect","makeStyles","Box","Typography","Button","Grid","TextField","Hidden","ArrowBackIosIcon","CancelIcon","CloudUploadOutlinedIcon","CircularProgress","Snackbar","MuiAlert","Link","connect","PropTypes","updateVerification","useStyles","theme","covidBox","marginTop","breakpoints","down","marginLeft","marginRight","anchor","display","paddingTop","DocAccountVerification","props","classes","renderCount","setRenderCount","useState","medicalRegistrationNumber","setMedicalNumber","identityCard","setIdentityCard","src","name","medicalDegree","setMedicalDegree","open","setOpen","currentInfo","setState","identityCardSrc","identityCardName","medicalDegreeSrc","medicalDegreeName","openSubmitMsg","displayStoredData","getStoredData","then","res","catch","error","console","storedVerificationInfo","editMedicalNumber","event","target","value","uploadIdentityCard","reader","FileReader","uploaded","files","readAsDataURL","onload","result","uploadMedicalDegree","openSuccessMsg","closeSuccessMsg","reason","submitVerification","newVerification","urrentInfo","background","color","textTransform","float","propTypes","func","isRequired","mapStateToProps","state","user","credentials","verification","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CloudUploadOutlinedIcon from \"@material-ui/icons/CloudUploadOutlined\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\n\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { updateVerification } from \"../../redux/actions/userActions\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  anchor: {\n    display: \"block\",\n    paddingTop: 100,\n    marginTop: -100,\n  },\n}));\n\n\n// doctor account verification\nfunction DocAccountVerification(props) {\n  const classes = useStyles();\n  // const { index } = props\n\n  const [renderCount, setRenderCount] = React.useState(0);\n  const [medicalRegistrationNumber, setMedicalNumber] = React.useState(\"\");\n  const [identityCard, setIdentityCard] = React.useState({\n    src: \"\",\n    name: \"\"\n  });\n  const [medicalDegree, setMedicalDegree] = React.useState({\n    src: \"\",\n    name: \"\"\n  });\n  // submit success snackbar\n  const [open, setOpen] = React.useState(false);\n\n\n  const [currentInfo, setState] = React.useState({\n    medicalRegistrationNumber: \"\",\n    identityCardSrc: \"\",\n    identityCardName: \"\",\n    medicalDegreeSrc: \"\",\n    medicalDegreeName: \"\",\n    // submit success snackbar message\n    openSubmitMsg: false,\n\n  })\n\n\n\n\n  // only call useEffect if renderCount = 0 (will be updated to 1 if stored data\n  // in firebase is successfully set to state)\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredData()\n      .then((res) => {\n\n        // set state\n        setMedicalNumber(res.medicalRegistrationNumber);\n        setIdentityCard({\n          src: res.identityCardSrc,\n          name: res.identityCardName\n        });\n\n        setMedicalDegree({\n          src: res.medicalDegreeSrc,\n          name: res.medicalDegreeName\n        });\n        // update renderCount to 1 to stop react from making any more useEffect call\n        setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  // wait for returned props from firebase to be ready\n  let getStoredData = async () => {\n    let storedVerificationInfo = await props.storedVerificationInfo;\n    return storedVerificationInfo;\n  }\n\n  \n\n\n\n\n\n\n\n  const editMedicalNumber = (event) => {\n    setState({\n      medicalRegistrationNumber: event.target.value\n    });\n  }\n\n  const uploadIdentityCard = (event) => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n    reader.onload = () => {\n      setState({\n        identityCardSrc: reader.result,\n        identityCardName: uploaded.name\n      })\n    };\n  };\n\n  const uploadMedicalDegree = (event) => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n    reader.onload = () => {\n      setState({\n        medicalDegreeSrc: reader.result,\n        medicalDegreeName: uploaded.name\n      })\n    };\n  };\n\n  const openSuccessMsg = () => {\n    setState({\n      openSubmitMsg: true\n    });\n  };\n\n  const closeSuccessMsg = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setState({\n      openSubmitMsg: false\n    });\n  };\n\n\n  // initiate push to firebase when submit button is clicked\n  const submitVerification = () => {\n\n    const newVerification = {\n      medicalRegistrationNumber: currentInfo[\"medicalRegistrationNumber\"],\n      identityCardSrc: currentInfo[\"identityCardSrc\"] ? currentInfo[\"identityCardSrc\"] : \" \",\n      identityCardName: currentInfo[\"identityCardName\"] ? urrentInfo[\"identityCardName\"] : \" \",\n      medicalDegreeSrc: medicalDegree[\"src\"] ? medicalDegree[\"src\"] : \" \",\n      medicalDegreeName: medicalDegree[\"name\"] ? medicalDegree[\"name\"] : \" \"\n    };\n    props.updateVerification(newVerification);\n    openSuccessMsg();\n  };\n\n\n  if (!medicalRegistrationNumber) {\n\n    // loading spinner if prop data is not yet available\n    return (\n      <div>\n        <CircularProgress color=\"secondary\" style={{ marginLeft: '45%', marginTop: '10%' }} />\n      </div>\n    );\n\n  } else {\n\n    return (\n      <a id=\"accountverification\" className={classes.anchor}>\n        <Grid container spacing={0}>\n          <Grid item xs={1}></Grid>\n          <Grid item xs={10} md={8}>\n            <Box flexGrow={1} flexDirection=\"row\" mb={1}>\n              <Snackbar open={open} onClose={closeSuccessMsg} autoHideDuration={6000}>\n                <MuiAlert \n                  elevation={1}\n                  variant=\"filled\"\n                  severity=\"success\"\n                  onClose={closeSuccessMsg}\n                  style={{ background: \"#FF8686\", marginLeft: 'auto', marginRight: 'auto', marginTop: '10%' }}\n                >\n                  Documents successfully submitted!\n                </MuiAlert>\n              </Snackbar>\n\n\n              <Typography variant=\"h5\" color=\"primary\">\n                {/* Back button 手机屏幕才会出玄 */}\n                <Hidden mdUp>\n                  <Link to='docaccount'>\n                    <ArrowBackIosIcon />\n                  </Link>\n                </Hidden>\n                <strong>Account Verification</strong>\n              </Typography>\n            </Box>\n\n            <br></br>\n            <Box display=\"flex\" flexDirection=\"row\">\n              {/* 现在是ACCOUNT NOT VERIFIED, 需要换icon 如果account pending/verified */}\n              <CancelIcon style={{ color: \"red\", marginRight: 10 }} />\n              <Typography variant=\"body1\">\n                Account not verified<br></br>\n              </Typography>\n            </Box>\n            <br></br>\n            <br></br>\n            {/* Meidcal reg number */}\n            <TextField\n              fullWidth\n              required\n              label=\"Medical Registration Number\"\n              // defaultValue={storedMedicalNum}\n              defaultValue={medicalRegistrationNumber}\n\n              variant=\"outlined\"\n              onChange={editMedicalNumber}\n            />\n            {/* Upload malaysian identity card */}\n            <Box display=\"flex\" mt={5} mb={3}>\n              <Box flexGrow={1}>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Malaysian Identity Card\n              </Typography>\n              </Box>\n              <Box flexGrow={1}>\n                <input\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  id=\"contained-button-identity\"\n                  multiple\n                  type=\"file\"\n                  onChange={uploadIdentityCard}\n                />\n                <label htmlFor=\"contained-button-identity\">\n                  <Button\n                    startIcon={<CloudUploadOutlinedIcon />}\n                    variant=\"outlined\"\n                    component=\"span\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\", float: \"right\" }}\n                    size=\"medium\"\n                  >\n                    Upload\n              </Button>\n                </label>\n              </Box>\n            </Box>\n            {/* <Typography variant=\"body2\">{(identityCard.name == \"\") ? storedIdentityCard : identityCard.name}</Typography> */}\n            <Typography variant=\"body2\">{identityCard.name}</Typography>\n\n\n\n\n            {/* Upload medical degree */}\n            <Box display=\"flex\" mt={5} mb={5}>\n              <Box flexGrow={1}>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Certified copy of Medical Degree\n              </Typography>\n              </Box>\n              <Box>\n                <input\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  id=\"contained-button-medical\"\n                  multiple\n                  type=\"file\"\n                  onChange={uploadMedicalDegree}\n                />\n                <label htmlFor=\"contained-button-medical\">\n                  <Button\n                    startIcon={<CloudUploadOutlinedIcon />}\n                    variant=\"outlined\"\n                    component=\"span\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\", float: \"right\" }}\n                    size=\"medium\"\n                  >\n                    Upload\n              </Button>\n                </label>\n              </Box>\n            </Box>\n            <Typography variant=\"body2\">{medicalDegree.name}</Typography>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ textTransform: \"none\", float: \"right\" }}\n              size=\"large\"\n              onClick={submitVerification}\n            >\n              Submit\n          </Button>\n            <br></br>\n            <br></br>\n          </Grid>\n          <Grid item xs={1} md={3}></Grid>\n        </Grid>\n      </a>\n    );\n  }\n}\n\n\nDocAccountVerification.propTypes = {\n  updateVerification: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  storedVerificationInfo: state.user.credentials.verification\n});\n\nconst mapActionsToProps = {\n  updateVerification,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(DocAccountVerification);"]},"metadata":{},"sourceType":"module"}
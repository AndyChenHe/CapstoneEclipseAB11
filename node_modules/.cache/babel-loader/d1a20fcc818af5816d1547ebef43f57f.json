{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/may4_eshin/src/Components/docAccount/DocAccountVerification.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CloudUploadOutlinedIcon from \"@material-ui/icons/CloudUploadOutlined\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { updateVerification, getUserData } from \"../../redux/actions/userActions\";\nconst useStyles = makeStyles(theme => ({ ...theme.account\n})); // doctor account verification\n\nfunction DocAccountVerification(props) {\n  const classes = useStyles(); // const { index } = props\n\n  const [medicalNumber, setMedicalNumber] = React.useState();\n  const [identityCard, setIdentityCard] = React.useState({\n    src: \"\",\n    name: \"\"\n  });\n  const [medicalDegree, setMedicalDegree] = React.useState({\n    src: \"\",\n    name: \"\"\n  });\n\n  const editMedicalNumber = event => {\n    setMedicalNumber(event.target.value);\n  };\n\n  const uploadIdentityCard = event => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n\n    reader.onload = () => {\n      setIdentityCard({\n        src: reader.result,\n        name: uploaded.name\n      });\n    };\n  };\n\n  const uploadMedicalDegree = event => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n\n    reader.onload = () => {\n      setMedicalDegree({\n        src: reader.result,\n        name: uploaded.name\n      });\n    };\n  }; // initiate push to firebase when submit button is clicked\n\n\n  const submitVerification = () => {\n    const newVerification = {\n      medicalNumber: medicalNumber,\n      identityCardSrc: identityCard[\"src\"],\n      medicalDegreeSrc: medicalDegree[\"src\"]\n    };\n    props.updateVerification(newVerification);\n  };\n\n  const storedMedicalNum = props.storedVerificationInfo && props.storedVerificationInfo.medicalRegistrationNumber;\n\n  if (!storedMedicalNum) {\n    // loading spinner if prop data is not yet available\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      style: {\n        marginLeft: \"45%\",\n        marginTop: \"10%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      id: \"accountverification\",\n      className: classes.anchor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      flexDirection: \"row\",\n      mt: 4,\n      mb: 1,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      mdUp: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"docaccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      className: classes.backIcon,\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Account Verification\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CancelIcon, {\n      style: {\n        color: \"red\",\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Account not verified\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      required: true,\n      label: \"Medical Registration Number\",\n      defaultValue: storedMedicalNum,\n      variant: \"outlined\",\n      onChange: editMedicalNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mt: 5,\n      mb: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"Malaysian Identity Card\")), /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      style: {\n        display: \"none\"\n      },\n      id: \"contained-button-identity\",\n      multiple: true,\n      type: \"file\",\n      onChange: uploadIdentityCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-identity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 32\n        }\n      }),\n      variant: \"outlined\",\n      component: \"span\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, identityCard.name), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mt: 5,\n      mb: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, \"Certified copy of Medical Degree\")), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      style: {\n        display: \"none\"\n      },\n      id: \"contained-button-medical\",\n      multiple: true,\n      type: \"file\",\n      onChange: uploadMedicalDegree,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-medical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 32\n        }\n      }),\n      variant: \"outlined\",\n      component: \"span\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, medicalDegree.name), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"large\",\n      onClick: submitVerification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    })));\n  }\n}\n\nDocAccountVerification.propTypes = {\n  user: PropTypes.object.isRequired,\n  updateVerification: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  storedVerificationInfo: state.user.credentials.verification\n});\n\nconst mapActionsToProps = {\n  updateVerification\n};\nexport default connect(mapStateToProps, mapActionsToProps)(DocAccountVerification);","map":{"version":3,"sources":["/Users/andychenhe/Desktop/may4_eshin/src/Components/docAccount/DocAccountVerification.js"],"names":["React","makeStyles","Box","Typography","Button","Grid","TextField","Hidden","ArrowBackIosIcon","CancelIcon","CloudUploadOutlinedIcon","CircularProgress","Link","connect","PropTypes","updateVerification","getUserData","useStyles","theme","account","DocAccountVerification","props","classes","medicalNumber","setMedicalNumber","useState","identityCard","setIdentityCard","src","name","medicalDegree","setMedicalDegree","editMedicalNumber","event","target","value","uploadIdentityCard","reader","FileReader","uploaded","files","readAsDataURL","onload","result","uploadMedicalDegree","submitVerification","newVerification","identityCardSrc","medicalDegreeSrc","storedMedicalNum","storedVerificationInfo","medicalRegistrationNumber","marginLeft","marginTop","anchor","backIcon","color","marginRight","display","textTransform","float","propTypes","user","object","isRequired","func","mapStateToProps","state","credentials","verification","mapActionsToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CloudUploadOutlinedIcon from \"@material-ui/icons/CloudUploadOutlined\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  updateVerification,\n  getUserData,\n} from \"../../redux/actions/userActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.account,\n}));\n\n// doctor account verification\nfunction DocAccountVerification(props) {\n  const classes = useStyles();\n  // const { index } = props\n\n  const [medicalNumber, setMedicalNumber] = React.useState();\n  const [identityCard, setIdentityCard] = React.useState({\n    src: \"\",\n    name: \"\",\n  });\n  const [medicalDegree, setMedicalDegree] = React.useState({\n    src: \"\",\n    name: \"\",\n  });\n\n  const editMedicalNumber = (event) => {\n    setMedicalNumber(event.target.value);\n  };\n\n  const uploadIdentityCard = (event) => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n    reader.onload = () => {\n      setIdentityCard({\n        src: reader.result,\n        name: uploaded.name,\n      });\n    };\n  };\n\n  const uploadMedicalDegree = (event) => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n    reader.onload = () => {\n      setMedicalDegree({\n        src: reader.result,\n        name: uploaded.name,\n      });\n    };\n  };\n\n  // initiate push to firebase when submit button is clicked\n  const submitVerification = () => {\n    const newVerification = {\n      medicalNumber: medicalNumber,\n      identityCardSrc: identityCard[\"src\"],\n      medicalDegreeSrc: medicalDegree[\"src\"],\n    };\n    props.updateVerification(newVerification);\n  };\n\n  const storedMedicalNum =\n    props.storedVerificationInfo &&\n    props.storedVerificationInfo.medicalRegistrationNumber;\n\n  if (!storedMedicalNum) {\n    // loading spinner if prop data is not yet available\n    return (\n      <div>\n        <CircularProgress\n          color=\"secondary\"\n          style={{ marginLeft: \"45%\", marginTop: \"10%\" }}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <a id=\"accountverification\" className={classes.anchor}>\n        <Grid container spacing={0}>\n          <Grid item xs={1}></Grid>\n          <Grid item xs={10} md={8}>\n            <Box\n              flexGrow={1}\n              flexDirection=\"row\"\n              mt={4}\n              mb={1}\n              alignItems=\"center\"\n            >\n              <Typography variant=\"h5\" color=\"primary\">\n                {/* Back button 手机屏幕才会出玄 */}\n                <Hidden mdUp>\n                  {/* <IconButton> */}\n                  <Link to=\"docaccount\">\n                    <ArrowBackIosIcon\n                      className={classes.backIcon}\n                      fontSize=\"small\"\n                    />\n                  </Link>\n                  {/* </IconButton> */}\n                </Hidden>\n                <strong>Account Verification</strong>\n              </Typography>\n            </Box>\n\n            <br></br>\n            <Box display=\"flex\" flexDirection=\"row\">\n              {/* 现在是ACCOUNT NOT VERIFIED, 需要换icon 如果account pending/verified */}\n              <CancelIcon style={{ color: \"red\", marginRight: 10 }} />\n              <Typography variant=\"body1\">\n                Account not verified<br></br>\n              </Typography>\n            </Box>\n            <br></br>\n            <br></br>\n            {/* Meidcal reg number */}\n            <TextField\n              fullWidth\n              required\n              label=\"Medical Registration Number\"\n              defaultValue={storedMedicalNum}\n              variant=\"outlined\"\n              onChange={editMedicalNumber}\n            />\n            {/* Upload malaysian identity card */}\n            <Box display=\"flex\" mt={5} mb={3}>\n              <Box flexGrow={1}>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Malaysian Identity Card\n                </Typography>\n              </Box>\n              <Box flexGrow={1}>\n                <input\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  id=\"contained-button-identity\"\n                  multiple\n                  type=\"file\"\n                  onChange={uploadIdentityCard}\n                />\n                <label htmlFor=\"contained-button-identity\">\n                  <Button\n                    startIcon={<CloudUploadOutlinedIcon />}\n                    variant=\"outlined\"\n                    component=\"span\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\", float: \"right\" }}\n                    size=\"medium\"\n                  >\n                    Upload\n                  </Button>\n                </label>\n              </Box>\n            </Box>\n            <Typography variant=\"body2\">{identityCard.name}</Typography>\n            {/* Upload medical degree */}\n            <Box display=\"flex\" mt={5} mb={5}>\n              <Box flexGrow={1}>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Certified copy of Medical Degree\n                </Typography>\n              </Box>\n              <Box>\n                <input\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  id=\"contained-button-medical\"\n                  multiple\n                  type=\"file\"\n                  onChange={uploadMedicalDegree}\n                />\n                <label htmlFor=\"contained-button-medical\">\n                  <Button\n                    startIcon={<CloudUploadOutlinedIcon />}\n                    variant=\"outlined\"\n                    component=\"span\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\", float: \"right\" }}\n                    size=\"medium\"\n                  >\n                    Upload\n                  </Button>\n                </label>\n              </Box>\n            </Box>\n            <Typography variant=\"body2\">{medicalDegree.name}</Typography>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ textTransform: \"none\", float: \"right\" }}\n              size=\"large\"\n              onClick={submitVerification}\n            >\n              Submit\n            </Button>\n            <br></br>\n            <br></br>\n          </Grid>\n          <Grid item xs={1} md={3}></Grid>\n        </Grid>\n      </a>\n    );\n  }\n}\n\nDocAccountVerification.propTypes = {\n  user: PropTypes.object.isRequired,\n  updateVerification: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  storedVerificationInfo: state.user.credentials.verification,\n});\n\nconst mapActionsToProps = {\n  updateVerification,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(DocAccountVerification);\n"]},"metadata":{},"sourceType":"module"}
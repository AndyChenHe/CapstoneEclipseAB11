{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/finalCapstoneII/CapstoneEclipseAB11/src/Components/GlobalSearchTabs.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useState, useEffect } from 'react';\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\nimport GlobalLocation from \"./GlobalLocation\"; //filter specialty\n\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.specialty\n}); //filter doctor\n\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.name\n}); //filter hospital\n\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.hospName\n}); //filter condition\n\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.condition\n}); // specialties options\n// const specialties = [\n//   { specialty: \"Allergy and Immunology\" },\n//   { specialty: \"Anesthesiology\" },\n//   { specialty: \"Gastroenterology\" },\n// ];\n// doctor name options\n// Conditions options\n// const conditions = [{ condition: \"A\" }, { condition: \"B\" }];\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `full-width-tabpanel-${index}`,\n    \"aria-labelledby\": `full-width-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 27\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  //vertical tabs\n  verticalTabContainer: {\n    [theme.breakpoints.up(\"md\")]: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\"\n    }\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    color: \"#003367\"\n  },\n  search: {\n    textTransform: \"none\"\n  },\n  // horizontal tabs\n  horizontalTabContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }\n})); // for horizontal tabs - screen size < ipad\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\"\n    }\n  }\n})(props => /*#__PURE__*/React.createElement(Tabs, Object.assign({}, props, {\n  TabIndicatorProps: {\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 63\n      }\n    })\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 15\n  }\n})));\nconst StyledTab = withStyles(theme => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#003367\",\n    fontSize: \"1em\",\n    \"&:focus\": {\n      opacity: 1\n    }\n  }\n}))(props => /*#__PURE__*/React.createElement(Tab, Object.assign({\n  disableRipple: true\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 16\n  }\n}))); // Global search tabs + search by specialty/doc/hosp/condition\n// Used in GlobalSearch.js inside the dialog\n\nexport default function GlobalSearchTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [keyword, setkeyword] = React.useState('');\n  let specialties = props.specialtyListForInput;\n  let conditions = props.conditionListForInput; // He Chen 2020 5/22\n\n  let docNames = [];\n  let hospNames = [];\n\n  const getDocHosNameList = () => {\n    // console.log(props.database === undefined);\n    let allInfo = props.database;\n\n    for (let spec in allInfo) {\n      let targetSpec = allInfo[spec];\n\n      for (let hos in targetSpec.hospitals) {\n        let hospital = targetSpec.hospitals[hos];\n        hospNames.push({\n          hospName: hospital.name\n        });\n        let doctorsList = hospital.doctors;\n\n        for (let docId in doctorsList) {\n          docNames.push({\n            name: doctorsList[docId].name\n          });\n        }\n      }\n    }\n\n    docNames = new Set(docNames.map(e => JSON.stringify(e)));\n    docNames = Array.from(docNames).map(e => JSON.parse(e));\n    hospNames = new Set(hospNames.map(e => JSON.stringify(e)));\n    hospNames = Array.from(hospNames).map(e => JSON.parse(e));\n  };\n\n  getDocHosNameList();\n\n  const handleSearchMethodChange = (event, newValue) => {\n    let method = '';\n\n    if (newValue == 0) {\n      method = 'Specialty';\n    } else if (newValue == 1) {\n      method = 'Doctor';\n    } else if (newValue == 2) {\n      method = 'Hospital';\n    } else {\n      method = 'Condition';\n    }\n\n    setValue(newValue);\n    props.getSearchMethod(method);\n  };\n\n  const handleSpecialtySearchKeyChange = (event, newValue) => {\n    if (newValue) {\n      props.getKeyWords(newValue.specialty);\n    }\n  };\n\n  const handleDoctorSearchKeyChange = (event, newValue) => {\n    console.log(newValue);\n\n    if (newValue) {\n      console.log(newValue);\n      props.getKeyWords(newValue.name);\n    }\n  };\n\n  const handleHospitalSearchKeyChange = (event, newValue) => {\n    if (newValue) {\n      console.log(newValue);\n      props.getKeyWords(newValue.hospName);\n    }\n  };\n\n  const handleConditionSearchKeyChange = (event, newValue) => {\n    if (newValue) {\n      console.log(newValue);\n      props.getKeyWords(newValue.condition);\n    }\n  };\n\n  const getTextFieldValue = event => {\n    console.log(event.target.value);\n    setkeyword(event.target.value);\n    props.getKeyWords(event.target.value);\n  };\n\n  const hadleSearch = () => {\n    props.handleClose();\n    props.startSearch();\n  };\n\n  useEffect(() => {\n    if (props.searchBegin) {\n      return props.doMainSearch(props);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.verticalTabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    orientation: \"vertical\",\n    variant: \"scrollable\",\n    value: value,\n    onChange: handleSearchMethodChange,\n    \"aria-label\": \"global search tabs\",\n    className: classes.tabs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    style: {\n      textTransform: \"none\"\n    },\n    label: \"Specialty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    style: {\n      textTransform: \"none\"\n    },\n    label: \"Doctor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    style: {\n      textTransform: \"none\"\n    },\n    label: \"Hospital\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    style: {\n      textTransform: \"none\"\n    },\n    label: \"Condition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.HorizontalTabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledTabs, {\n    value: value,\n    onChange: handleSearchMethodChange,\n    \"aria-label\": \"search tabs\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Specialty\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Doctor\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Hospital\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Condition\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: specialties,\n    onChange: handleSpecialtySearchKeyChange,\n    getOptionLabel: option => option.specialty,\n    filterOptions: filterSpecialtyOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by specialty\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GlobalLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: hadleSearch,\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"md\",\n    className: classes.search,\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 22\n      }\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: handleDoctorSearchKeyChange,\n    freeSolo: true,\n    options: docNames,\n    getOptionLabel: option => option.name,\n    filterOptions: filterDocOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by doctor's name\",\n      variant: \"outlined\",\n      onChange: getTextFieldValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GlobalLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: hadleSearch,\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"md\",\n    className: classes.search,\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 22\n      }\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: handleHospitalSearchKeyChange,\n    options: hospNames,\n    freeSolo: true,\n    getOptionLabel: option => option.hospName,\n    filterOptions: filterHospOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      onChange: getTextFieldValue,\n      label: \"Search by hospital's name\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GlobalLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: hadleSearch,\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"md\",\n    className: classes.search,\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 22\n      }\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 3,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: handleConditionSearchKeyChange,\n    options: conditions,\n    getOptionLabel: option => option.condition,\n    filterOptions: filterConditionOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by medical condition\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GlobalLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: hadleSearch,\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"md\",\n    className: classes.search,\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 22\n      }\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }\n  }, \"Search\")));\n}","map":{"version":3,"sources":["/Users/andychenhe/Desktop/finalCapstoneII/CapstoneEclipseAB11/src/Components/GlobalSearchTabs.js"],"names":["React","PropTypes","makeStyles","withStyles","useState","useEffect","Hidden","Tabs","Tab","Typography","Box","TextField","Autocomplete","createFilterOptions","SearchIcon","Button","GlobalLocation","filterSpecialtyOptions","matchFrom","stringify","option","specialty","filterDocOptions","name","filterHospOptions","hospName","filterConditionOptions","condition","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","useStyles","theme","verticalTabContainer","breakpoints","up","flexGrow","backgroundColor","palette","background","paper","display","tabs","borderRight","divider","color","search","textTransform","horizontalTabContainer","down","flexDirection","justifyContent","alignItems","StyledTabs","indicator","width","StyledTab","root","fontSize","opacity","GlobalSearchTabs","classes","setValue","keyword","setkeyword","specialties","specialtyListForInput","conditions","conditionListForInput","docNames","hospNames","getDocHosNameList","allInfo","database","spec","targetSpec","hos","hospitals","hospital","push","doctorsList","doctors","docId","Set","map","e","JSON","Array","from","parse","handleSearchMethodChange","event","newValue","method","getSearchMethod","handleSpecialtySearchKeyChange","getKeyWords","handleDoctorSearchKeyChange","console","log","handleHospitalSearchKeyChange","handleConditionSearchKeyChange","getTextFieldValue","target","hadleSearch","handleClose","startSearch","searchBegin","doMainSearch","HorizontalTabContainer","minWidth","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useState, useEffect } from 'react';\n\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\nimport GlobalLocation from \"./GlobalLocation\";\n\n//filter specialty\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.specialty,\n});\n\n//filter doctor\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.name,\n});\n\n//filter hospital\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.hospName,\n});\n\n//filter condition\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.condition,\n});\n\n// specialties options\n// const specialties = [\n//   { specialty: \"Allergy and Immunology\" },\n//   { specialty: \"Anesthesiology\" },\n//   { specialty: \"Gastroenterology\" },\n// ];\n// doctor name options\n\n// Conditions options\n// const conditions = [{ condition: \"A\" }, { condition: \"B\" }];\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  //vertical tabs\n  verticalTabContainer: {\n    [theme.breakpoints.up(\"md\")]: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n    },\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    color: \"#003367\",\n  },\n\n  search: {\n    textTransform: \"none\",\n  },\n\n  // horizontal tabs\n  horizontalTabContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  },\n}));\n\n// for horizontal tabs - screen size < ipad\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#003367\",\n    fontSize: \"1em\",\n    \"&:focus\": {\n      opacity: 1,\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\n// Global search tabs + search by specialty/doc/hosp/condition\n// Used in GlobalSearch.js inside the dialog\nexport default function GlobalSearchTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [keyword, setkeyword] = React.useState('');\n  let specialties = props.specialtyListForInput;\n  let conditions = props.conditionListForInput;\n\n    // He Chen 2020 5/22\n    let docNames = [];\n    let hospNames = [];\n  \n    const getDocHosNameList = () => {\n      // console.log(props.database === undefined);\n      let allInfo = props.database;\n      for (let spec in allInfo){\n        let targetSpec = allInfo[spec];\n        for (let hos in targetSpec.hospitals){\n          let hospital = targetSpec.hospitals[hos];\n          hospNames.push({hospName : hospital.name});\n          let doctorsList = hospital.doctors;\n          for (let docId in doctorsList){\n            docNames.push({name:doctorsList[docId].name});\n          }\n        }\n      }\n      docNames = new Set(docNames.map(e => JSON.stringify(e)));\n      docNames = Array.from(docNames).map(e => JSON.parse(e));\n      hospNames = new Set(hospNames.map(e => JSON.stringify(e)));\n      hospNames = Array.from(hospNames).map(e => JSON.parse(e));\n    }\n  \n    getDocHosNameList();\n\n  const handleSearchMethodChange = (event, newValue) => {\n    let method = '';\n    if(newValue == 0){\n      method = 'Specialty';\n    } else if (newValue == 1){\n      method = 'Doctor';\n    } else if (newValue == 2){\n      method = 'Hospital';\n    } else {\n      method = 'Condition';\n    }\n    setValue(newValue);\n    props.getSearchMethod(method);\n  };\n\n\n\n  const handleSpecialtySearchKeyChange = (event, newValue) => {\n    \n    if(newValue){\n      props.getKeyWords(newValue.specialty);\n    }\n    \n  };\n\n  const handleDoctorSearchKeyChange = (event, newValue) => {\n    console.log(newValue);\n    if(newValue){\n      console.log(newValue);\n      props.getKeyWords(newValue.name);\n    }\n    \n  };\n\n  const handleHospitalSearchKeyChange = (event, newValue) => {\n    \n    if(newValue){\n      console.log(newValue);\n      props.getKeyWords(newValue.hospName);\n    }\n    \n  };\n\n  const handleConditionSearchKeyChange = (event, newValue) => {\n    \n    if(newValue){\n      console.log(newValue);\n      props.getKeyWords(newValue.condition);\n    }\n    \n  };\n\n  const getTextFieldValue = (event)=>{\n    console.log(event.target.value);\n    setkeyword(event.target.value);\n    props.getKeyWords(event.target.value);\n  }\n\n  const hadleSearch = ()=>{\n    props.handleClose();\n    props.startSearch();\n  }\n\n  useEffect(() => {\n    if(props.searchBegin){return props.doMainSearch(props);}\n    \n  });\n\n  return (\n    <div className={classes.verticalTabContainer}>\n      {/* vertical search tabs for screen > ipad size */}\n      <Hidden smDown>\n        <Tabs\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleSearchMethodChange}\n          aria-label=\"global search tabs\"\n          className={classes.tabs}\n        >\n          <Tab style={{ textTransform: \"none\" }} label=\"Specialty\" />\n          <Tab style={{ textTransform: \"none\" }} label=\"Doctor\" />\n          <Tab style={{ textTransform: \"none\" }} label=\"Hospital\" />\n          <Tab style={{ textTransform: \"none\" }} label=\"Condition\" />\n        </Tabs>\n      </Hidden>\n\n      {/* horizontal search tabs for screens < ipad size */}\n      <Hidden mdUp>\n        <div className={classes.HorizontalTabContainer}>\n          <StyledTabs\n            value={value}\n            onChange={handleSearchMethodChange}\n            aria-label=\"search tabs\"\n            centered\n          >\n            <StyledTab label=\"Specialty\" style={{ minWidth: 10 }} />\n            <StyledTab label=\"Doctor\" style={{ minWidth: 10 }} />\n            <StyledTab label=\"Hospital\" style={{ minWidth: 10 }} />\n            <StyledTab label=\"Condition\" style={{ minWidth: 10 }} />\n          </StyledTabs>\n        </div>\n      </Hidden>\n\n      {/* autocomplete: search by specialty */}\n      <TabPanel value={value} index={0} style={{ width: \"100%\" }}>\n        <Autocomplete\n          options={specialties}\n          onChange = {handleSpecialtySearchKeyChange}\n          getOptionLabel={(option) => option.specialty}\n          filterOptions={filterSpecialtyOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by specialty\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n          onClick = {hadleSearch}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n\n      {/* autocomplete: search by doctor's name */}\n      <TabPanel value={value} index={1} style={{ width: \"100%\" }}>\n        <Autocomplete\n          onChange = {handleDoctorSearchKeyChange}\n          freeSolo\n          options={docNames}\n          getOptionLabel={(option) => option.name}\n          filterOptions={filterDocOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by doctor's name\"\n              variant=\"outlined\"\n              onChange = {getTextFieldValue}\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n          onClick = {hadleSearch}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n\n      {/* autocomplete: search by hospital's name */}\n      <TabPanel value={value} index={2} style={{ width: \"100%\" }}>\n        <Autocomplete\n          onChange = {handleHospitalSearchKeyChange}\n          options={hospNames}\n          freeSolo\n          getOptionLabel={(option) => option.hospName}\n          filterOptions={filterHospOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              onChange = {getTextFieldValue}\n              label=\"Search by hospital's name\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n          onClick = {hadleSearch}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n\n      {/* autocomplete: search by condition */}\n      <TabPanel value={value} index={3} style={{ width: \"100%\" }}>\n        <Autocomplete\n          onChange = {handleConditionSearchKeyChange}\n          options={conditions}\n          getOptionLabel={(option) => option.condition}\n          filterOptions={filterConditionOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by medical condition\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n        onClick = {hadleSearch}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
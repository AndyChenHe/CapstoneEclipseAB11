{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Downloads/may10_michelle/src/Components/docAccount/LikeHistory.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\"; // import DocCard from \"../../Components/results/DocCard\";\n// import HospCard from \"../../Components/results/HospitalCard\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport docImg from \"../../img/results/docAlex.png\";\nimport hospImg from \"../../img/results/pantaihospital.png\"; // import { getAllSearchData } from \"../../redux/actions/dataActions\";\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// for small cards display, might delete later if naming conventions unify\n\nconst useStyles = makeStyles(theme => ({ ...theme.account,\n  root: {\n    display: \"flex\",\n    margin: 30\n  },\n  img: {\n    width: \"60%\",\n    [theme.breakpoints.only(\"md\")]: {\n      width: \"80%\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"40%\"\n    }\n  },\n  imageGrid: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 30,\n      marginBottom: 10\n    }\n  },\n  likeBox: {\n    marginTop: 16,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 0,\n      alignItems: \"flex-start\",\n      marginLeft: 20,\n      marginRight: 20,\n      marginBottom: 20\n    }\n  }\n})); // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nfunction LikeHistory(props) {\n  const classes = useStyles();\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0);\n  const [likeHistory, setLikeHistory] = React.useState({\n    doctors: [],\n    hospitals: []\n  });\n  useEffect(() => {\n    return displayStoredCredentials();\n  }, []);\n\n  const displayStoredCredentials = () => {\n    getStoredCredentials().then(res => {\n      let storedLikeHistory = res.data.credentials.likeHistory;\n      let likedDoctors;\n      let likedHospitals; // if the user has not never liked any doctors or hospitals\n\n      if (!storedLikeHistory) {\n        likedDoctors = [];\n        likedHospitals = [];\n      } else {\n        likedDoctors = storedLikeHistory.doctors ? storedLikeHistory.doctors : [];\n        likedHospitals = storedLikeHistory.hospitals ? storedLikeHistory.hospitals : [];\n      }\n\n      setLikeHistory({\n        doctors: likedDoctors,\n        hospitals: likedHospitals\n      }); // setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let getStoredCredentials = async () => {\n    let userStoredCredentials = await axios.get(proxyurl + axios.defaults.baseURL + \"user\");\n    return userStoredCredentials;\n  }; // list of liked doctor cards on doctor tab\n\n\n  let doctorCards = likeHistory.doctors.map(doctor => {\n    return /*#__PURE__*/React.createElement(DocCard, {\n      key: doctor.username,\n      doctorInfo: doctor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    });\n  }); // list of liked hospitals cards on hospital tab\n\n  let hospitalCards = likeHistory.hospitals.map(hospital => {\n    return /*#__PURE__*/React.createElement(HospitalCard, {\n      key: hospital.name,\n      hospitalInfo: hospital,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    });\n  }); // only run after liked history doctors and hospitals have been set\n  // useEffect(() => {\n  //   if (renderCount == 1 && (likeHistory.doctors.length > 0 || likeHistory.hospitals.length > 0)) {\n  //     return displayStoredData();\n  //   }\n  // }, []);\n  // const displayStoredData = () => {\n  //   getStoredData()\n  //     .then((res) => {\n  //       let storedLikeHistory = res.data.credentials.likeHistory;\n  //       let likedDoctors;\n  //       let likedHospitals;\n  //       // if the user has not never liked any doctors or hospitals\n  //       if (!storedLikeHistory) {\n  //         likedDoctors = [];\n  //         likedHospitals = [];\n  //       } else {\n  //         likedDoctors = storedLikeHistory.doctors ? storedLikeHistory.doctors : [];\n  //         likedHospitals = storedLikeHistory.hospitals ? storedLikeHistory.hospitals : [];\n  //       }\n  //       setLikeHistory({\n  //         doctors: likedDoctors,\n  //         hospitals: likedHospitals\n  //       });\n  //       // setRenderCount(1);\n  //     }).catch((error) => {\n  //       console.error(error);\n  //     })\n  // }\n  // let getStoredData = async () => {\n  //   let searchData =\n  //     await axios.get(proxyurl + axios.defaults.baseURL + \"getallsearchdata\", {\n  //       params: {\n  //         specialtyList: \n  //       }\n  //     }\n  //   );\n  //   return searchData;\n  // }\n  //   axios.get(proxyurl+axios.defaults.baseURL+\"getallsearchdata\", {\n  //     params:{\n  //       specialtyList:[\"Gastroenterology\"]\n  //     }\n  //   }).then((res)=>{\n  //     console.log(res);\n  //   })\n  // console.log.hospitals(renderCount)\n  // if (renderCount == 0) {\n  //   // loading spinner if prop data is not yet available\n  //   return (\n  //     <div>\n  //       <CircularProgress color=\"secondary\" style={{ marginLeft: '45%', marginTop: '10%' }} />\n  //     </div>\n  //   );\n  // } else {\n\n  return /*#__PURE__*/React.createElement(\"a\", {\n    id: \"likehistory\",\n    className: classes.anchor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 4,\n    mb: 3,\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    flexDirection: \"row\",\n    mb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"docaccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n    className: classes.backIcon,\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, \"Like History\"))), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: display,\n    exclusive: true,\n    onChange: handleDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"doctor\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }, \"Doctor\")), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"hospital\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }, \"Hospital\")))), \" \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }), display === \"doctor\" ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, doctorCards) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, hospitalCards)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  })));\n} // }\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// might be deleted later if naming conventions unify\n// Each indiivdual doctor card\n\n\nfunction DocCard(props) {\n  const classes = useStyles(); // create language strings\n\n  let language = \"\";\n  props.doctorInfo[\"languages\"].forEach(lang => {\n    language = language + \", \" + lang;\n  });\n  language = language.substring(1); // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n  const clickDoctorCard = () => {\n    const doctorSpecialty = props.doctorInfo.specialty;\n    const doctorHospital = props.doctorInfo.hospital;\n    const doctorUsername = props.doctorInfo.username;\n    getSpecialtyData().then(res => {\n      let storedLikeHistory = res.data.credentials.likeHistory;\n      let likedDoctors;\n      let likedHospitals; // if the user has not never liked any doctors or hospitals\n\n      if (!storedLikeHistory) {\n        likedDoctors = [];\n        likedHospitals = [];\n      } else {\n        likedDoctors = storedLikeHistory.doctors ? storedLikeHistory.doctors : [];\n        likedHospitals = storedLikeHistory.hospitals ? storedLikeHistory.hospitals : [];\n      }\n\n      setLikeHistory({\n        doctors: likedDoctors,\n        hospitals: likedHospitals\n      }); // setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n\n    let getSpecialtyData = async () => {\n      let data = await axios.get(proxyurl + axios.defaults.baseURL + \"getallsearchdata\", {\n        params: {\n          specialty: doctorSpecialty\n        }\n      });\n      return data;\n    };\n\n    axios.get(proxyurl + axios.defaults.baseURL + \"getallsearchdata\", {\n      params: {\n        specialty: doctorSpecialty\n      }\n    }).then(res => {\n      console.log(res.data.doctorSpecialty);\n    });\n  }; // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    onClick: clickDoctorCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    className: classes.imageGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    className: classes.img,\n    image: docImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, \"Dr.\" + props.doctorInfo[\"name\"]), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 15\n    }\n  }, \"Specialty: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 15\n    }\n  }, props.doctorInfo[\"specialty\"])), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 15\n    }\n  }, \"Hospital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 15\n    }\n  }, props.doctorInfo[\"hospital\"])), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 15\n    }\n  }, \"Languages: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, language)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Chip, {\n    color: \"secondary\",\n    size: \"small\",\n    label: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.likeBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  }, props.doctorInfo[\"likes\"])))));\n}\n\nfunction HospitalCard(props) {\n  const classes = useStyles(); // const handleClick = () => {\n  //   props.updateTargetHos(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/hospprofile\");\n  //   }\n  // };\n\n  return (\n    /*#__PURE__*/\n    // onClick={handleClick}\n    React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      className: classes.imageGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      component: \"img\",\n      className: classes.img,\n      image: hospImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 13\n      }\n    }, props.hospitalInfo[\"name\"]), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 15\n      }\n    }, \"Address: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 15\n      }\n    }, props.hospitalInfo[\"address\"])), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 15\n      }\n    }, \"Related Specialty: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 15\n      }\n    }, props.hospitalInfo[\"relatedSpecialty\"])), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 15\n      }\n    }, \"Phone: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 15\n      }\n    }, props.hospitalInfo[\"phone\"])), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Chip, {\n      color: \"secondary\",\n      size: \"small\",\n      label: \"Private\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: classes.likeBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 13\n      }\n    }, props.hospitalInfo[\"likes\"])))))\n  );\n}\n\nLikeHistory.propTypes = {// updateVerification: PropTypes.func.isRequired,\n  // getAllSearchData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  storedCredentials: state.user.credentials // searchData: state.data.searchData\n\n});\n\nconst mapActionsToProps = {// updateVerification,\n  // getAllSearchData\n};\nexport default connect(mapStateToProps, mapActionsToProps)(LikeHistory);","map":{"version":3,"sources":["/Users/Michelle/Downloads/may10_michelle/src/Components/docAccount/LikeHistory.js"],"names":["React","Fragment","useEffect","makeStyles","Box","Typography","Grid","Hidden","ArrowBackIosIcon","ToggleButton","ToggleButtonGroup","CircularProgress","Link","connect","PropTypes","axios","Card","CardContent","CardMedia","Chip","FavoriteIcon","docImg","hospImg","proxyurl","useStyles","theme","account","root","display","margin","img","width","breakpoints","only","down","imageGrid","flexDirection","justifyContent","alignItems","marginTop","marginBottom","likeBox","marginLeft","marginRight","LikeHistory","props","classes","setDisplay","useState","handleDisplay","event","newDisplay","renderCount","setRenderCount","likeHistory","setLikeHistory","doctors","hospitals","displayStoredCredentials","getStoredCredentials","then","res","storedLikeHistory","data","credentials","likedDoctors","likedHospitals","catch","error","console","userStoredCredentials","get","defaults","baseURL","doctorCards","map","doctor","username","hospitalCards","hospital","name","anchor","backIcon","textTransform","DocCard","language","doctorInfo","forEach","lang","substring","clickDoctorCard","doctorSpecialty","specialty","doctorHospital","doctorUsername","getSpecialtyData","params","log","color","HospitalCard","hospitalInfo","propTypes","mapStateToProps","state","storedCredentials","user","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\n// import DocCard from \"../../Components/results/DocCard\";\n// import HospCard from \"../../Components/results/HospitalCard\";\n\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport docImg from \"../../img/results/docAlex.png\";\n\nimport hospImg from \"../../img/results/pantaihospital.png\";\n\n\n\n\n// import { getAllSearchData } from \"../../redux/actions/dataActions\";\n\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// for small cards display, might delete later if naming conventions unify\n\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.account,\n\n  root: {\n    display: \"flex\",\n    margin: 30,\n  },\n\n  img: {\n    width: \"60%\",\n    [theme.breakpoints.only(\"md\")]: {\n      width: \"80%\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"40%\",\n    },\n  },\n\n  imageGrid: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 30,\n      marginBottom: 10,\n    },\n  },\n  likeBox: {\n    marginTop: 16,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 0,\n      alignItems: \"flex-start\",\n      marginLeft: 20,\n      marginRight: 20,\n      marginBottom: 20,\n    },\n  },\n}));\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nfunction LikeHistory(props) {\n  const classes = useStyles();\n\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0);\n\n  const [likeHistory, setLikeHistory] = React.useState({\n    doctors: [],\n    hospitals: []\n  })\n\n\n  useEffect(() => {\n    return displayStoredCredentials();\n  }, []);\n\n\n  const displayStoredCredentials = () => {\n    getStoredCredentials()\n      .then((res) => {\n        let storedLikeHistory = res.data.credentials.likeHistory;\n        let likedDoctors;\n        let likedHospitals;\n\n        // if the user has not never liked any doctors or hospitals\n        if (!storedLikeHistory) {\n          likedDoctors = [];\n          likedHospitals = [];\n        } else {\n          likedDoctors = storedLikeHistory.doctors ? storedLikeHistory.doctors : [];\n          likedHospitals = storedLikeHistory.hospitals ? storedLikeHistory.hospitals : [];\n        }\n\n        setLikeHistory({\n          doctors: likedDoctors,\n          hospitals: likedHospitals\n        });\n\n        // setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  let getStoredCredentials = async () => {\n    let userStoredCredentials = await axios.get(proxyurl + axios.defaults.baseURL + \"user\");\n    return userStoredCredentials;\n  }\n\n  // list of liked doctor cards on doctor tab\n  let doctorCards = likeHistory.doctors.map(doctor => {\n    return (\n      <DocCard key={doctor.username} doctorInfo={doctor} />\n    )\n  })\n\n  // list of liked hospitals cards on hospital tab\n  let hospitalCards = likeHistory.hospitals.map(hospital => {\n    return (\n      <HospitalCard key={hospital.name} hospitalInfo={hospital} />\n    )\n  })\n\n\n\n\n\n\n\n\n  // only run after liked history doctors and hospitals have been set\n  // useEffect(() => {\n  //   if (renderCount == 1 && (likeHistory.doctors.length > 0 || likeHistory.hospitals.length > 0)) {\n  //     return displayStoredData();\n  //   }\n  // }, []);\n\n\n  // const displayStoredData = () => {\n  //   getStoredData()\n  //     .then((res) => {\n  //       let storedLikeHistory = res.data.credentials.likeHistory;\n  //       let likedDoctors;\n  //       let likedHospitals;\n\n  //       // if the user has not never liked any doctors or hospitals\n  //       if (!storedLikeHistory) {\n  //         likedDoctors = [];\n  //         likedHospitals = [];\n  //       } else {\n  //         likedDoctors = storedLikeHistory.doctors ? storedLikeHistory.doctors : [];\n  //         likedHospitals = storedLikeHistory.hospitals ? storedLikeHistory.hospitals : [];\n  //       }\n\n  //       setLikeHistory({\n  //         doctors: likedDoctors,\n  //         hospitals: likedHospitals\n  //       });\n\n  //       // setRenderCount(1);\n  //     }).catch((error) => {\n  //       console.error(error);\n  //     })\n  // }\n\n\n  // let getStoredData = async () => {\n  //   let searchData =\n  //     await axios.get(proxyurl + axios.defaults.baseURL + \"getallsearchdata\", {\n  //       params: {\n  //         specialtyList: \n  //       }\n  //     }\n  //   );\n  //   return searchData;\n  // }\n\n\n\n\n  //   axios.get(proxyurl+axios.defaults.baseURL+\"getallsearchdata\", {\n  //     params:{\n  //       specialtyList:[\"Gastroenterology\"]\n  //     }\n  //   }).then((res)=>{\n  //     console.log(res);\n\n  //   })\n\n\n\n\n\n\n\n\n  // console.log.hospitals(renderCount)\n\n  // if (renderCount == 0) {\n  //   // loading spinner if prop data is not yet available\n  //   return (\n  //     <div>\n  //       <CircularProgress color=\"secondary\" style={{ marginLeft: '45%', marginTop: '10%' }} />\n  //     </div>\n  //   );\n\n  // } else {\n\n\n\n  return (\n    <a id=\"likehistory\" className={classes.anchor}>\n      <Grid container spacing={0}>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10} md={8}>\n          <Box display=\"flex\" mt={4} mb={3} flexWrap=\"wrap\" alignItems=\"center\">\n            <Box flexGrow={1} flexDirection=\"row\" mb={1}>\n              <Typography variant=\"h5\" color=\"primary\">\n                {/* Back button, 手机屏幕才会出现 */}\n                <Hidden mdUp>\n                  {/* <IconButton> */}\n                  <Link to=\"docaccount\">\n                    <ArrowBackIosIcon\n                      className={classes.backIcon}\n                      fontSize=\"small\"\n                    />\n                  </Link>\n                  {/* </IconButton> */}\n                </Hidden>\n                <strong>Like History</strong>\n              </Typography>\n            </Box>\n            {/* Display by Doctor/Hospital buttons */}\n            <Box>\n              <ToggleButtonGroup\n                value={display}\n                exclusive\n                onChange={handleDisplay}\n              >\n                <ToggleButton value=\"doctor\" color=\"primary\">\n                  <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                    Doctor\n                  </Typography>\n                </ToggleButton>\n                <ToggleButton value=\"hospital\">\n                  <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                    Hospital\n                  </Typography>\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Box>{\" \"}\n          </Box>\n\n          <br></br>\n          <br></br>\n\n          {/* if user clicks on display by 'doctor', then render doctor cards */}\n          {display === \"doctor\" ? (\n            <Fragment>{doctorCards}</Fragment>\n          ) : (\n              <Fragment>{hospitalCards}</Fragment>\n            )}\n        </Grid>\n        <Grid item xs={1} md={3}></Grid>\n      </Grid>\n    </a>\n  );\n}\n// }\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// might be deleted later if naming conventions unify\n\n\n\n// Each indiivdual doctor card\nfunction DocCard(props) {\n  const classes = useStyles();\n  // create language strings\n  let language = \"\";\n  props.doctorInfo[\"languages\"].forEach((lang) => {\n    language = language + \", \" + lang;\n  });\n  language = language.substring(1);\n\n\n  // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n  const clickDoctorCard = () => {\n    const doctorSpecialty = props.doctorInfo.specialty;\n    const doctorHospital = props.doctorInfo.hospital;\n    const doctorUsername = props.doctorInfo.username;\n\n\n      getSpecialtyData()\n        .then((res) => {\n          let storedLikeHistory = res.data.credentials.likeHistory;\n          let likedDoctors;\n          let likedHospitals;\n\n          // if the user has not never liked any doctors or hospitals\n          if (!storedLikeHistory) {\n            likedDoctors = [];\n            likedHospitals = [];\n          } else {\n            likedDoctors = storedLikeHistory.doctors ? storedLikeHistory.doctors : [];\n            likedHospitals = storedLikeHistory.hospitals ? storedLikeHistory.hospitals : [];\n          }\n\n          setLikeHistory({\n            doctors: likedDoctors,\n            hospitals: likedHospitals\n          });\n\n          // setRenderCount(1);\n        }).catch((error) => {\n          console.error(error);\n        })\n\n        \n    let getSpecialtyData = async () => {\n      let data =\n        await axios.get(proxyurl + axios.defaults.baseURL + \"getallsearchdata\",\n          {\n            params: {\n              specialty: doctorSpecialty\n            }\n          })\n      return data;\n    }\n\n\n\n    axios.get(proxyurl + axios.defaults.baseURL + \"getallsearchdata\", {\n      params: {\n        specialty: doctorSpecialty\n      }\n    }).then((res) => {\n      console.log(res.data.doctorSpecialty)\n\n    })\n  }\n\n\n\n\n\n\n\n  // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n  return (\n    <Card className={classes.root} onClick={clickDoctorCard}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={3} className={classes.imageGrid}>\n          {/* doctor image */}\n          <CardMedia\n            component=\"img\"\n            className={classes.img}\n            image={docImg}\n          ></CardMedia>\n        </Grid>\n        <Grid item xs={12} sm={7}>\n          <CardContent>\n            {/* doctor details */}\n            <Typography variant=\"h6\" color=\"primary\">\n              {\"Dr.\" + props.doctorInfo[\"name\"]}\n            </Typography>\n            <br></br>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Specialty: </strong>{\" \"}\n              <span>{props.doctorInfo[\"specialty\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Hospital: </strong>\n              <span>{props.doctorInfo[\"hospital\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Languages: </strong>\n              <span>{language}</span>\n            </Typography>\n            <br></br>\n            {/* private tag */}\n            <Chip color=\"secondary\" size=\"small\" label=\"Private\"></Chip>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          {/* Like icon + number of likes */}\n          <Box className={classes.likeBox}>\n            <FavoriteIcon style={{ color: \"red\" }} />\n            <Typography variant=\"body2\" color=\"primary\">\n              {props.doctorInfo[\"likes\"]}\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\n\nfunction HospitalCard(props) {\n  const classes = useStyles();\n\n  // const handleClick = () => {\n  //   props.updateTargetHos(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/hospprofile\");\n  //   }\n  // };\n\n  return (\n    // onClick={handleClick}\n    <Card className={classes.root} >\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={3} className={classes.imageGrid}>\n          {/* hospital logo image */}\n          <CardMedia\n            component=\"img\"\n            className={classes.img}\n            image={hospImg}\n          ></CardMedia>\n        </Grid>\n\n        <Grid item xs={12} sm={7}>\n          <CardContent>\n            {/* hospital details */}\n            <Typography variant=\"h6\" color=\"primary\">\n              {props.hospitalInfo[\"name\"]}\n            </Typography>\n            <br></br>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Address: </strong>\n              <span>{props.hospitalInfo[\"address\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Related Specialty: </strong>\n              <span>{props.hospitalInfo[\"relatedSpecialty\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Phone: </strong>\n              <span>{props.hospitalInfo[\"phone\"]}</span>\n            </Typography>\n\n            <br></br>\n            <Chip color=\"secondary\" size=\"small\" label=\"Private\"></Chip>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          {/* like icon + number of likes */}\n          <Box className={classes.likeBox}>\n            <FavoriteIcon style={{ color: \"red\" }} />\n            <Typography variant=\"body2\" color=\"primary\">\n              {props.hospitalInfo[\"likes\"]}\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\n\n\n\n\n\n\n\nLikeHistory.propTypes = {\n  // updateVerification: PropTypes.func.isRequired,\n  // getAllSearchData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  storedCredentials: state.user.credentials,\n  // searchData: state.data.searchData\n});\n\nconst mapActionsToProps = {\n  // updateVerification,\n  // getAllSearchData\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(LikeHistory);"]},"metadata":{},"sourceType":"module"}
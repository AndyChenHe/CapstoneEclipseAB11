{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/finalCapstoneII/CapstoneEclipseAB11/src/Components/results/SearchResults.js\";\nimport React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Hidden from \"@material-ui/core/Hidden\"; // components\n\nimport CovidAlert from \"../Alert\";\nimport DocCard from \"./DocCard\";\nimport HospitalCard from \"./HospitalCard\";\nimport Empty from \"./SearchNotFound\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { HospitalType, Languages, YearsOfPractice, Location } from \"./FiltersFunctions\";\nimport { FilterButtonPhone } from \"./FiltersUI_Phone\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: 240\n  },\n  drawerContainer: {\n    overflow: \"auto\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  toggleContainer: {\n    margin: theme.spacing(3, 0)\n  }\n}));\nexport default function SearchResultsFilter(props) {\n  const classes = useStyles(); //store state - whether user clicks on display by doctor or display by hospital\n\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n      setPage(1);\n    }\n  }; //store state of pages\n\n\n  const [page, setPage] = React.useState(1); //page 1 as default\n\n  const maxPage = 5;\n\n  const handlePageChange = (event, value) => {\n    window.scrollTo(0, 0);\n    setPage(value);\n  }; // create cards for doctors based on results\n\n\n  let pageNavCount;\n\n  if (display == 'doctor') {\n    pageNavCount = Math.ceil(props.docInfo.length / maxPage);\n  } else {\n    pageNavCount = Math.ceil(props.hospitalInfo.length / maxPage);\n  } // find the index of the first card in the page\n\n\n  let cardStartIndex = (page - 1) * maxPage;\n  let cardEndIndex = 0; // find the index of the last card in the page\n\n  if (display == 'doctor') {\n    if (cardStartIndex + maxPage >= props.docInfo.length) {\n      cardEndIndex = props.docInfo.length;\n    } else {\n      cardEndIndex = maxPage + cardStartIndex;\n    }\n  } else {\n    if (cardStartIndex + maxPage >= props.hospitalInfo.length) {\n      cardEndIndex = props.hospitalInfo.length;\n    } else {\n      cardEndIndex = maxPage + cardStartIndex;\n    }\n  } // He Chen Changed 2020\n\n\n  let allDoccards = [];\n  let allHosCards = [];\n\n  if (display == 'doctor') {\n    // // he chen \n    if (props.docInfo.length != 0 && props.docInfo != null) {\n      for (let i = cardStartIndex; i < cardEndIndex; i++) {\n        let component = /*#__PURE__*/React.createElement(DocCard, Object.assign({}, props, {\n          updateTargetDoc: props.updateTargetDoc,\n          resultData: props.docInfo[i],\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 27\n          }\n        }));\n        allDoccards.push(component);\n      }\n    } else {\n      let component;\n\n      if (props.searchingState == 'in-progress') {\n        component = /*#__PURE__*/React.createElement(CircularProgress, {\n          color: \"secondary\",\n          style: {\n            marginLeft: '45%',\n            marginTop: '5%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 24\n          }\n        });\n      } else {\n        component = /*#__PURE__*/React.createElement(Empty, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }\n        });\n      }\n\n      allDoccards.push(component);\n    }\n  } else {\n    if (props.hospitalInfo.length != 0 && props.hospitalInfo != null) {\n      for (let i = cardStartIndex; i < cardEndIndex; i++) {\n        console.log('counter');\n        console.log(i);\n        let component = /*#__PURE__*/React.createElement(HospitalCard, Object.assign({}, props, {\n          resultData: props.hospitalInfo[i],\n          key: i,\n          updateTargetHos: props.updateTargetHos,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 26\n          }\n        }));\n        allHosCards.push(component);\n      }\n    } else {\n      let component;\n\n      if (props.searchingState == 'in-progress') {\n        component = /*#__PURE__*/React.createElement(CircularProgress, {\n          color: \"secondary\",\n          style: {\n            marginLeft: '45%',\n            marginTop: '5%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 24\n          }\n        });\n      } else {\n        component = /*#__PURE__*/React.createElement(Empty, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 23\n          }\n        });\n      }\n\n      allHosCards.push(component);\n    }\n  }\n\n  console.log(allHosCards); // create cards for doctors based on Hospital\n  //   let allHosCards = [];\n  //   if (props.hospitalInfo.length != 0 && props.hospitalInfo != null){\n  //     let key = 0;\n  //     allHosCards = props.hospitalInfo.map((msgString) => {\n  //         let component = <HospitalCard {...props} resultData = {msgString} key = {key} updateTargetHos={props.updateTargetHos}/>\n  //         key ++;\n  //         return component; //add this new component to resulting array\n  //     })\n  // } else {\n  //   let component = <Empty/>\n  //   allHosCards.push(component);\n  // }\n\n  let docHosbuttonGroup = [];\n\n  if (props.searchMethod != 'Doctor') {\n    docHosbuttonGroup = /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      value: display,\n      exclusive: true,\n      onChange: handleDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      value: \"doctor\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, \"Doctor\")), /*#__PURE__*/React.createElement(ToggleButton, {\n      value: \"hospital\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, \"Hospital\")));\n  }\n\n  let dataInfoNotesDoc = 'Display results by doctors';\n  let dataInfoNotesHos = 'Display results by hospitals';\n\n  if (props.searchMethod == 'Hospital') {\n    dataInfoNotesDoc = 'Doctors related to ' + '\"' + props.keywords + '\"';\n    dataInfoNotesHos = 'Hospitals related to' + props.keywords;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    ml: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(HospitalType, {\n    filterHosType: props.filterHosType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Languages, {\n    filterLanguageList: props.filterLanguageList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }), display === \"doctor\" ? /*#__PURE__*/React.createElement(YearsOfPractice, {\n    filterYear: props.filterYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(Location, {\n    filterDrivingTime: props.filterDrivingTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 92\n    }\n  })))), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.covidBox,\n    style: {\n      marginLeft: 30,\n      marginRight: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CovidAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 9,\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, display === \"doctor\" ? /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      marginLeft: 30,\n      marginTop: 30,\n      marginBottom: 30\n    },\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 19\n    }\n  }, dataInfoNotesDoc) : /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      marginLeft: 30,\n      marginTop: 30,\n      marginBottom: 30\n    },\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }, dataInfoNotesHos)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 3,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toggleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  }, docHosbuttonGroup)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, display === \"doctor\" ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, allDoccards) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, allHosCards)), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    count: pageNavCount,\n    page: page,\n    onChange: handlePageChange,\n    shape: \"rounded\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FilterButtonPhone, {\n    filterLanguageList: props.filterLanguageList,\n    filterHosType: props.filterHosType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toggleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, docHosbuttonGroup)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, display === \"doctor\" ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, allDoccards) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, allHosCards)), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    count: pageNavCount,\n    page: page,\n    onChange: handlePageChange,\n    shape: \"rounded\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/andychenhe/Desktop/finalCapstoneII/CapstoneEclipseAB11/src/Components/results/SearchResults.js"],"names":["React","Fragment","makeStyles","Drawer","Toolbar","Typography","Box","Grid","Pagination","ToggleButton","ToggleButtonGroup","Hidden","CovidAlert","DocCard","HospitalCard","Empty","CircularProgress","HospitalType","Languages","YearsOfPractice","Location","FilterButtonPhone","useStyles","theme","root","display","height","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","toggleContainer","margin","SearchResultsFilter","props","classes","setDisplay","useState","handleDisplay","event","newDisplay","setPage","page","maxPage","handlePageChange","value","window","scrollTo","pageNavCount","Math","ceil","docInfo","length","hospitalInfo","cardStartIndex","cardEndIndex","allDoccards","allHosCards","i","component","updateTargetDoc","push","searchingState","marginLeft","marginTop","console","log","updateTargetHos","docHosbuttonGroup","searchMethod","textTransform","dataInfoNotesDoc","dataInfoNotesHos","keywords","paper","filterHosType","filterLanguageList","filterYear","filterDrivingTime","covidBox","marginRight","marginBottom"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n// components\nimport CovidAlert from \"../Alert\";\nimport DocCard from \"./DocCard\";\nimport HospitalCard from \"./HospitalCard\";\nimport Empty from \"./SearchNotFound\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  HospitalType,\n  Languages,\n  YearsOfPractice,\n  Location,\n} from \"./FiltersFunctions\";\nimport { FilterButtonPhone } from \"./FiltersUI_Phone\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 240,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  toggleContainer: {\n    margin: theme.spacing(3, 0),\n  },\n}));\n\nexport default function SearchResultsFilter(props) {\n  const classes = useStyles();\n\n  //store state - whether user clicks on display by doctor or display by hospital\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n      setPage(1);\n    }\n  };\n\n  //store state of pages\n  const [page, setPage] = React.useState(1); //page 1 as default\n  const maxPage = 5;\n\n  const handlePageChange = (event, value) => {\n    window.scrollTo(0, 0);\n    setPage(value);\n  };\n\n    // create cards for doctors based on results\n    let pageNavCount;\n    if (display == 'doctor'){\n      pageNavCount = Math.ceil(props.docInfo.length / maxPage);\n    } else {\n      pageNavCount = Math.ceil(props.hospitalInfo.length / maxPage)\n    }\n    // find the index of the first card in the page\n    let cardStartIndex = (page - 1)*maxPage;\n    let cardEndIndex = 0;\n    // find the index of the last card in the page\n    if (display == 'doctor'){\n      if (cardStartIndex + maxPage >= props.docInfo.length){\n        cardEndIndex = props.docInfo.length;\n      } else {\n        cardEndIndex = maxPage + cardStartIndex;\n      }\n    } else {\n      if (cardStartIndex + maxPage >=  props.hospitalInfo.length){\n        cardEndIndex = props.hospitalInfo.length;\n      } else {\n        cardEndIndex = maxPage + cardStartIndex;\n      }\n    }\n    \n    // He Chen Changed 2020\n    let allDoccards = [];\n    let allHosCards = [];\n    if (display == 'doctor'){\n      // // he chen \n      if (props.docInfo.length != 0 && props.docInfo != null){\n        for (let i = cardStartIndex; i < cardEndIndex; i ++){\n          let component = <DocCard {...props} updateTargetDoc={props.updateTargetDoc} resultData = {props.docInfo[i]} key = {i}/>\n          allDoccards.push(component);\n        }\n      } else {\n        let component;\n        if (props.searchingState == 'in-progress'){\n          component =  <CircularProgress color=\"secondary\" style={{ marginLeft: '45%', marginTop: '5%' }} />;\n        } else {\n          component = <Empty/>;\n        }\n        allDoccards.push(component);\n      }\n    } else {\n    if (props.hospitalInfo.length != 0 && props.hospitalInfo != null){\n      for (let i = cardStartIndex; i < cardEndIndex; i ++){\n        console.log('counter');\n        console.log(i);\n        let component =  <HospitalCard {...props} resultData = {props.hospitalInfo[i]} key = {i} updateTargetHos={props.updateTargetHos}/>\n        allHosCards.push(component);\n      }\n    } else {\n        let component;\n        if (props.searchingState == 'in-progress'){\n          component =  <CircularProgress color=\"secondary\" style={{ marginLeft: '45%', marginTop: '5%' }} />;\n        } else {\n          component = <Empty/>;\n        }\n        allHosCards.push(component);\n      }\n    }\n    console.log(allHosCards);\n    // create cards for doctors based on Hospital\n  //   let allHosCards = [];\n  //   if (props.hospitalInfo.length != 0 && props.hospitalInfo != null){\n  //     let key = 0;\n  //     allHosCards = props.hospitalInfo.map((msgString) => {\n  //         let component = <HospitalCard {...props} resultData = {msgString} key = {key} updateTargetHos={props.updateTargetHos}/>\n  //         key ++;\n  //         return component; //add this new component to resulting array\n  //     })\n  // } else {\n  //   let component = <Empty/>\n  //   allHosCards.push(component);\n  // }\n\n  let docHosbuttonGroup = [];\n  if (props.searchMethod != 'Doctor'){\n    docHosbuttonGroup = <ToggleButtonGroup\n                      value={display}\n                      exclusive\n                      onChange={handleDisplay}\n                    >\n                      <ToggleButton value=\"doctor\" color=\"primary\">\n                        <Typography\n                          color=\"primary\"\n                          style={{ textTransform: \"none\" }}\n                        >\n                          Doctor\n                        </Typography>\n                      </ToggleButton>\n                      <ToggleButton value=\"hospital\">\n                        <Typography\n                          color=\"primary\"\n                          style={{ textTransform: \"none\" }}\n                        >\n                          Hospital\n                        </Typography>\n                      </ToggleButton>\n                    </ToggleButtonGroup>\n  }\n\n  let dataInfoNotesDoc = 'Display results by doctors';\n  let dataInfoNotesHos = 'Display results by hospitals';\n  if (props.searchMethod == 'Hospital'){\n    dataInfoNotesDoc = 'Doctors related to ' + '\"' + props.keywords + '\"';\n    dataInfoNotesHos = 'Hospitals related to' + props.keywords;\n  }\n  \n\n  return (\n    <Fragment>\n      <Hidden smDown>\n        <div className={classes.root}>\n          <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <Toolbar />\n            {/* For filter sidebar */}\n            <div className={classes.drawerContainer}>\n              <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                ml={8}\n              >\n                <br></br>\n                <br></br>\n                <HospitalType filterHosType={props.filterHosType}/>\n                <br></br>\n                <br></br>\n                <Languages filterLanguageList={props.filterLanguageList}/>\n                <br></br>\n                <br></br>\n                {/* If display by doctor, filter sidebar will show years of practice;\n            if display by hospital, filter sidebar will show location */}\n                {display === \"doctor\" ? <YearsOfPractice filterYear={props.filterYear}/> : <Location filterDrivingTime={props.filterDrivingTime}/>}\n              </Box>\n            </div>\n          </Drawer>\n          <main className={classes.content}>\n            <Toolbar />\n            {/* Covid Alert */}\n            <div\n              className={classes.covidBox}\n              style={{ marginLeft: 30, marginRight: 30 }}\n            >\n              <CovidAlert />\n            </div>\n            {/* Search result content starts here */}\n            <Grid container spacing={0}>\n              <Grid item sm={9} lg={10}>\n                {/* if user clicks on 'doctor' button, then render 'display results by doctors; else 'display results by hospitals'*/}\n                {display === \"doctor\" ? (\n                  <Typography\n                    style={{ marginLeft: 30, marginTop: 30, marginBottom: 30 }}\n                    variant=\"h6\"\n                    color=\"primary\"\n                  >\n                    {dataInfoNotesDoc}\n                  </Typography>\n                ) : (\n                  <Typography\n                    style={{ marginLeft: 30, marginTop: 30, marginBottom: 30 }}\n                    variant=\"h6\"\n                    color=\"primary\"\n                  >\n                    {dataInfoNotesHos}\n                  </Typography>\n                )}\n              </Grid>\n              <Grid item sm={3} lg={2}>\n                {/* Display by Doctor/Hospital buttons */}\n                <Fragment>\n                  <div className={classes.toggleContainer}>\n                  {docHosbuttonGroup}\n                  </div>\n                </Fragment>\n              </Grid>\n            </Grid>\n            <div>\n              {/* if user clicks on display by 'doctor', then render doctor cards */}\n              {display === \"doctor\" ? (\n                <Fragment>\n                  {allDoccards}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  {allHosCards}\n                </Fragment>\n              )}\n            </div>\n            {/* For pages at bottom */}\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Pagination\n                count={pageNavCount}\n                page={page}\n                onChange={handlePageChange}\n                shape=\"rounded\"\n                color=\"primary\"\n              />\n            </Box>\n          </main>\n        </div>\n      </Hidden>\n\n      {/* for small phone screens */}\n      <Hidden mdUp>\n        <Grid container spacing={0} style={{ marginTop: 20 }}>\n          <Grid item xs={1}></Grid>\n\n          <Grid item xs={5} align=\"left\">\n            <FilterButtonPhone filterLanguageList={props.filterLanguageList} filterHosType={props.filterHosType} />\n          </Grid>\n          <Grid item xs={5} align=\"right\">\n            <div className={classes.toggleContainer}>\n            {docHosbuttonGroup}\n            </div>\n          </Grid>\n          <Grid item xs={1}></Grid>\n        </Grid>\n\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          {/* If display by doctor, render DocCard; if display by Hospital, render HospitalCard */}\n          {display === \"doctor\" ? (\n            <Fragment>\n              {allDoccards}\n            </Fragment>\n          ) : (\n            <Fragment>\n             {allHosCards}\n            </Fragment>\n          )}\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <Pagination\n            count={pageNavCount}\n            page={page}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n            color=\"primary\"\n          />\n        </Box>\n      </Hidden>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
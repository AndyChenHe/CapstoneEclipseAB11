{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/may10_michelle 2/src/Components/results/SearchResults.js\";\nimport React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Hidden from \"@material-ui/core/Hidden\"; // components\n\nimport CovidAlert from \"../Alert\";\nimport DocCard from \"./DocCard\";\nimport HospitalCard from \"./HospitalCard\";\nimport Empty from \"./SearchNotFound\";\nimport { HospitalType, Languages, YearsOfPractice, Location } from \"./FiltersFunctions\";\nimport { FilterButtonPhone } from \"./FiltersUI_Phone\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: 240\n  },\n  drawerContainer: {\n    overflow: \"auto\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  toggleContainer: {\n    margin: theme.spacing(3, 0)\n  }\n}));\nexport default function SearchResultsFilter(props) {\n  const classes = useStyles(); //store state - whether user clicks on display by doctor or display by hospital\n\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  }; //store state of pages\n\n\n  const [page, setPage] = React.useState(1); //page 1 as default\n\n  const maxPage = 5;\n\n  const handlePageChange = (event, value) => {\n    window.scrollTo(0, 0);\n    setPage(value);\n  }; // create cards for doctors based on results\n\n\n  let pageNavCount = Math.ceil(props.docInfo.length / maxPage); // find the index of the first card in the page\n\n  let cardStartIndex = (page - 1) * maxPage;\n  let cardEndIndex = 0; // find the index of the last card in the page\n\n  if (cardStartIndex + maxPage - 1 > props.docInfo.length) {\n    cardEndIndex = props.docInfo.length - 1;\n  } else {\n    cardEndIndex = maxPage - 1 + cardStartIndex;\n  }\n\n  console.log(res);\n  console.log(props.docInfo);\n  let allDoccards = []; // // he chen \n\n  if (props.docInfo != [] && props.docInfo != null) {\n    for (let i = cardStartIndex; i <= cardEndIndex; i++) {\n      let component = /*#__PURE__*/React.createElement(DocCard, Object.assign({}, props, {\n        updateTargetDoc: props.updateTargetDoc,\n        resultData: props.docInfo[i],\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }));\n      allDoccards.push(component);\n    }\n  } else {\n    let component = /*#__PURE__*/React.createElement(Empty, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    });\n    allDoccards.push(component);\n  } // create cards for doctors based on Hospital\n\n\n  let allHosCards = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }\n  });\n\n  if (props.hospitalInfo) {\n    let key = 0;\n    allHosCards = props.hospitalInfo.map(msgString => {\n      let component = /*#__PURE__*/React.createElement(HospitalCard, Object.assign({}, props, {\n        resultData: msgString,\n        key: key,\n        updateTargetHos: props.updateTargetHos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 27\n        }\n      }));\n      key++;\n      return component; //add this new component to resulting array\n    });\n  }\n\n  let docHosbuttonGroup = [];\n\n  if (props.searchMethod != 'Doctor') {\n    docHosbuttonGroup = /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      value: display,\n      exclusive: true,\n      onChange: handleDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      value: \"doctor\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, \"Doctor\")), /*#__PURE__*/React.createElement(ToggleButton, {\n      value: \"hospital\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, \"Hospital\")));\n  }\n\n  let dataInfoNotesDoc = 'Display results by doctors';\n  let dataInfoNotesHos = 'Display results by hospitals';\n\n  if (props.searchMethod == 'Hospital') {\n    dataInfoNotesDoc = 'Doctors related to ' + '\"' + props.keywords + '\"';\n    dataInfoNotesHos = 'Hospitals related to' + props.keywords;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    ml: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(HospitalType, {\n    filterHosType: props.filterHosType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Languages, {\n    filterLanguageList: props.filterLanguageList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }), display === \"doctor\" ? /*#__PURE__*/React.createElement(YearsOfPractice, {\n    filterYear: props.filterYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(Location, {\n    filterDrivingTime: props.filterDrivingTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 92\n    }\n  })))), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.covidBox,\n    style: {\n      marginLeft: 30,\n      marginRight: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CovidAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 9,\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, display === \"doctor\" ? /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      marginLeft: 30,\n      marginTop: 30,\n      marginBottom: 30\n    },\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, dataInfoNotesDoc) : /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      marginLeft: 30,\n      marginTop: 30,\n      marginBottom: 30\n    },\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, dataInfoNotesHos)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 3,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toggleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }, docHosbuttonGroup)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, display === \"doctor\" ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, allDoccards) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, allHosCards)), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    count: pageNavCount,\n    page: page,\n    onChange: handlePageChange,\n    shape: \"rounded\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FilterButtonPhone, {\n    filterLanguageList: props.filterLanguageList,\n    filterHosType: props.filterHosType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toggleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, docHosbuttonGroup)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, display === \"doctor\" ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, allDoccards) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, allHosCards)), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    count: pageNavCount,\n    page: page,\n    onChange: handlePageChange,\n    shape: \"rounded\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/andychenhe/Desktop/may10_michelle 2/src/Components/results/SearchResults.js"],"names":["React","Fragment","makeStyles","Drawer","Toolbar","Typography","Box","Grid","Pagination","ToggleButton","ToggleButtonGroup","Hidden","CovidAlert","DocCard","HospitalCard","Empty","HospitalType","Languages","YearsOfPractice","Location","FilterButtonPhone","useStyles","theme","root","display","height","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","toggleContainer","margin","SearchResultsFilter","props","classes","setDisplay","useState","handleDisplay","event","newDisplay","page","setPage","maxPage","handlePageChange","value","window","scrollTo","pageNavCount","Math","ceil","docInfo","length","cardStartIndex","cardEndIndex","console","log","res","allDoccards","i","component","updateTargetDoc","push","allHosCards","hospitalInfo","key","map","msgString","updateTargetHos","docHosbuttonGroup","searchMethod","textTransform","dataInfoNotesDoc","dataInfoNotesHos","keywords","paper","filterHosType","filterLanguageList","filterYear","filterDrivingTime","covidBox","marginLeft","marginRight","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n// components\nimport CovidAlert from \"../Alert\";\nimport DocCard from \"./DocCard\";\nimport HospitalCard from \"./HospitalCard\";\nimport Empty from \"./SearchNotFound\";\n\nimport {\n  HospitalType,\n  Languages,\n  YearsOfPractice,\n  Location,\n} from \"./FiltersFunctions\";\nimport { FilterButtonPhone } from \"./FiltersUI_Phone\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 240,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  toggleContainer: {\n    margin: theme.spacing(3, 0),\n  },\n}));\n\nexport default function SearchResultsFilter(props) {\n  const classes = useStyles();\n\n  //store state - whether user clicks on display by doctor or display by hospital\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  //store state of pages\n  const [page, setPage] = React.useState(1); //page 1 as default\n  const maxPage = 5;\n\n  const handlePageChange = (event, value) => {\n    window.scrollTo(0, 0);\n    setPage(value);\n  };\n\n    // create cards for doctors based on results\n    let pageNavCount = Math.ceil(props.docInfo.length / maxPage);\n    // find the index of the first card in the page\n    let cardStartIndex = (page - 1)*maxPage;\n    let cardEndIndex = 0;\n    // find the index of the last card in the page\n    if (cardStartIndex + maxPage - 1 > props.docInfo.length){\n      cardEndIndex = props.docInfo.length - 1;\n    } else {\n      cardEndIndex = maxPage - 1 + cardStartIndex;\n    }\n\n    console.log(res)\n    console.log(props.docInfo);\n    let allDoccards = [];\n    // // he chen \n    if (props.docInfo != [] && props.docInfo != null){\n      for (let i = cardStartIndex; i <= cardEndIndex; i ++){\n        let component = <DocCard {...props} updateTargetDoc={props.updateTargetDoc} resultData = {props.docInfo[i]} key = {i}/>\n        allDoccards.push(component);\n      }\n    } else {\n      let component = <Empty/>\n      allDoccards.push(component);\n    }\n  \n    // create cards for doctors based on Hospital\n    let allHosCards = <div></div>;\n    if (props.hospitalInfo){\n      let key = 0;\n      allHosCards = props.hospitalInfo.map((msgString) => {\n          let component = <HospitalCard {...props} resultData = {msgString} key = {key} updateTargetHos={props.updateTargetHos}/>\n          key ++;\n          return component; //add this new component to resulting array\n      })\n  } \n\n  let docHosbuttonGroup = [];\n  if (props.searchMethod != 'Doctor'){\n    docHosbuttonGroup = <ToggleButtonGroup\n                      value={display}\n                      exclusive\n                      onChange={handleDisplay}\n                    >\n                      <ToggleButton value=\"doctor\" color=\"primary\">\n                        <Typography\n                          color=\"primary\"\n                          style={{ textTransform: \"none\" }}\n                        >\n                          Doctor\n                        </Typography>\n                      </ToggleButton>\n                      <ToggleButton value=\"hospital\">\n                        <Typography\n                          color=\"primary\"\n                          style={{ textTransform: \"none\" }}\n                        >\n                          Hospital\n                        </Typography>\n                      </ToggleButton>\n                    </ToggleButtonGroup>\n  }\n\n  let dataInfoNotesDoc = 'Display results by doctors';\n  let dataInfoNotesHos = 'Display results by hospitals';\n  if (props.searchMethod == 'Hospital'){\n    dataInfoNotesDoc = 'Doctors related to ' + '\"' + props.keywords + '\"';\n    dataInfoNotesHos = 'Hospitals related to' + props.keywords;\n  }\n  \n  return (\n    <Fragment>\n      <Hidden smDown>\n        <div className={classes.root}>\n          <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <Toolbar />\n            {/* For filter sidebar */}\n            <div className={classes.drawerContainer}>\n              <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                ml={8}\n              >\n                <br></br>\n                <br></br>\n                <HospitalType filterHosType={props.filterHosType}/>\n                <br></br>\n                <br></br>\n                <Languages filterLanguageList={props.filterLanguageList}/>\n                <br></br>\n                <br></br>\n                {/* If display by doctor, filter sidebar will show years of practice;\n            if display by hospital, filter sidebar will show location */}\n                {display === \"doctor\" ? <YearsOfPractice filterYear={props.filterYear}/> : <Location filterDrivingTime={props.filterDrivingTime}/>}\n              </Box>\n            </div>\n          </Drawer>\n          <main className={classes.content}>\n            <Toolbar />\n            {/* Covid Alert */}\n            <div\n              className={classes.covidBox}\n              style={{ marginLeft: 30, marginRight: 30 }}\n            >\n              <CovidAlert />\n            </div>\n            {/* Search result content starts here */}\n            <Grid container spacing={0}>\n              <Grid item sm={9} lg={10}>\n                {/* if user clicks on 'doctor' button, then render 'display results by doctors; else 'display results by hospitals'*/}\n                {display === \"doctor\" ? (\n                  <Typography\n                    style={{ marginLeft: 30, marginTop: 30, marginBottom: 30 }}\n                    variant=\"h6\"\n                    color=\"primary\"\n                  >\n                    {dataInfoNotesDoc}\n                  </Typography>\n                ) : (\n                  <Typography\n                    style={{ marginLeft: 30, marginTop: 30, marginBottom: 30 }}\n                    variant=\"h6\"\n                    color=\"primary\"\n                  >\n                    {dataInfoNotesHos}\n                  </Typography>\n                )}\n              </Grid>\n              <Grid item sm={3} lg={2}>\n                {/* Display by Doctor/Hospital buttons */}\n                <Fragment>\n                  <div className={classes.toggleContainer}>\n                  {docHosbuttonGroup}\n                  </div>\n                </Fragment>\n              </Grid>\n            </Grid>\n            <div>\n              {/* if user clicks on display by 'doctor', then render doctor cards */}\n              {display === \"doctor\" ? (\n                <Fragment>\n                  {allDoccards}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  {allHosCards}\n                </Fragment>\n              )}\n            </div>\n            {/* For pages at bottom */}\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Pagination\n                count={pageNavCount}\n                page={page}\n                onChange={handlePageChange}\n                shape=\"rounded\"\n                color=\"primary\"\n              />\n            </Box>\n          </main>\n        </div>\n      </Hidden>\n\n      {/* for small phone screens */}\n      <Hidden mdUp>\n        <Grid container spacing={0} style={{ marginTop: 20 }}>\n          <Grid item xs={1}></Grid>\n\n          <Grid item xs={5} align=\"left\">\n            <FilterButtonPhone filterLanguageList={props.filterLanguageList} filterHosType={props.filterHosType} />\n          </Grid>\n          <Grid item xs={5} align=\"right\">\n            <div className={classes.toggleContainer}>\n            {docHosbuttonGroup}\n            </div>\n          </Grid>\n          <Grid item xs={1}></Grid>\n        </Grid>\n\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          {/* If display by doctor, render DocCard; if display by Hospital, render HospitalCard */}\n          {display === \"doctor\" ? (\n            <Fragment>\n              {allDoccards}\n            </Fragment>\n          ) : (\n            <Fragment>\n             {allHosCards}\n            </Fragment>\n          )}\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <Pagination\n            count={pageNavCount}\n            page={page}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n            color=\"primary\"\n          />\n        </Box>\n      </Hidden>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/GlobalSearchTabs.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\nimport GlobalLocation from \"./GlobalLocation\"; //filter specialty\n\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.specialty\n}); //filter doctor\n\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.name\n}); //filter hospital\n\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.hospName\n}); //filter condition\n\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.condition\n}); // specialties options\n\nconst specialties = [{\n  specialty: \"Allergy and Immunology\"\n}, {\n  specialty: \"Anesthesiology\"\n}, {\n  specialty: \"Arthroplasty\"\n}]; // doctor name options\n\nconst docNames = [{\n  name: \"Alex Leow\"\n}, {\n  name: \"Alex Tan\"\n}, {\n  name: \"Bryan Lee\"\n}]; // hospital options\n\nconst hospNames = [{\n  hospName: \"Pantai Hospital Kuala Lumpur\"\n}, {\n  hospName: \"Sunway Medical\"\n}]; // Conditions options\n\nconst conditions = [{\n  condition: \"A\"\n}, {\n  condition: \"B\"\n}];\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `full-width-tabpanel-${index}`,\n    \"aria-labelledby\": `full-width-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 27\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\" //height: 224,\n\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`\n  }\n}));\nexport default function VerticalSearchTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    orientation: \"vertical\",\n    variant: \"scrollable\",\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"global search tabs\",\n    className: classes.tabs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n    style: {\n      textTransform: \"none\"\n    },\n    label: \"Specialty\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    style: {\n      textTransform: \"none\"\n    },\n    label: \"Doctor\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    style: {\n      textTransform: \"none\"\n    },\n    label: \"Hospital\"\n  }, a11yProps(2), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    style: {\n      textTransform: \"none\"\n    },\n    label: \"Condition\"\n  }, a11yProps(3), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: specialties,\n    getOptionLabel: option => option.specialty,\n    filterOptions: filterSpecialtyOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by specialty\",\n      variant: \"outlined\",\n      style: {\n        width: 350\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GlobalLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"md\",\n    className: classes.search,\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 22\n      }\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: docNames,\n    getOptionLabel: option => option.name,\n    filterOptions: filterDocOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by doctor's name\",\n      variant: \"outlined\",\n      style: {\n        width: 350\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GlobalLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"md\",\n    className: classes.search,\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 22\n      }\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: hospNames,\n    getOptionLabel: option => option.hospName,\n    filterOptions: filterHospOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by hospital's name\",\n      variant: \"outlined\",\n      style: {\n        width: 350\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GlobalLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"md\",\n    className: classes.search,\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 22\n      }\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: conditions,\n    getOptionLabel: option => option.condition,\n    filterOptions: filterConditionOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by medical condition\",\n      variant: \"outlined\",\n      style: {\n        width: 350\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GlobalLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"md\",\n    className: classes.search,\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 22\n      }\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, \"Search\")));\n}","map":{"version":3,"sources":["/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/GlobalSearchTabs.js"],"names":["React","PropTypes","makeStyles","Hidden","Tabs","Tab","Typography","Box","TextField","Autocomplete","createFilterOptions","SearchIcon","Button","GlobalLocation","filterSpecialtyOptions","matchFrom","stringify","option","specialty","filterDocOptions","name","filterHospOptions","hospName","filterConditionOptions","condition","specialties","docNames","hospNames","conditions","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","display","tabs","borderRight","divider","VerticalSearchTabs","classes","setValue","useState","handleChange","event","newValue","textTransform","params","width","search"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\nimport GlobalLocation from \"./GlobalLocation\";\n\n//filter specialty\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.specialty,\n});\n\n//filter doctor\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.name,\n});\n\n//filter hospital\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.hospName,\n});\n\n//filter condition\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.condition,\n});\n\n// specialties options\nconst specialties = [\n  { specialty: \"Allergy and Immunology\" },\n  { specialty: \"Anesthesiology\" },\n  { specialty: \"Arthroplasty\" },\n];\n// doctor name options\nconst docNames = [\n  { name: \"Alex Leow\" },\n  { name: \"Alex Tan\" },\n  { name: \"Bryan Lee\" },\n];\n// hospital options\nconst hospNames = [\n  { hospName: \"Pantai Hospital Kuala Lumpur\" },\n  { hospName: \"Sunway Medical\" },\n];\n// Conditions options\nconst conditions = [{ condition: \"A\" }, { condition: \"B\" }];\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    //height: 224,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nexport default function VerticalSearchTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Hidden smDown>\n        <Tabs\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"global search tabs\"\n          className={classes.tabs}\n        >\n          <Tab\n            style={{ textTransform: \"none\" }}\n            label=\"Specialty\"\n            {...a11yProps(0)}\n          />\n          <Tab\n            style={{ textTransform: \"none\" }}\n            label=\"Doctor\"\n            {...a11yProps(1)}\n          />\n          <Tab\n            style={{ textTransform: \"none\" }}\n            label=\"Hospital\"\n            {...a11yProps(2)}\n          />\n          <Tab\n            style={{ textTransform: \"none\" }}\n            label=\"Condition\"\n            {...a11yProps(3)}\n          />\n        </Tabs>\n      </Hidden>\n      {/* autocomplete: search by specialty */}\n\n      <TabPanel value={value} index={0}>\n        <Autocomplete\n          options={specialties}\n          getOptionLabel={(option) => option.specialty}\n          filterOptions={filterSpecialtyOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by specialty\"\n              variant=\"outlined\"\n              style={{ width: 350 }}\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n      {/* autocomplete: search by doctor's namey */}\n\n      <TabPanel value={value} index={1}>\n        <Autocomplete\n          options={docNames}\n          getOptionLabel={(option) => option.name}\n          filterOptions={filterDocOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by doctor's name\"\n              variant=\"outlined\"\n              style={{ width: 350 }}\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n      {/* autocomplete: search by hospital's name */}\n\n      <TabPanel value={value} index={2}>\n        <Autocomplete\n          options={hospNames}\n          getOptionLabel={(option) => option.hospName}\n          filterOptions={filterHospOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by hospital's name\"\n              variant=\"outlined\"\n              style={{ width: 350 }}\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n\n      {/* autocomplete: search by condition */}\n\n      <TabPanel value={value} index={3}>\n        <Autocomplete\n          options={conditions}\n          getOptionLabel={(option) => option.condition}\n          filterOptions={filterConditionOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by medical condition\"\n              variant=\"outlined\"\n              style={{ width: 350 }}\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
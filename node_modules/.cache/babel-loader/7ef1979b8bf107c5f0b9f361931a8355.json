{"ast":null,"code":"import _slicedToArray from\"/Users/andychenhe/Desktop/may8-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/andychenhe/Desktop/may8-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectWithoutProperties from\"/Users/andychenhe/Desktop/may8-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import{withStyles}from\"@material-ui/core/styles\";import{useState,useEffect}from'react';import Hidden from\"@material-ui/core/Hidden\";import Tabs from\"@material-ui/core/Tabs\";import Tab from\"@material-ui/core/Tab\";import Typography from\"@material-ui/core/Typography\";import Box from\"@material-ui/core/Box\";import TextField from\"@material-ui/core/TextField\";import Autocomplete,{createFilterOptions}from\"@material-ui/lab/Autocomplete\";import SearchIcon from\"@material-ui/icons/Search\";import Button from\"@material-ui/core/Button\";import GlobalLocation from\"./GlobalLocation\";//filter specialty\nvar filterSpecialtyOptions=createFilterOptions({matchFrom:\"start\",stringify:function stringify(option){return option.specialty;}});//filter doctor\nvar filterDocOptions=createFilterOptions({matchFrom:\"start\",stringify:function stringify(option){return option.name;}});//filter hospital\nvar filterHospOptions=createFilterOptions({matchFrom:\"start\",stringify:function stringify(option){return option.hospName;}});//filter condition\nvar filterConditionOptions=createFilterOptions({matchFrom:\"start\",stringify:function stringify(option){return option.condition;}});// specialties options\nvar specialties=[{specialty:\"Allergy and Immunology\"},{specialty:\"Anesthesiology\"},{specialty:\"Gastroenterology\"}];// doctor name options\nvar docNames=[{name:\"Alex Leow\"},{name:\"Alex Tan\"},{name:\"Bryan Lee\"}];// hospital options\nvar hospNames=[{hospName:\"Pantai Hospital Kuala Lumpur\"},{hospName:\"Sunway Medical\"}];// Conditions options\nvar conditions=[{condition:\"A\"},{condition:\"B\"}];function TabPanel(props){var children=props.children,value=props.value,index=props.index,other=_objectWithoutProperties(props,[\"children\",\"value\",\"index\"]);return/*#__PURE__*/React.createElement(Typography,Object.assign({component:\"div\",role:\"tabpanel\",hidden:value!==index,id:\"full-width-tabpanel-\".concat(index),\"aria-labelledby\":\"full-width-tab-\".concat(index)},other),value===index&&/*#__PURE__*/React.createElement(Box,{p:3},children));}var useStyles=makeStyles(function(theme){return{//vertical tabs\nverticalTabContainer:_defineProperty({},theme.breakpoints.up(\"md\"),{flexGrow:1,backgroundColor:theme.palette.background.paper,display:\"flex\"}),tabs:{borderRight:\"1px solid \".concat(theme.palette.divider),color:\"#003367\"},search:{textTransform:\"none\"},// horizontal tabs\nhorizontalTabContainer:_defineProperty({},theme.breakpoints.down(\"xs\"),{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\"})};});// for horizontal tabs - screen size < ipad\nvar StyledTabs=withStyles({indicator:{display:\"flex\",justifyContent:\"center\",backgroundColor:\"transparent\",\"& > div\":{width:\"100%\",backgroundColor:\"#FF8686\"}}})(function(props){return/*#__PURE__*/React.createElement(Tabs,Object.assign({},props,{TabIndicatorProps:{children:/*#__PURE__*/React.createElement(\"div\",null)}}));});var StyledTab=withStyles(function(theme){return{root:{textTransform:\"none\",color:\"#003367\",fontSize:\"1em\",\"&:focus\":{opacity:1}}};})(function(props){return/*#__PURE__*/React.createElement(Tab,Object.assign({disableRipple:true},props));});// Global search tabs + search by specialty/doc/hosp/condition\n// Used in GlobalSearch.js inside the dialog\nexport default function GlobalSearchTabs(props){var classes=useStyles();var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];var handleSearchMethodChange=function handleSearchMethodChange(event,newValue){var method='';if(newValue==0){method='Specialty';}else if(newValue==1){method='Doctor';}else if(newValue==2){method='Hospital';}else{method='Condition';}setValue(newValue);props.getSearchMethod(method);};var handleSpecialtySearchKeyChange=function handleSpecialtySearchKeyChange(event,newValue){if(newValue){props.getKeyWords(newValue.specialty);}};var handleDoctorSearchKeyChange=function handleDoctorSearchKeyChange(event,newValue){if(newValue){console.log(newValue);props.getKeyWords(newValue.name);}};var handleHospitalSearchKeyChange=function handleHospitalSearchKeyChange(event,newValue){if(newValue){console.log(newValue);props.getKeyWords(newValue.hospName);}};var handleConditionSearchKeyChange=function handleConditionSearchKeyChange(event,newValue){if(newValue){console.log(newValue);props.getKeyWords(newValue.condition);}};var hadleSearch=function hadleSearch(){props.handleClose();props.startSearch();};useEffect(function(){console.log(props.searchBegin);if(props.searchBegin){return props.doMainSearch(props);}});return/*#__PURE__*/React.createElement(\"div\",{className:classes.verticalTabContainer},/*#__PURE__*/React.createElement(Hidden,{smDown:true},/*#__PURE__*/React.createElement(Tabs,{orientation:\"vertical\",variant:\"scrollable\",value:value,onChange:handleSearchMethodChange,\"aria-label\":\"global search tabs\",className:classes.tabs},/*#__PURE__*/React.createElement(Tab,{style:{textTransform:\"none\"},label:\"Specialty\"}),/*#__PURE__*/React.createElement(Tab,{style:{textTransform:\"none\"},label:\"Doctor\"}),/*#__PURE__*/React.createElement(Tab,{style:{textTransform:\"none\"},label:\"Hospital\"}),/*#__PURE__*/React.createElement(Tab,{style:{textTransform:\"none\"},label:\"Condition\"}))),/*#__PURE__*/React.createElement(Hidden,{mdUp:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.HorizontalTabContainer},/*#__PURE__*/React.createElement(StyledTabs,{value:value,onChange:handleSearchMethodChange,\"aria-label\":\"search tabs\",centered:true},/*#__PURE__*/React.createElement(StyledTab,{label:\"Specialty\",style:{minWidth:10}}),/*#__PURE__*/React.createElement(StyledTab,{label:\"Doctor\",style:{minWidth:10}}),/*#__PURE__*/React.createElement(StyledTab,{label:\"Hospital\",style:{minWidth:10}}),/*#__PURE__*/React.createElement(StyledTab,{label:\"Condition\",style:{minWidth:10}})))),/*#__PURE__*/React.createElement(TabPanel,{value:value,index:0,style:{width:\"100%\"}},/*#__PURE__*/React.createElement(Autocomplete,{options:specialties,onChange:handleSpecialtySearchKeyChange,getOptionLabel:function getOptionLabel(option){return option.specialty;},filterOptions:filterSpecialtyOptions,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"Search by specialty\",variant:\"outlined\"}));}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(GlobalLocation,null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{onClick:hadleSearch,variant:\"contained\",color:\"secondary\",size:\"md\",className:classes.search,startIcon:/*#__PURE__*/React.createElement(SearchIcon,null),fullWidth:true},\"Search\")),/*#__PURE__*/React.createElement(TabPanel,{value:value,index:1,style:{width:\"100%\"}},/*#__PURE__*/React.createElement(Autocomplete,{onChange:handleDoctorSearchKeyChange,options:docNames,getOptionLabel:function getOptionLabel(option){return option.name;},filterOptions:filterDocOptions,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"Search by doctor's name\",variant:\"outlined\"}));}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(GlobalLocation,null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{onClick:hadleSearch,variant:\"contained\",color:\"secondary\",size:\"md\",className:classes.search,startIcon:/*#__PURE__*/React.createElement(SearchIcon,null),fullWidth:true},\"Search\")),/*#__PURE__*/React.createElement(TabPanel,{value:value,index:2,style:{width:\"100%\"}},/*#__PURE__*/React.createElement(Autocomplete,{onChange:handleHospitalSearchKeyChange,options:hospNames,getOptionLabel:function getOptionLabel(option){return option.hospName;},filterOptions:filterHospOptions,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"Search by hospital's name\",variant:\"outlined\"}));}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(GlobalLocation,null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{onClick:hadleSearch,variant:\"contained\",color:\"secondary\",size:\"md\",className:classes.search,startIcon:/*#__PURE__*/React.createElement(SearchIcon,null),fullWidth:true},\"Search\")),/*#__PURE__*/React.createElement(TabPanel,{value:value,index:3,style:{width:\"100%\"}},/*#__PURE__*/React.createElement(Autocomplete,{onChange:handleConditionSearchKeyChange,options:conditions,getOptionLabel:function getOptionLabel(option){return option.condition;},filterOptions:filterConditionOptions,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"Search by medical condition\",variant:\"outlined\"}));}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(GlobalLocation,null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{onClick:hadleSearch,variant:\"contained\",color:\"secondary\",size:\"md\",className:classes.search,startIcon:/*#__PURE__*/React.createElement(SearchIcon,null),fullWidth:true},\"Search\")));}","map":{"version":3,"sources":["/Users/andychenhe/Desktop/may8-test/src/Components/GlobalSearchTabs.js"],"names":["React","makeStyles","withStyles","useState","useEffect","Hidden","Tabs","Tab","Typography","Box","TextField","Autocomplete","createFilterOptions","SearchIcon","Button","GlobalLocation","filterSpecialtyOptions","matchFrom","stringify","option","specialty","filterDocOptions","name","filterHospOptions","hospName","filterConditionOptions","condition","specialties","docNames","hospNames","conditions","TabPanel","props","children","value","index","other","useStyles","theme","verticalTabContainer","breakpoints","up","flexGrow","backgroundColor","palette","background","paper","display","tabs","borderRight","divider","color","search","textTransform","horizontalTabContainer","down","flexDirection","justifyContent","alignItems","StyledTabs","indicator","width","StyledTab","root","fontSize","opacity","GlobalSearchTabs","classes","setValue","handleSearchMethodChange","event","newValue","method","getSearchMethod","handleSpecialtySearchKeyChange","getKeyWords","handleDoctorSearchKeyChange","console","log","handleHospitalSearchKeyChange","handleConditionSearchKeyChange","hadleSearch","handleClose","startSearch","searchBegin","doMainSearch","HorizontalTabContainer","minWidth","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useState, useEffect } from 'react';\n\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\nimport GlobalLocation from \"./GlobalLocation\";\n\n//filter specialty\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.specialty,\n});\n\n//filter doctor\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.name,\n});\n\n//filter hospital\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.hospName,\n});\n\n//filter condition\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.condition,\n});\n\n// specialties options\nconst specialties = [\n  { specialty: \"Allergy and Immunology\" },\n  { specialty: \"Anesthesiology\" },\n  { specialty: \"Gastroenterology\" },\n];\n// doctor name options\nconst docNames = [\n  { name: \"Alex Leow\" },\n  { name: \"Alex Tan\" },\n  { name: \"Bryan Lee\" },\n];\n// hospital options\nconst hospNames = [\n  { hospName: \"Pantai Hospital Kuala Lumpur\" },\n  { hospName: \"Sunway Medical\" },\n];\n// Conditions options\nconst conditions = [{ condition: \"A\" }, { condition: \"B\" }];\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  //vertical tabs\n  verticalTabContainer: {\n    [theme.breakpoints.up(\"md\")]: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n    },\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    color: \"#003367\",\n  },\n\n  search: {\n    textTransform: \"none\",\n  },\n\n  // horizontal tabs\n  horizontalTabContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  },\n}));\n\n// for horizontal tabs - screen size < ipad\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#003367\",\n    fontSize: \"1em\",\n    \"&:focus\": {\n      opacity: 1,\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\n// Global search tabs + search by specialty/doc/hosp/condition\n// Used in GlobalSearch.js inside the dialog\nexport default function GlobalSearchTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n\n\n  const handleSearchMethodChange = (event, newValue) => {\n    let method = '';\n    if(newValue == 0){\n      method = 'Specialty';\n    } else if (newValue == 1){\n      method = 'Doctor';\n    } else if (newValue == 2){\n      method = 'Hospital';\n    } else {\n      method = 'Condition';\n    }\n    setValue(newValue);\n    props.getSearchMethod(method);\n  };\n\n  const handleSpecialtySearchKeyChange = (event, newValue) => {\n    \n    if(newValue){\n      props.getKeyWords(newValue.specialty);\n    }\n    \n  };\n\n  const handleDoctorSearchKeyChange = (event, newValue) => {\n    \n    if(newValue){\n      console.log(newValue);\n      props.getKeyWords(newValue.name);\n    }\n    \n  };\n\n  const handleHospitalSearchKeyChange = (event, newValue) => {\n    \n    if(newValue){\n      console.log(newValue);\n      props.getKeyWords(newValue.hospName);\n    }\n    \n  };\n\n  const handleConditionSearchKeyChange = (event, newValue) => {\n    \n    if(newValue){\n      console.log(newValue);\n      props.getKeyWords(newValue.condition);\n    }\n    \n  };\n\n  const hadleSearch = ()=>{\n    props.handleClose();\n    props.startSearch();\n  }\n\n  useEffect(() => {\n    console.log(props.searchBegin)\n    if(props.searchBegin){return props.doMainSearch(props);}\n    \n  });\n\n  return (\n    <div className={classes.verticalTabContainer}>\n      {/* vertical search tabs for screen > ipad size */}\n      <Hidden smDown>\n        <Tabs\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleSearchMethodChange}\n          aria-label=\"global search tabs\"\n          className={classes.tabs}\n        >\n          <Tab style={{ textTransform: \"none\" }} label=\"Specialty\" />\n          <Tab style={{ textTransform: \"none\" }} label=\"Doctor\" />\n          <Tab style={{ textTransform: \"none\" }} label=\"Hospital\" />\n          <Tab style={{ textTransform: \"none\" }} label=\"Condition\" />\n        </Tabs>\n      </Hidden>\n\n      {/* horizontal search tabs for screens < ipad size */}\n      <Hidden mdUp>\n        <div className={classes.HorizontalTabContainer}>\n          <StyledTabs\n            value={value}\n            onChange={handleSearchMethodChange}\n            aria-label=\"search tabs\"\n            centered\n          >\n            <StyledTab label=\"Specialty\" style={{ minWidth: 10 }} />\n            <StyledTab label=\"Doctor\" style={{ minWidth: 10 }} />\n            <StyledTab label=\"Hospital\" style={{ minWidth: 10 }} />\n            <StyledTab label=\"Condition\" style={{ minWidth: 10 }} />\n          </StyledTabs>\n        </div>\n      </Hidden>\n\n      {/* autocomplete: search by specialty */}\n      <TabPanel value={value} index={0} style={{ width: \"100%\" }}>\n        <Autocomplete\n          options={specialties}\n          onChange = {handleSpecialtySearchKeyChange}\n          getOptionLabel={(option) => option.specialty}\n          filterOptions={filterSpecialtyOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by specialty\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n          onClick = {hadleSearch}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n\n      {/* autocomplete: search by doctor's name */}\n      <TabPanel value={value} index={1} style={{ width: \"100%\" }}>\n        <Autocomplete\n          onChange = {handleDoctorSearchKeyChange}\n          options={docNames}\n          getOptionLabel={(option) => option.name}\n          filterOptions={filterDocOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by doctor's name\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n          onClick = {hadleSearch}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n\n      {/* autocomplete: search by hospital's name */}\n      <TabPanel value={value} index={2} style={{ width: \"100%\" }}>\n        <Autocomplete\n          onChange = {handleHospitalSearchKeyChange}\n          options={hospNames}\n          getOptionLabel={(option) => option.hospName}\n          filterOptions={filterHospOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by hospital's name\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n          onClick = {hadleSearch}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n\n      {/* autocomplete: search by condition */}\n      <TabPanel value={value} index={3} style={{ width: \"100%\" }}>\n        <Autocomplete\n          onChange = {handleConditionSearchKeyChange}\n          options={conditions}\n          getOptionLabel={(option) => option.condition}\n          filterOptions={filterConditionOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by medical condition\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n        <br></br>\n        <GlobalLocation />\n        <br></br>\n        <Button\n        onClick = {hadleSearch}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"md\"\n          className={classes.search}\n          startIcon={<SearchIcon />}\n          fullWidth\n        >\n          Search\n        </Button>\n      </TabPanel>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
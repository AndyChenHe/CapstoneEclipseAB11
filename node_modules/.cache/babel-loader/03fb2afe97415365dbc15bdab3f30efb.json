{"ast":null,"code":"import _defineProperty from\"/Users/andychenhe/Desktop/may8-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/andychenhe/Desktop/may8-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/andychenhe/Desktop/may8-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Box from\"@material-ui/core/Box\";import Typography from\"@material-ui/core/Typography\";import Button from\"@material-ui/core/Button\";import Switch from\"@material-ui/core/Switch\";import Grid from\"@material-ui/core/Grid\";import TextField from\"@material-ui/core/TextField\";import Select from\"@material-ui/core/Select\";import InputLabel from\"@material-ui/core/InputLabel\";import MenuItem from\"@material-ui/core/MenuItem\";import FormControl from\"@material-ui/core/FormControl\";import Autocomplete from\"@material-ui/lab/Autocomplete\";import Radio from\"@material-ui/core/Radio\";import RadioGroup from\"@material-ui/core/RadioGroup\";import FormControlLabel from\"@material-ui/core/FormControlLabel\";import FormLabel from\"@material-ui/core/FormLabel\";import Checkbox from\"@material-ui/core/Checkbox\";import Chip from\"@material-ui/core/Chip\";import Hidden from\"@material-ui/core/Hidden\";import ArrowBackIosIcon from\"@material-ui/icons/ArrowBackIos\";import{Link}from\"react-router-dom\";var useStyles=makeStyles(function(theme){return _objectSpread({},theme.account);});// only doctor edit profile (no account tabs on the side)\n// michelle改的/加的\nexport default function DocEditProfile(){var classes=useStyles();//publish switch\nvar _React$useState=React.useState({checked:false}),_React$useState2=_slicedToArray(_React$useState,2),publish=_React$useState2[0],setPublish=_React$useState2[1];var handlePublishChange=function handlePublishChange(event){setPublish(_objectSpread({},publish,_defineProperty({},event.target.name,event.target.checked)));};//gender\nvar _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),gender=_React$useState4[0],setGender=_React$useState4[1];var handleGenderChange=function handleGenderChange(event){setGender(event.target.value);};var male=gender.male,female=gender.female;//hospital type\nvar _React$useState5=React.useState(\"\"),_React$useState6=_slicedToArray(_React$useState5,2),hospType=_React$useState6[0],setHospType=_React$useState6[1];var handleHospTypeChange=function handleHospTypeChange(event){setHospType(event.target.value);};//appointment\nvar _React$useState7=React.useState({call:false,online:false,email:false,onsite:true}),_React$useState8=_slicedToArray(_React$useState7,2),appointment=_React$useState8[0],setAppointment=_React$useState8[1];var handleAppointmentChange=function handleAppointmentChange(event){setAppointment(_objectSpread({},appointment,_defineProperty({},event.target.name,event.target.checked)));};var call=appointment.call,online=appointment.online,email=appointment.email,onsite=appointment.onsite;//procedures\nvar _React$useState9=React.useState([]),_React$useState10=_slicedToArray(_React$useState9,2),procedure=_React$useState10[0],setProcedure=_React$useState10[1];//condition\nvar _React$useState11=React.useState([]),_React$useState12=_slicedToArray(_React$useState11,2),condition=_React$useState12[0],setCondition=_React$useState12[1];return/*#__PURE__*/React.createElement(\"a\",{id:\"profile\",className:classes.anchor},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:0},/*#__PURE__*/React.createElement(Grid,{item:true,xs:1}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:10,md:8},/*#__PURE__*/React.createElement(Box,{display:\"flex\",mt:4,mb:3,flexWrap:\"wrap\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Box,{flexGrow:1},/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",color:\"primary\"},/*#__PURE__*/React.createElement(Hidden,{mdUp:true},/*#__PURE__*/React.createElement(Link,{to:\"docaccount\"},/*#__PURE__*/React.createElement(ArrowBackIosIcon,{className:classes.backIcon,fontSize:\"small\"}))),/*#__PURE__*/React.createElement(\"strong\",null,\"Profile\"))),/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(Switch,{checked:publish.check,onChange:handlePublishChange,name:\"checked\"}),/*#__PURE__*/React.createElement(\"span\",null,\"Publish your profile\"))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Please fill out the profile to the best of your ability. The more complete your profile is, the more easily users will be able to find you.\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\" * Required\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Box,{display:\"flex\",mt:2,mb:3},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",color:\"primary\"},\"Personal Information\")),/*#__PURE__*/React.createElement(TextField,{fullWidth:true,required:true,label:\"First Name\",variant:\"outlined\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(TextField,{fullWidth:true,required:true,label:\"Last Name\",variant:\"outlined\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,\"Gender\"),/*#__PURE__*/React.createElement(Select,{value:gender,onChange:handleGenderChange,label:\"Gender\"},/*#__PURE__*/React.createElement(MenuItem,{value:male},\"Male\"),/*#__PURE__*/React.createElement(MenuItem,{value:female},\"Female\"))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(TextField,{fullWidth:true,required:true,label:\"Years of Practice\",variant:\"outlined\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",style:{textTransform:\"none\",float:\"right\"},size:\"large\"},\"Save\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Box,{display:\"flex\",mb:3},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",color:\"primary\"},\"Work Information\")),/*#__PURE__*/React.createElement(Autocomplete,{options:hospitals,getOptionLabel:function getOptionLabel(option){return option.hospName;},fullWidth:true,required:true,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({required:true},params,{label:\"Hospital Name\",variant:\"outlined\"}));}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\",required:true},/*#__PURE__*/React.createElement(FormLabel,{component:\"legend\"},\"Hospital Type\"),/*#__PURE__*/React.createElement(RadioGroup,{name:\"hospType\",value:hospType,onChange:handleHospTypeChange},/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(FormControlLabel,{value:\"public\",control:/*#__PURE__*/React.createElement(Radio,{required:true}),label:\"Public\",style:{marginRight:100}}),/*#__PURE__*/React.createElement(FormControlLabel,{value:\"private\",control:/*#__PURE__*/React.createElement(Radio,{required:true}),label:\"Private\"})))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\",fullWidth:true,style:{marginBottom:30}},/*#__PURE__*/React.createElement(FormLabel,{component:\"legend\",style:{marginBottom:20}},\"Work Phone Number\"),/*#__PURE__*/React.createElement(TextField,{required:true,fullWidth:true,label:\"Phone Number\",variant:\"outlined\"})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\",fullWidth:true},/*#__PURE__*/React.createElement(FormLabel,{component:\"legend\",style:{marginBottom:20}},\"Work Address\"),/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Buildling Unit/ Floor/ Block\",variant:\"outlined\"})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(TextField,{required:true,fullWidth:true,label:\"Street Name\",variant:\"outlined\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(TextField,{required:true,fullWidth:true,label:\"City\",variant:\"outlined\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Autocomplete,{fullWidth:true,options:states,getOptionLabel:function getOptionLabel(option){return option.state;},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({required:true},params,{label:\"State\",variant:\"outlined\"}));}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(TextField,{required:true,fullWidth:true,label:\"Postcode\",variant:\"outlined\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",style:{textTransform:\"none\",float:\"right\"},size:\"large\"},\"Save\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Box,{display:\"flex\",mt:2,mb:3},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",color:\"primary\"},\"Ways to Make Appointment\")),/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\",fullWidth:true},/*#__PURE__*/React.createElement(Box,{display:\"flex\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Box,{mr:2,mt:1},/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{checked:call,onChange:handleAppointmentChange,name:\"call\"}),label:\"Call\"})),/*#__PURE__*/React.createElement(Box,{flexGrow:1},/*#__PURE__*/React.createElement(TextField,{disabled:call===false?true:false,fullWidth:true,required:true,size:\"small\",label:\"Phone Number\",variant:\"outlined\"}))),/*#__PURE__*/React.createElement(Box,{display:\"flex\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Box,{mt:2},/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{checked:online,onChange:handleAppointmentChange,name:\"online\"}),label:\"Online\"})),/*#__PURE__*/React.createElement(Box,{flexGrow:1,mt:2},/*#__PURE__*/React.createElement(TextField,{disabled:online===false?true:false,fullWidth:true,required:true,size:\"small\",label:\"Link\",variant:\"outlined\"}))),/*#__PURE__*/React.createElement(Box,{display:\"flex\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Box,{mr:1,mt:2},/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{checked:email,onChange:handleAppointmentChange,name:\"email\"}),label:\"Email\"}),\" \"),/*#__PURE__*/React.createElement(Box,{flexGrow:1,mt:2},/*#__PURE__*/React.createElement(TextField,{disabled:email===false?true:false,fullWidth:true,required:true,size:\"small\",label:\"Email Address\",variant:\"outlined\"}))),/*#__PURE__*/React.createElement(Box,{mt:2},/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{checked:onsite,onChange:handleAppointmentChange,name:\"onsite\"}),label:\"On site\"}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",style:{textTransform:\"none\",float:\"right\"},size:\"large\"},\"Save\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Box,{display:\"flex\",mt:2,mb:3},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",color:\"primary\"},\"Expertise\")),/*#__PURE__*/React.createElement(Autocomplete,{fullWidth:true,required:true,options:specialties,getOptionLabel:function getOptionLabel(option){return option.specialty;},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({required:true},params,{label:\"Specialty\",variant:\"outlined\"}));}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(TextField,{fullWidth:true,required:true,label:\"Qualifications\",variant:\"outlined\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Autocomplete,{multiple:true,options:procedure,freeSolo:true,renderTags:function renderTags(value,getTagProps){return value.map(function(proc,index){return/*#__PURE__*/React.createElement(Chip,Object.assign({variant:\"outlined\",label:proc},getTagProps({index:index})));});},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({required:true},params,{variant:\"outlined\",label:\"Procedures\",helperText:\"Type and press 'enter' key to add a procedure\"}));}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Autocomplete,{multiple:true,options:condition,freeSolo:true,renderTags:function renderTags(value,getTagProps){return value.map(function(cond,index){return/*#__PURE__*/React.createElement(Chip,Object.assign({variant:\"outlined\",label:cond},getTagProps({index:index})));});},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({required:true},params,{variant:\"outlined\",label:\"Conditions\",helperText:\"Type and press 'enter' key to add a condition\"}));}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Autocomplete,{multiple:true,options:languages.map(function(option){return option.language;}),freeSolo:true,renderTags:function renderTags(value,getTagProps){return value.map(function(language,index){return/*#__PURE__*/React.createElement(Chip,Object.assign({variant:\"outlined\",label:language},getTagProps({index:index})));});},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({required:true},params,{variant:\"outlined\",label:\"Languages\",helperText:\"Add a language\"}));}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",style:{textTransform:\"none\",float:\"right\"},size:\"large\"},\"Save\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:1,md:3})));}var hospitals=[{hospName:\"Pantai Hospital Kuala Lumpur\"},{hospName:\"Sunway Medical Centre\"}];var states=[{state:\"Kuala Lumpur\"},{state:\"Selangor\"},{state:\"Johor\"},{state:\"Melaka\"},{state:\"Negeri Sembilan\"},{state:\"Pahang\"},{state:\"Perak\"},{state:\"Kelantan\"},{state:\"Terengganu\"},{state:\"Kedah\"},{state:\"Pulau Pinang\"},{state:\"Perlis\"},{state:\"Sabah\"},{state:\"Sarawak\"},{state:\"Labuan\"},{state:\"Putrajaya\"}];var specialties=[{specialty:\"Allergy and Immunology\"},{specialty:\"Anesthesiology\"},{specialty:\"Arthroplasty\"},{specialty:\"Allergy and Immunology\"},{specialty:\"Gastroenterology\"}];var languages=[{language:\"English\"},{language:\"Malay\"},{language:\"Mandarin\"},{language:\"Tamil\"}];","map":{"version":3,"sources":["/Users/andychenhe/Desktop/may8-test/src/Components/docAccount/DocEditProfile.js"],"names":["React","makeStyles","Box","Typography","Button","Switch","Grid","TextField","Select","InputLabel","MenuItem","FormControl","Autocomplete","Radio","RadioGroup","FormControlLabel","FormLabel","Checkbox","Chip","Hidden","ArrowBackIosIcon","Link","useStyles","theme","account","DocEditProfile","classes","useState","checked","publish","setPublish","handlePublishChange","event","target","name","gender","setGender","handleGenderChange","value","male","female","hospType","setHospType","handleHospTypeChange","call","online","email","onsite","appointment","setAppointment","handleAppointmentChange","procedure","setProcedure","condition","setCondition","anchor","backIcon","check","textTransform","float","hospitals","option","hospName","params","marginRight","marginBottom","states","state","specialties","specialty","getTagProps","map","proc","index","cond","languages","language"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\n\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.account,\n}));\n\n// only doctor edit profile (no account tabs on the side)\n// michelle改的/加的\nexport default function DocEditProfile() {\n  const classes = useStyles();\n\n  //publish switch\n  const [publish, setPublish] = React.useState({\n    checked: false,\n  });\n  const handlePublishChange = (event) => {\n    setPublish({ ...publish, [event.target.name]: event.target.checked });\n  };\n\n  //gender\n  const [gender, setGender] = React.useState(\"\");\n  const handleGenderChange = (event) => {\n    setGender(event.target.value);\n  };\n  const { male, female } = gender;\n\n  //hospital type\n  const [hospType, setHospType] = React.useState(\"\");\n  const handleHospTypeChange = (event) => {\n    setHospType(event.target.value);\n  };\n\n  //appointment\n  const [appointment, setAppointment] = React.useState({\n    call: false,\n    online: false,\n    email: false,\n    onsite: true,\n  });\n  const handleAppointmentChange = (event) => {\n    setAppointment({\n      ...appointment,\n      [event.target.name]: event.target.checked,\n    });\n  };\n  const { call, online, email, onsite } = appointment;\n\n  //procedures\n  const [procedure, setProcedure] = React.useState([]);\n\n  //condition\n  const [condition, setCondition] = React.useState([]);\n\n  return (\n    <a id=\"profile\" className={classes.anchor}>\n      <Grid container spacing={0}>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10} md={8}>\n          <Box display=\"flex\" mt={4} mb={3} flexWrap=\"wrap\" alignItems=\"center\">\n            <Box flexGrow={1}>\n              <Typography variant=\"h5\" color=\"primary\">\n                {/* Back button, 手机屏幕才会出现 */}\n                <Hidden mdUp>\n                  {/* <IconButton> */}\n                  <Link to=\"docaccount\">\n                    <ArrowBackIosIcon\n                      className={classes.backIcon}\n                      fontSize=\"small\"\n                    />\n                  </Link>\n                  {/* </IconButton> */}\n                </Hidden>\n                <strong>Profile</strong>\n              </Typography>\n            </Box>\n            {/* Publish/not publish switch */}\n            <Box>\n              <Switch\n                checked={publish.check}\n                onChange={handlePublishChange}\n                name=\"checked\"\n              />\n              <span>Publish your profile</span>\n            </Box>\n          </Box>\n          <br></br>\n          <Typography variant=\"body1\">\n            Please fill out the profile to the best of your ability. The more\n            complete your profile is, the more easily users will be able to find\n            you.<br></br>\n            <br></br> * Required\n          </Typography>\n          <br></br>\n          <br></br>\n          <Box display=\"flex\" mt={2} mb={3}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Personal Information\n            </Typography>\n          </Box>\n          {/* First name */}\n          <TextField fullWidth required label=\"First Name\" variant=\"outlined\" />\n          <br></br>\n          <br></br>\n          {/* Last name */}\n          <TextField fullWidth required label=\"Last Name\" variant=\"outlined\" />\n          <br></br>\n          <br></br>\n          {/* Gender */}\n          <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel>Gender</InputLabel>\n            <Select value={gender} onChange={handleGenderChange} label=\"Gender\">\n              <MenuItem value={male}>Male</MenuItem>\n              <MenuItem value={female}>Female</MenuItem>\n            </Select>\n          </FormControl>\n          <br></br>\n          <br></br>\n          {/* Years of prac */}\n          <TextField\n            fullWidth\n            required\n            label=\"Years of Practice\"\n            variant=\"outlined\"\n          />\n          <br></br>\n          <br></br>\n          {/* Save button */}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ textTransform: \"none\", float: \"right\" }}\n            size=\"large\"\n          >\n            Save\n          </Button>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Box display=\"flex\" mb={3}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Work Information\n            </Typography>\n          </Box>\n          {/* Hospital name */}\n          <Autocomplete\n            options={hospitals}\n            getOptionLabel={(option) => option.hospName}\n            fullWidth\n            required\n            renderInput={(params) => (\n              <TextField\n                required\n                {...params}\n                label=\"Hospital Name\"\n                variant=\"outlined\"\n              />\n            )}\n          />\n          <br></br>\n          <br></br>\n          {/* Hospital type */}\n          <FormControl component=\"fieldset\" required>\n            <FormLabel component=\"legend\">Hospital Type</FormLabel>\n            <RadioGroup\n              name=\"hospType\"\n              value={hospType}\n              onChange={handleHospTypeChange}\n            >\n              <Box>\n                <FormControlLabel\n                  value=\"public\"\n                  control={<Radio required />}\n                  label=\"Public\"\n                  style={{ marginRight: 100 }}\n                />\n                <FormControlLabel\n                  value=\"private\"\n                  control={<Radio required />}\n                  label=\"Private\"\n                />\n              </Box>\n            </RadioGroup>\n          </FormControl>\n          <br></br>\n          <br></br>\n          {/* Work phone number */}\n          <FormControl\n            component=\"fieldset\"\n            fullWidth\n            style={{ marginBottom: 30 }}\n          >\n            <FormLabel component=\"legend\" style={{ marginBottom: 20 }}>\n              Work Phone Number\n            </FormLabel>\n            <TextField\n              required\n              fullWidth\n              label=\"Phone Number\"\n              variant=\"outlined\"\n            />\n          </FormControl>\n          <br></br>\n          {/* Work address */}\n          <FormControl component=\"fieldset\" fullWidth>\n            <FormLabel component=\"legend\" style={{ marginBottom: 20 }}>\n              Work Address\n            </FormLabel>\n            <TextField\n              fullWidth\n              label=\"Buildling Unit/ Floor/ Block\"\n              variant=\"outlined\"\n            />\n          </FormControl>\n          <br></br>\n          <br></br>\n          <TextField\n            required\n            fullWidth\n            label=\"Street Name\"\n            variant=\"outlined\"\n          />\n          <br></br>\n          <br></br>\n          <TextField required fullWidth label=\"City\" variant=\"outlined\" />\n          <br></br>\n          <br></br>\n          <Autocomplete\n            fullWidth\n            options={states}\n            getOptionLabel={(option) => option.state}\n            renderInput={(params) => (\n              <TextField\n                required\n                {...params}\n                label=\"State\"\n                variant=\"outlined\"\n              />\n            )}\n          />\n          <br></br>\n          <TextField required fullWidth label=\"Postcode\" variant=\"outlined\" />\n          <br></br>\n          <br></br>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ textTransform: \"none\", float: \"right\" }}\n            size=\"large\"\n          >\n            Save\n          </Button>\n          <br></br>\n          <br></br>\n          <br></br>\n          {/* Ways to make appointment */}\n          <Box display=\"flex\" mt={2} mb={3}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Ways to Make Appointment\n            </Typography>\n          </Box>\n          <FormControl component=\"fieldset\" fullWidth>\n            <Box display=\"flex\" alignItems=\"center\">\n              {/* Call */}\n              <Box mr={2} mt={1}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={call}\n                      onChange={handleAppointmentChange}\n                      name=\"call\"\n                    />\n                  }\n                  label=\"Call\"\n                />\n              </Box>\n              <Box flexGrow={1}>\n                <TextField\n                  disabled={call === false ? true : false}\n                  fullWidth\n                  required\n                  size=\"small\"\n                  label=\"Phone Number\"\n                  variant=\"outlined\"\n                />\n              </Box>\n            </Box>\n            {/* Online */}\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box mt={2}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={online}\n                      onChange={handleAppointmentChange}\n                      name=\"online\"\n                    />\n                  }\n                  label=\"Online\"\n                />\n              </Box>\n              <Box flexGrow={1} mt={2}>\n                <TextField\n                  disabled={online === false ? true : false}\n                  fullWidth\n                  required\n                  size=\"small\"\n                  label=\"Link\"\n                  variant=\"outlined\"\n                />\n              </Box>\n            </Box>\n            {/* Email */}\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box mr={1} mt={2}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={email}\n                      onChange={handleAppointmentChange}\n                      name=\"email\"\n                    />\n                  }\n                  label=\"Email\"\n                />{\" \"}\n              </Box>\n              <Box flexGrow={1} mt={2}>\n                <TextField\n                  disabled={email === false ? true : false}\n                  fullWidth\n                  required\n                  size=\"small\"\n                  label=\"Email Address\"\n                  variant=\"outlined\"\n                />\n              </Box>\n            </Box>\n            {/* On site */}\n            <Box mt={2}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={onsite}\n                    onChange={handleAppointmentChange}\n                    name=\"onsite\"\n                  />\n                }\n                label=\"On site\"\n              />\n            </Box>\n          </FormControl>\n          <br></br>\n          <br></br>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ textTransform: \"none\", float: \"right\" }}\n            size=\"large\"\n          >\n            Save\n          </Button>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Box display=\"flex\" mt={2} mb={3}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Expertise\n            </Typography>\n          </Box>\n          {/* Specialty */}\n          <Autocomplete\n            fullWidth\n            required\n            options={specialties}\n            getOptionLabel={(option) => option.specialty}\n            renderInput={(params) => (\n              <TextField\n                required\n                {...params}\n                label=\"Specialty\"\n                variant=\"outlined\"\n              />\n            )}\n          />\n          <br></br>\n          {/* Qualifications */}\n          <TextField\n            fullWidth\n            required\n            label=\"Qualifications\"\n            variant=\"outlined\"\n          />\n          <br></br>\n          <br></br>\n          {/* Add procedure */}\n          <Autocomplete\n            multiple\n            options={procedure}\n            freeSolo\n            renderTags={(value, getTagProps) =>\n              value.map((proc, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  label={proc}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                required\n                {...params}\n                variant=\"outlined\"\n                label=\"Procedures\"\n                helperText=\"Type and press 'enter' key to add a procedure\"\n              />\n            )}\n          />\n          <br></br>\n          {/* Add condition */}\n          <Autocomplete\n            multiple\n            options={condition}\n            freeSolo\n            renderTags={(value, getTagProps) =>\n              value.map((cond, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  label={cond}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                required\n                {...params}\n                variant=\"outlined\"\n                label=\"Conditions\"\n                helperText=\"Type and press 'enter' key to add a condition\"\n              />\n            )}\n          />\n          <br></br>\n          {/* Languages */}\n          <Autocomplete\n            multiple\n            options={languages.map((option) => option.language)}\n            freeSolo\n            renderTags={(value, getTagProps) =>\n              value.map((language, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  label={language}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                required\n                {...params}\n                variant=\"outlined\"\n                label=\"Languages\"\n                helperText=\"Add a language\"\n              />\n            )}\n          />\n          <br></br>\n          <br></br>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ textTransform: \"none\", float: \"right\" }}\n            size=\"large\"\n          >\n            Save\n          </Button>\n          <br></br>\n          <br></br>\n          <br></br>\n        </Grid>\n        <Grid item xs={1} md={3}></Grid>\n      </Grid>\n    </a>\n  );\n}\n\nconst hospitals = [\n  { hospName: \"Pantai Hospital Kuala Lumpur\" },\n  { hospName: \"Sunway Medical Centre\" },\n];\n\nconst states = [\n  { state: \"Kuala Lumpur\" },\n  { state: \"Selangor\" },\n  { state: \"Johor\" },\n  { state: \"Melaka\" },\n  { state: \"Negeri Sembilan\" },\n  { state: \"Pahang\" },\n  { state: \"Perak\" },\n  { state: \"Kelantan\" },\n  { state: \"Terengganu\" },\n  { state: \"Kedah\" },\n  { state: \"Pulau Pinang\" },\n  { state: \"Perlis\" },\n  { state: \"Sabah\" },\n  { state: \"Sarawak\" },\n  { state: \"Labuan\" },\n  { state: \"Putrajaya\" },\n];\n\nconst specialties = [\n  { specialty: \"Allergy and Immunology\" },\n  { specialty: \"Anesthesiology\" },\n  { specialty: \"Arthroplasty\" },\n  { specialty: \"Allergy and Immunology\" },\n  { specialty: \"Gastroenterology\" },\n];\n\nconst languages = [\n  { language: \"English\" },\n  { language: \"Malay\" },\n  { language: \"Mandarin\" },\n  { language: \"Tamil\" },\n];\n"]},"metadata":{},"sourceType":"module"}
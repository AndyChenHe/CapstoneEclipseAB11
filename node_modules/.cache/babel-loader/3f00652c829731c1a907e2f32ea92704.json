{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Downloads/may10_michelle/src/Components/docAccount/LikeHistory.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport DocCard from \"../../Components/results/DocCard\";\nimport HospCard from \"../../Components/results/HospitalCard\";\nimport { getAllSearchData } from \"../../redux/actions/dataActions\";\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst useStyles = makeStyles(theme => ({ ...theme.account\n}));\n\nfunction LikeHistory(props) {\n  const classes = useStyles();\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0);\n  const [likeHistory, setLikeHistory] = React.useState({\n    doctors: [],\n    hospitals: []\n  }); // only gets called once on initial render to set state firebase data\n\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredData().then(() => {\n      let docList;\n      let hospList;\n      console.log(props.searchData); // if (!res.likeHistory) {\n      //   docList = [];\n      //   hospList = [];\n      // } else {\n      //   docList = res.likeHistory.doctors ? res.likeHistory.doctors : [];\n      //   hospList = res.likeHistory.hospitals ? res.likeHistory.hospitals : [];\n      // }\n      // setLikeHistory({\n      //   doctors: docList,\n      //   hospitals: hospList\n      // })\n\n      setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // wait for returned props from firebase to be ready\n\n\n  let getStoredData = async () => {\n    const list = {\n      specialtyList: [\"gastro\", \"allergy\"]\n    };\n  }; //   axios.get(proxyurl+\"https://us-central1-mydoc-f3cd9.cloudfunctions.net/api/getallsearchdata\", {\n  //     params: {\n  //       specialtyList: [\"gastro\", \"allergy\"]\n  //     }\n  //   }).then((res) => {\n  //     console.log(res)\n  //     // await props.getAllSearchData();\n  //   })\n  //   // await props.getAllSearchData(list);\n  // }\n  // let doctorListCards = likeHistory.doctors.map((eachDoctor) => {\n  //   return <DocCard \n  // } )\n\n\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // axios.get(proxyurl+'https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/test2', {\n  //   params:{\n  //     specialtyList:['gastro']\n  //   }\n  // }).then((res)=>{\n  //   console.log(res);\n  // })\n\n  return /*#__PURE__*/React.createElement(\"a\", {\n    id: \"likehistory\",\n    className: classes.anchor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 4,\n    mb: 3,\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    flexDirection: \"row\",\n    mb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"docaccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n    className: classes.backIcon,\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Like History\"))), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: display,\n    exclusive: true,\n    onChange: handleDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"doctor\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, \"Doctor\")), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"hospital\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, \"Hospital\")))), \" \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }), display === \"doctor\" ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"doccard\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"hospcard\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  })));\n}\n\nLikeHistory.propTypes = {\n  // updateVerification: PropTypes.func.isRequired,\n  getAllSearchData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  storedCredentials: state.user.credentials,\n  searchData: state.data.searchData\n});\n\nconst mapActionsToProps = {\n  // updateVerification,\n  getAllSearchData\n};\nexport default connect(mapStateToProps, mapActionsToProps)(LikeHistory);","map":{"version":3,"sources":["/Users/Michelle/Downloads/may10_michelle/src/Components/docAccount/LikeHistory.js"],"names":["React","Fragment","useEffect","makeStyles","Box","Typography","Grid","Hidden","ArrowBackIosIcon","ToggleButton","ToggleButtonGroup","Link","connect","PropTypes","axios","DocCard","HospCard","getAllSearchData","proxyurl","useStyles","theme","account","LikeHistory","props","classes","display","setDisplay","useState","handleDisplay","event","newDisplay","renderCount","setRenderCount","likeHistory","setLikeHistory","doctors","hospitals","displayStoredData","getStoredData","then","docList","hospList","console","log","searchData","catch","error","list","specialtyList","anchor","backIcon","textTransform","propTypes","func","isRequired","mapStateToProps","state","storedCredentials","user","credentials","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nimport DocCard from \"../../Components/results/DocCard\";\nimport HospCard from \"../../Components/results/HospitalCard\";\n\nimport { getAllSearchData } from \"../../redux/actions/dataActions\";\n\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.account,\n}));\n\nfunction LikeHistory(props) {\n  const classes = useStyles();\n\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0);\n\n  const [likeHistory, setLikeHistory] = React.useState({\n    doctors:[],\n    hospitals:[]\n  })\n\n  // only gets called once on initial render to set state firebase data\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredData()\n      .then(() => {\n        let docList;\n        let hospList;\n        console.log(props.searchData)\n        \n        // if (!res.likeHistory) {\n        //   docList = [];\n        //   hospList = [];\n        // } else {\n        //   docList = res.likeHistory.doctors ? res.likeHistory.doctors : [];\n        //   hospList = res.likeHistory.hospitals ? res.likeHistory.hospitals : [];\n        // }\n\n        // setLikeHistory({\n        //   doctors: docList,\n        //   hospitals: hospList\n        // })\n        setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  // wait for returned props from firebase to be ready\n  let getStoredData = async () => {\n    const list = {\n      specialtyList: [\"gastro\", \"allergy\"]\n    }\n  }\n\n\n  //   axios.get(proxyurl+\"https://us-central1-mydoc-f3cd9.cloudfunctions.net/api/getallsearchdata\", {\n  //     params: {\n  //       specialtyList: [\"gastro\", \"allergy\"]\n  //     }\n  //   }).then((res) => {\n  //     console.log(res)\n  //     // await props.getAllSearchData();\n  //   })\n\n  //   // await props.getAllSearchData(list);\n\n  // }\n\n  // let doctorListCards = likeHistory.doctors.map((eachDoctor) => {\n  //   return <DocCard \n  // } )\n\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      // axios.get(proxyurl+'https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/test2', {\n      //   params:{\n      //     specialtyList:['gastro']\n      //   }\n      // }).then((res)=>{\n      //   console.log(res);\n      // })\n\n\n\n  return (\n    <a id=\"likehistory\" className={classes.anchor}>\n      <Grid container spacing={0}>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10} md={8}>\n          <Box display=\"flex\" mt={4} mb={3} flexWrap=\"wrap\" alignItems=\"center\">\n            <Box flexGrow={1} flexDirection=\"row\" mb={1}>\n              <Typography variant=\"h5\" color=\"primary\">\n                {/* Back button, 手机屏幕才会出现 */}\n                <Hidden mdUp>\n                  {/* <IconButton> */}\n                  <Link to=\"docaccount\">\n                    <ArrowBackIosIcon\n                      className={classes.backIcon}\n                      fontSize=\"small\"\n                    />\n                  </Link>\n                  {/* </IconButton> */}\n                </Hidden>\n                <strong>Like History</strong>\n              </Typography>\n            </Box>\n            {/* Display by Doctor/Hospital buttons */}\n            <Box>\n              <ToggleButtonGroup\n                value={display}\n                exclusive\n                onChange={handleDisplay}\n              >\n                <ToggleButton value=\"doctor\" color=\"primary\">\n                  <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                    Doctor\n                  </Typography>\n                </ToggleButton>\n                <ToggleButton value=\"hospital\">\n                  <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                    Hospital\n                  </Typography>\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Box>{\" \"}\n          </Box>\n\n          <br></br>\n          <br></br>\n\n          {/* if user clicks on display by 'doctor', then render doctor cards */}\n          {display === \"doctor\" ? (\n            <Fragment>doccard</Fragment>\n          ) : (\n            <Fragment>hospcard</Fragment>\n          )}\n        </Grid>\n        <Grid item xs={1} md={3}></Grid>\n      </Grid>\n    </a>\n  );\n}\n\n\n\n\n\n\n\nLikeHistory.propTypes = {\n  // updateVerification: PropTypes.func.isRequired,\n  getAllSearchData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  storedCredentials: state.user.credentials,\n  searchData: state.data.searchData\n});\n\nconst mapActionsToProps = {\n  // updateVerification,\n  getAllSearchData\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(LikeHistory);"]},"metadata":{},"sourceType":"module"}
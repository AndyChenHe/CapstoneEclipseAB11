{"ast":null,"code":"var _jsxFileName = \"/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/pages/login.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\"; //MUI stuff\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Bg from \"../images/doctors-heart.png\"; //6:31\n//redux stuff\n\nimport { connect } from \"react-redux\"; //bring in action\n\nimport { loginUser } from \"../redux/actions/userActions\";\nimport AuthRoute from \"../util/AuthRoute\";\n\nconst styles = theme => ({ ...theme.auth,\n  bg: {\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\"\n    }\n  },\n  loginGrid: {\n    [theme.breakpoints.down(\"md\")]: {\n      marginLeft: 30,\n      marginRight: 30\n    }\n  },\n  loginForm: {\n    [theme.breakpoints.only(\"sm\")]: {\n      marginLeft: 120\n    }\n  },\n  pageTitle: {\n    [theme.breakpoints.only(\"sm\")]: {\n      marginTop: 20,\n      marginBottom: 30,\n      marginLeft: 120\n    }\n  }\n});\n\nclass login extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      }; //6:31\n\n      this.props.loginUser(userData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  } //6:40\n\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.UI.errors) {\n      return {\n        errors: props.UI.errors\n      };\n    }\n\n    return null;\n  }\n  /*componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n  }*/\n\n\n  render() {\n    //destructuring\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: true,\n      className: classes.loginGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Log in\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      className: classes.loginForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email address\",\n      className: classes.textField,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textField,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.customError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.button,\n      fullWidth: true,\n      size: \"large\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Log in\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"Don't have an account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      style: {\n        color: \"#003367\"\n      },\n      className: classes.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, \"Sign up\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: Bg,\n      alt: \"doctor-hearts\",\n      className: classes.bg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n}; //export default withStyles(styles)(login);\n//6:32\n//take global state and take what we need (right now we have user, data, ui), only need user and ui\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n}); //which action we are gonna use\n\n\nconst mapActionsToProps = {\n  loginUser\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));","map":{"version":3,"sources":["/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/pages/login.js"],"names":["React","Component","Link","withStyles","PropTypes","Grid","Typography","TextField","Button","CircularProgress","Bg","connect","loginUser","AuthRoute","styles","theme","auth","bg","breakpoints","down","display","loginGrid","marginLeft","marginRight","loginForm","only","pageTitle","marginTop","marginBottom","login","constructor","handleSubmit","event","preventDefault","userData","email","state","password","props","history","handleChange","setState","target","name","value","errors","getDerivedStateFromProps","UI","render","classes","loading","form","textField","general","customError","button","progress","color","link","propTypes","object","isRequired","func","user","mapStateToProps","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\n\n//MUI stuff\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport Bg from \"../images/doctors-heart.png\";\n\n//6:31\n//redux stuff\nimport { connect } from \"react-redux\";\n//bring in action\nimport { loginUser } from \"../redux/actions/userActions\";\nimport AuthRoute from \"../util/AuthRoute\";\n\nconst styles = (theme) => ({\n  ...theme.auth,\n  bg: {\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  loginGrid: {\n    [theme.breakpoints.down(\"md\")]: {\n      marginLeft: 30,\n      marginRight: 30,\n    },\n  },\n  loginForm: {\n    [theme.breakpoints.only(\"sm\")]: {\n      marginLeft: 120,\n    },\n  },\n\n  pageTitle: {\n    [theme.breakpoints.only(\"sm\")]: {\n      marginTop: 20,\n      marginBottom: 30,\n      marginLeft: 120,\n    },\n  },\n});\n\nclass login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n\n  //6:40\n  static getDerivedStateFromProps(props, state) {\n    if (props.UI.errors) {\n      return {\n        errors: props.UI.errors,\n      };\n    }\n    return null;\n  }\n  /*componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n  }*/\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n    //6:31\n    this.props.loginUser(userData, this.props.history);\n  };\n\n  //5:30\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    //destructuring\n    const {\n      classes,\n      UI: { loading },\n    } = this.props;\n    const { errors } = this.state;\n    return (\n      <Grid container className={classes.form}>\n        <Grid item md />\n        <Grid item md className={classes.loginGrid}>\n          <Typography className={classes.pageTitle}>Log in</Typography>\n          <form\n            noValidate\n            onSubmit={this.handleSubmit}\n            className={classes.loginForm}\n          >\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              label=\"Email address\"\n              className={classes.textField}\n              helperText={errors.email}\n              error={errors.email ? true : false}\n              value={this.state.email}\n              onChange={this.handleChange}\n              fullWidth\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              className={classes.textField}\n              helperText={errors.password}\n              error={errors.password ? true : false}\n              value={this.state.password}\n              onChange={this.handleChange}\n              fullWidth\n              variant=\"outlined\"\n            />\n            {errors.general && (\n              <Typography variant=\"body2\" className={classes.customError}>\n                {errors.general}\n              </Typography>\n            )}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              fullWidth\n              size=\"large\"\n              disabled={loading}\n            >\n              Log in\n              {loading && (\n                <CircularProgress\n                  size={30}\n                  className={classes.progress}\n                  color=\"secondary\"\n                />\n              )}\n            </Button>\n\n            <Typography variant=\"body2\">\n              Don't have an account?{\" \"}\n              <Link\n                to=\"/signup\"\n                style={{ color: \"#003367\" }}\n                className={classes.link}\n              >\n                Sign up\n              </Link>\n            </Typography>\n          </form>\n        </Grid>\n\n        <Grid item md />\n        <img src={Bg} alt=\"doctor-hearts\" className={classes.bg} />\n      </Grid>\n    );\n  }\n}\n\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\n//export default withStyles(styles)(login);\n\n//6:32\n//take global state and take what we need (right now we have user, data, ui), only need user and ui\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\n//which action we are gonna use\nconst mapActionsToProps = {\n  loginUser,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(login));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/pages/login.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\"; // material ui\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\"; // Doctor heart background\n\nimport Bg from \"../img/login/doctors-heart.png\"; //redux\n\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/userActions\";\nimport store from \"../redux/store\";\nimport { SET_AUTHENTICATED } from \"../redux/types\";\nimport Navbar from \"../Components/Navbar\";\nimport CovidAlert from \"../Components/Alert\"; // material ui style\n\nconst styles = theme => ({ ...theme.auth,\n  bg: {\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\"\n    },\n    width: \"300px\",\n    height: \"300px\",\n    position: \"fixed\",\n    margin: 0,\n    padding: 0,\n    right: -120,\n    bottom: 0\n  },\n  loginGrid: {\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 30,\n      marginRight: 30\n    }\n  },\n  covidBox: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 40\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 64\n    }\n  }\n}); // Login page\n\n\nclass login extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.UI.errors) {\n      return {\n        errors: props.UI.errors\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate() {\n    const token = localStorage.FBIdToken;\n\n    if (token) {\n      store.dispatch({\n        type: SET_AUTHENTICATED\n      });\n      axios.defaults.headers.common[\"Authorization\"] = token;\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      mt: 8,\n      className: classes.covidBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CovidAlert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: true,\n      className: classes.loginGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"Log in\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email address\",\n      className: classes.textField,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textField,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.customError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.button,\n      fullWidth: true,\n      size: \"large\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, \"Log in\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, \"Don't have an account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      style: {\n        color: \"#003367\"\n      },\n      className: classes.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, \"Sign up\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: Bg,\n      alt: \"doctor-hearts\",\n      className: classes.bg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(withStyles(styles)(login));","map":{"version":3,"sources":["/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/pages/login.js"],"names":["React","Component","Link","PropTypes","axios","withStyles","Grid","Typography","TextField","Button","CircularProgress","Box","Bg","connect","loginUser","store","SET_AUTHENTICATED","Navbar","CovidAlert","styles","theme","auth","bg","breakpoints","down","display","width","height","position","margin","padding","right","bottom","loginGrid","marginLeft","marginRight","covidBox","marginTop","login","constructor","handleSubmit","event","preventDefault","userData","email","state","password","props","history","handleChange","setState","target","name","value","errors","getDerivedStateFromProps","UI","componentDidUpdate","token","localStorage","FBIdToken","dispatch","type","defaults","headers","common","render","classes","loading","form","pageTitle","textField","general","customError","button","progress","color","link","propTypes","object","isRequired","func","user","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\n// material ui\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\n// Doctor heart background\nimport Bg from \"../img/login/doctors-heart.png\";\n\n//redux\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/userActions\";\nimport store from \"../redux/store\";\nimport { SET_AUTHENTICATED } from \"../redux/types\";\n\nimport Navbar from \"../Components/Navbar\";\nimport CovidAlert from \"../Components/Alert\";\n\n// material ui style\nconst styles = (theme) => ({\n  ...theme.auth,\n  bg: {\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n    width: \"300px\",\n    height: \"300px\",\n    position: \"fixed\",\n    margin: 0,\n    padding: 0,\n    right: -120,\n    bottom: 0,\n  },\n\n  loginGrid: {\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 30,\n      marginRight: 30,\n    },\n  },\n\n  covidBox: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 40,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 64,\n    },\n  },\n});\n\n// Login page\nclass login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.UI.errors) {\n      return {\n        errors: props.UI.errors,\n      };\n    }\n    return null;\n  }\n\n  componentDidUpdate() {\n    const token = localStorage.FBIdToken;\n    if (token) {\n      store.dispatch({ type: SET_AUTHENTICATED });\n      axios.defaults.headers.common[\"Authorization\"] = token;\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n    this.props.loginUser(userData, this.props.history);\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    const {\n      classes,\n      UI: { loading },\n    } = this.props;\n    const { errors } = this.state;\n    return (\n      <div>\n        <Navbar />\n        <Box mt={8} className={classes.covidBox}>\n          <CovidAlert />\n        </Box>\n\n        <Grid container className={classes.form}>\n          <Grid item md />\n          <Grid item md className={classes.loginGrid}>\n            <Typography className={classes.pageTitle}>Log in</Typography>\n            <form noValidate onSubmit={this.handleSubmit}>\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                label=\"Email address\"\n                className={classes.textField}\n                helperText={errors.email}\n                error={errors.email ? true : false}\n                value={this.state.email}\n                onChange={this.handleChange}\n                fullWidth\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                className={classes.textField}\n                helperText={errors.password}\n                error={errors.password ? true : false}\n                value={this.state.password}\n                onChange={this.handleChange}\n                fullWidth\n                variant=\"outlined\"\n              />\n              {errors.general && (\n                <Typography variant=\"body2\" className={classes.customError}>\n                  {errors.general}\n                </Typography>\n              )}\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                fullWidth\n                size=\"large\"\n                disabled={loading}\n              >\n                Log in\n                {loading && (\n                  <CircularProgress\n                    size={30}\n                    className={classes.progress}\n                    color=\"secondary\"\n                  />\n                )}\n              </Button>\n\n              <Typography variant=\"body2\">\n                Don't have an account?{\" \"}\n                <Link\n                  to=\"/signup\"\n                  style={{ color: \"#003367\" }}\n                  className={classes.link}\n                >\n                  Sign up\n                </Link>\n              </Typography>\n            </form>\n          </Grid>\n          <Grid item md />\n          <img src={Bg} alt=\"doctor-hearts\" className={classes.bg} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { loginUser })(\n  withStyles(styles)(login)\n);\n"]},"metadata":{},"sourceType":"module"}
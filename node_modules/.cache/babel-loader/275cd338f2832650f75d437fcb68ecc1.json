{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/may10_michelle 2/src/Components/profile/DocInfo.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\"; //icons\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { changeDocLikeStatus, changeDocSaveStatus, sendReportedDoctors } from \"../../redux/actions/userActions\";\nimport { updateDoctorLikes, report } from \"../../redux/actions/dataActions\"; //images\n\nimport docImg from \"../../img/results/docAlex.png\"; //components\n\nimport CovidAlert from \"../Alert\";\nimport DocTags from \"./DocTags\";\nconst useStyles = makeStyles(theme => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  //return to doctors button\n  returnBox: {\n    marginLeft: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 20\n    }\n  },\n  //doctor image\n  img: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"contain\"\n  },\n  profileGrid: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\"\n    }\n  },\n  reportButton: {\n    marginRight: \"1rem\"\n  }\n})); //for Doc image + basic info + likes\n//edit tags section is imported from DocTags.js\n\nfunction DocInfo(props) {\n  const classes = useStyles();\n\n  const backToRes = () => {\n    console.log(props.backTo);\n\n    if (props.history != null) {\n      if (props.backTo == \"resultsPage\") {\n        props.history.push(\"/results\");\n      } else if (props.backTo == \"hospprofile\") {\n        props.history.push(\"/hospprofile\");\n      }\n    }\n  };\n\n  const authenticated = props.authenticated;\n  const [renderCount, setRenderCount] = React.useState(0);\n  const [likeSaveInfo, setState] = React.useState({\n    // like functionality\n    hasLiked: false,\n    likedList: [],\n    numLikes: 0,\n    // save functionality\n    hasSaved: false,\n    savedList: [],\n    // report functionality\n    reportedList: [],\n    numReports: 0,\n    reportReasonsList: [],\n    oneReason: \"\"\n  }); // 弹窗去signin/signup如果要report没有login\n\n  const [loginOpen, setLoginOpen] = React.useState(false); // only get called once in the first render\n\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    getStoredData().then(res => {\n      // like\n      let listOfLikes;\n      let liked = false; // if the user has never liked any doctors\n\n      if (!res[1].likeHistory) {\n        listOfLikes = [];\n      } else {\n        if (res[1].likeHistory.doctors) {\n          listOfLikes = res[1].likeHistory.doctors; // if the user has liked this particular doctor before\n\n          const index = res[1].likeHistory.doctors.findIndex(doctor => doctor.username == \"verify\");\n\n          if (index != -1) {\n            liked = true;\n          }\n        } else {\n          listOfLikes = [];\n        }\n      } // save\n\n\n      let listOfSaves;\n      let saved = false; // if the user has never saved any doctors\n\n      if (!res[1].saved) {\n        listOfSaves = [];\n      } else {\n        if (res[1].saved.doctors) {\n          listOfSaves = res[1].saved.doctors; // if the user has saved this particular doctor before\n\n          const index = res[1].saved.doctors.findIndex(doctor => doctor.username == \"verify\");\n\n          if (index != -1) {\n            saved = true;\n          }\n        } else {\n          listOfSaves = [];\n        }\n      }\n\n      ;\n      setState({\n        hasLiked: liked,\n        likedList: listOfLikes,\n        numLikes: res[0].likes ? res[0].likes : 0,\n        hasSaved: saved,\n        savedList: listOfSaves,\n        reportedList: res[1].reportedDoctors ? res[1].reportedDoctors : \"\",\n        numReports: res[0].report ? res[0].report.reportCount : 0,\n        reportReasonsList: res[0].report ? res[0].report.reportReasons : \"\",\n        oneReason: \"\"\n      });\n      setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // wait for returned props from firebase to be ready\n\n\n  let getStoredData = async () => {\n    let [storedSearchInfo, userStoredCredentials] = await Promise.all([props.searchInfo, props.storedCredentials]);\n    return [storedSearchInfo, userStoredCredentials];\n  }; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LIKE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // when the like button is pressed\n\n\n  const toggleLikeUnlike = () => {\n    // the user has liked this doctor before\n    if (likeSaveInfo.hasLiked) {\n      let likedListCopy = likeSaveInfo.likedList;\n      let index = likedListCopy.findIndex(doctor => doctor.username == \"verify\"); // remove this doctor from the user like list\n\n      likedListCopy.splice(index, 1);\n      setState(prevState => ({ ...likeSaveInfo,\n        likedList: likedListCopy,\n        // change to unlike\n        hasLiked: false,\n        numLikes: prevState.numLikes - 1\n      }));\n    } else {\n      // the newly liked doctor's information to be added to the user's liked doctor list\n      const newDocInfo = {\n        hospital: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        languages: [\"English\", \"Mandarin\"],\n        likes: likeSaveInfo.numLikes,\n        name: \"Alex Leow\",\n        specialty: \"Gastroenterology\",\n        type: \"Private\",\n        username: \"verify\"\n      };\n      setState(prevState => ({ // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        ...likeSaveInfo,\n        likedList: likeSaveInfo.likedList.length == 0 ? [newDocInfo] : [prevState.likedList, newDocInfo],\n        hasLiked: true,\n        numLikes: prevState.numLikes + 1\n      }));\n    }\n  }; // triggered if the like button is pressed (which sets state)\n\n\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleLike();\n    }\n  }, [likeSaveInfo.hasLiked, likeSaveInfo.likedList]);\n\n  const toggleLike = () => {\n    waitLikeUpdate().then(res => {\n      props.changeDocLikeStatus(res[0]);\n      const updateInfo = {\n        specialty: \"Gastroenterology\",\n        hospital: \"Pantai Hospital Kuala Lumpur\",\n        username: \"verify\",\n        likes: res[1]\n      };\n      props.updateDoctorLikes(updateInfo);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let waitLikeUpdate = async () => {\n    let [likedList, likes] = await Promise.all([likeSaveInfo.likedList, likeSaveInfo.numLikes]);\n    return [likedList, likes];\n  }; // if the user has liked this doctor before: filled heart, otherwise outlined heart\n\n\n  const LikeIcon = likeSaveInfo.hasLiked ? FavoriteIcon : FavoriteBorderOutlinedIcon; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SAVE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // when the save button is pressed\n\n  const toggleSaveUnsave = () => {\n    // the user has saved this doctor before\n    if (likeSaveInfo.hasSaved) {\n      let savedListCopy = likeSaveInfo.savedList;\n      let index = savedListCopy.findIndex(doctor => doctor.username == \"verify\"); // remove this doctor from the user saved list\n\n      savedListCopy.splice(index, 1);\n      setState({ ...likeSaveInfo,\n        savedList: savedListCopy,\n        hasSaved: false\n      });\n    } else {\n      // the newly saved doctor's information to be added to the user's saved doctor list\n      const newDocInfo = {\n        hospital: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        languages: [\"English\", \"Mandarin\"],\n        likes: likeSaveInfo.numLikes,\n        name: \"Alex Leow\",\n        specialty: \"Gastroenterology\",\n        type: \"Private\",\n        username: \"verify\"\n      };\n      setState(prevState => ({ // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        ...likeSaveInfo,\n        savedList: likeSaveInfo.savedList.length == 0 ? [newDocInfo] : [prevState.savedList, newDocInfo],\n        hasSaved: true\n      }));\n    }\n  }; // triggered if the save button is pressed (which sets state)\n\n\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleSave();\n    }\n  }, [likeSaveInfo.hasSaved, likeSaveInfo.savedList]);\n\n  const toggleSave = () => {\n    waitSaveUpdate().then(res => {\n      props.changeDocSaveStatus(res);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let waitSaveUpdate = async () => {\n    let savedList = await likeSaveInfo.savedList;\n    return savedList;\n  }; // if the user has saved this doctor before: filled bookmark, otherwise outlined bookmark\n\n\n  const SaveIcon = likeSaveInfo.hasSaved ? BookmarkIcon : BookmarkBorderOutlinedIcon; // -------------------------------------------------------------------- //\n  // ----------------------------Report---------------------------------------- //\n  // 新加 5/14\n  //report弹窗：填的表\n\n  const [reportOpen, setReportOpen] = React.useState(false);\n\n  const handleReportOpen = () => {\n    setReportOpen(true);\n  }; // 关闭report的表\n\n\n  const handleReportClose = () => {\n    setReportOpen(false);\n  };\n\n  const handleReportReason = event => {\n    const oneReason = event.target.value;\n    setState({ ...likeSaveInfo,\n      oneReason: oneReason\n    });\n  };\n\n  const reported = likeSaveInfo.reportedList.includes(\"verify\"); // reportedList\n  // send report to database\n\n  const submitReport = () => {\n    const oneReason = likeSaveInfo.oneReason;\n    const reasons = likeSaveInfo.reportReasonsList;\n    reasons.push(oneReason);\n    let reportedList = likeSaveInfo.reportedList;\n    console.log(likeSaveInfo);\n\n    if (!reported) {\n      console.log(reportedList);\n      reportedList.push(\"verify\");\n    } // send to specialty doctor account\n\n\n    const oneReport = {\n      reportCount: likeSaveInfo.numReports + 1,\n      reportReasons: reasons,\n      // *******hard code \n      specialty: \"Gastroenterology\",\n      hospital: \"Pantai Hospital Kuala Lumpur\"\n    };\n    props.report(oneReport); // send to user account\n\n    const sendToAccount = {\n      reportedDoctors: reportedList\n    };\n    props.sendReportedDoctors(sendToAccount);\n    setReportOpen(false);\n    setState(prevState => ({ ...likeSaveInfo,\n      numReports: prevState.numReports + 1,\n      reportReasonsList: [prevState.reportReasonsList, oneReason],\n      oneReason: \"\",\n      reportedList: [prevState.reportedList, \"verify\"]\n    }));\n  }; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // ~~~~~~~~~~~ign up or login in if want to save or report~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n  const handleLoginOpen = () => {\n    setLoginOpen(true);\n  };\n\n  const handleLoginClose = () => {\n    setLoginOpen(false);\n  };\n\n  const signUpInDialogue = option => {\n    const optionFirstUpper = option[0].toUpperCase() + option.slice(1);\n    let Icon = \"\";\n\n    if (option == \"recommend\") {\n      Icon = FavoriteIcon;\n    } else if (option == \"save\") {\n      Icon = BookmarkIcon;\n    } else {\n      Icon = ErrorOutlineOutlinedIcon;\n    }\n\n    return /*#__PURE__*/React.createElement(Dialog, {\n      fullWidth: \"true\",\n      maxWidth: \"sm\",\n      open: loginOpen,\n      onClose: handleLoginClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }\n    }, optionFirstUpper, \" a Doctor\")), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      onClick: handleLoginClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 13\n      }\n    }, \"You need to sign in to \", option, \" this doctor \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mt: 2,\n      mb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      fullWidth: true,\n      component: Link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 13\n      }\n    }, \"Log in \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      fullWidth: true,\n      component: Link,\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 13\n      }\n    }, \"Sign up \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"))));\n  }; // He Chen\n\n\n  let returnPageDesc;\n\n  if (props.backTo == \"resultsPage\") {\n    returnPageDesc = \"Result Page\";\n  } else {\n    returnPageDesc = \"Hospital Profile\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.covidBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CovidAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 3,\n    mb: 3,\n    className: classes.returnBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      fontSize: 16,\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: backToRes,\n    startIcon: /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 9\n    }\n  }, \"Return to \", returnPageDesc)), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 150,\n      height: 180\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: docImg,\n    alt: \"docimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleLikeUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LikeIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLoginOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 21\n    }\n  })), signUpInDialogue(\"recommend\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 15\n    }\n  }, likeSaveInfo.numLikes.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 200,\n      height: 250\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: docImg,\n    alt: \"docimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 15\n    }\n  }, \"Dr.\" + props.targetDoc[\"DocName\"])), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(Button, {\n    disabled: reported,\n    startIcon: /*#__PURE__*/React.createElement(ErrorOutlineOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 30\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: handleReportOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 17\n    }\n  }, \"Report\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(ErrorOutlineOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 34\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: handleLoginOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 21\n    }\n  }, \"Report\"), signUpInDialogue(\"report\")), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: \"true\",\n    maxWidth: \"sm\",\n    open: reportOpen,\n    onClose: handleReportClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 21\n    }\n  }, \"Report\")), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: handleReportClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 19\n    }\n  }, \"Please provide a reason for why you are reporting this doctor:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    multiline: true,\n    required: true,\n    variant: \"outlined\",\n    label: \"Reason\",\n    rows: 5,\n    onChange: handleReportReason,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.reportButton,\n    disabled: !likeSaveInfo.oneReason,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    onClick: submitReport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 19\n    }\n  }, \"Submit\"))), authenticated ? /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 30\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: toggleSaveUnsave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 17\n    }\n  }, \"Save\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 34\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: handleLoginOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 21\n    }\n  }, \"Save\"), signUpInDialogue(\"save\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 13\n    }\n  }, \"Dr.\" + props.targetDoc[\"DocName\"])), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    className: classes.profileGrid,\n    mt: 3,\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 15\n    }\n  }, \"Specialty: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 15\n    }\n  }, props.targetDoc[\"Specialty\"], \" \")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 15\n    }\n  }, \"Years of Practice: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 15\n    }\n  }, props.targetDoc[\"YearsofPractice\"] + \" years\", \" \")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 15\n    }\n  }, \"Hospital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 15\n    }\n  }, props.targetDoc[\"Hospital\"]), /*#__PURE__*/React.createElement(Chip, {\n    style: {\n      marginLeft: 10\n    },\n    color: \"primary\",\n    size: \"small\",\n    label: props.targetDoc[\"Type\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationOnOutlinedIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 17\n    }\n  }, props.targetDoc[\"Address\"]))), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PhoneOutlinedIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 17\n    }\n  }, props.targetDoc[\"Phone\"])))), /*#__PURE__*/React.createElement(DocTags, {\n    tagInfo: props.targetDoc[\"Tags\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 1,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleLikeUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LikeIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLoginOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 21\n    }\n  })), signUpInDialogue(\"recommend\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 15\n    }\n  }, likeSaveInfo.numLikes.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  })))))));\n}\n\nDocInfo.propTypes = {\n  // like\n  changeDocLikeStatus: PropTypes.func.isRequired,\n  updateDoctorLikes: PropTypes.func.isRequired,\n  // save\n  changeDocSaveStatus: PropTypes.func.isRequired,\n  // report\n  sendReportedDoctors: PropTypes.func.isRequired,\n  report: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.searchInfo\n});\n\nconst mapActionsToProps = {\n  // like\n  changeDocLikeStatus,\n  updateDoctorLikes,\n  // save\n  changeDocSaveStatus,\n  // report\n  sendReportedDoctors,\n  report\n};\nexport default connect(mapStateToProps, mapActionsToProps)(DocInfo);","map":{"version":3,"sources":["/Users/andychenhe/Desktop/may10_michelle 2/src/Components/profile/DocInfo.js"],"names":["React","Fragment","useEffect","connect","makeStyles","Button","Box","Typography","Chip","Grid","IconButton","Hidden","ArrowBackIosIcon","LocationOnOutlinedIcon","PhoneOutlinedIcon","ErrorOutlineOutlinedIcon","BookmarkIcon","BookmarkBorderOutlinedIcon","ShareOutlinedIcon","FavoriteIcon","FavoriteBorderOutlinedIcon","Dialog","DialogContent","DialogTitle","DialogActions","TextField","CloseIcon","Link","PropTypes","changeDocLikeStatus","changeDocSaveStatus","sendReportedDoctors","updateDoctorLikes","report","docImg","CovidAlert","DocTags","useStyles","theme","covidBox","marginTop","breakpoints","down","marginLeft","marginRight","returnBox","img","width","height","objectFit","profileGrid","line","border","reportButton","DocInfo","props","classes","backToRes","console","log","backTo","history","push","authenticated","renderCount","setRenderCount","useState","likeSaveInfo","setState","hasLiked","likedList","numLikes","hasSaved","savedList","reportedList","numReports","reportReasonsList","oneReason","loginOpen","setLoginOpen","displayStoredData","getStoredData","then","res","listOfLikes","liked","likeHistory","doctors","index","findIndex","doctor","username","listOfSaves","saved","likes","reportedDoctors","reportCount","reportReasons","catch","error","storedSearchInfo","userStoredCredentials","Promise","all","searchInfo","storedCredentials","toggleLikeUnlike","likedListCopy","splice","prevState","newDocInfo","hospital","imgSrc","languages","name","specialty","type","length","toggleLike","waitLikeUpdate","updateInfo","LikeIcon","toggleSaveUnsave","savedListCopy","toggleSave","waitSaveUpdate","SaveIcon","reportOpen","setReportOpen","handleReportOpen","handleReportClose","handleReportReason","event","target","value","reported","includes","submitReport","reasons","oneReport","sendToAccount","handleLoginOpen","handleLoginClose","signUpInDialogue","option","optionFirstUpper","toUpperCase","slice","Icon","textTransform","returnPageDesc","fontSize","color","toLocaleString","navigator","language","minimumFractionDigits","margin","targetDoc","propTypes","func","isRequired","mapStateToProps","state","user","credentials","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n//icons\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Link } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\n\nimport { changeDocLikeStatus, changeDocSaveStatus, sendReportedDoctors } from \"../../redux/actions/userActions\";\nimport { updateDoctorLikes, report } from \"../../redux/actions/dataActions\";\n\n//images\nimport docImg from \"../../img/results/docAlex.png\";\n\n//components\nimport CovidAlert from \"../Alert\";\nimport DocTags from \"./DocTags\";\n\nconst useStyles = makeStyles((theme) => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  //return to doctors button\n  returnBox: {\n    marginLeft: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 20,\n    },\n  },\n\n  //doctor image\n  img: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"contain\",\n  },\n\n  profileGrid: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\",\n    },\n  },\n\n  reportButton: {\n    marginRight: \"1rem\",\n  }\n}));\n\n\n//for Doc image + basic info + likes\n//edit tags section is imported from DocTags.js\n\nfunction DocInfo(props) {\n  const classes = useStyles();\n\n  const backToRes = () => {\n    console.log(props.backTo);\n    if (props.history != null) {\n      if (props.backTo == \"resultsPage\") {\n        props.history.push(\"/results\");\n      } else if (props.backTo == \"hospprofile\") {\n        props.history.push(\"/hospprofile\");\n      }\n    }\n  };\n\n\n  const authenticated = props.authenticated;\n\n  const [renderCount, setRenderCount] = React.useState(0);\n\n  const [likeSaveInfo, setState] = React.useState({\n    // like functionality\n    hasLiked: false,\n    likedList: [],\n    numLikes: 0,\n\n    // save functionality\n    hasSaved: false,\n    savedList: [],\n\n    // report functionality\n    reportedList: [],\n    numReports: 0,\n    reportReasonsList: [],\n    oneReason: \"\"\n  });\n\n  // 弹窗去signin/signup如果要report没有login\n  const [loginOpen, setLoginOpen] = React.useState(false);\n\n\n  // only get called once in the first render\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    getStoredData()\n      .then((res) => {\n        // like\n        let listOfLikes;\n        let liked = false;\n\n        // if the user has never liked any doctors\n        if (!res[1].likeHistory) {\n          listOfLikes = [];\n        } else {\n          if (res[1].likeHistory.doctors) {\n            listOfLikes = res[1].likeHistory.doctors;\n            // if the user has liked this particular doctor before\n            const index = res[1].likeHistory.doctors.findIndex(doctor => doctor.username == \"verify\")\n            if (index != -1) {\n              liked = true;\n            }\n          } else {\n            listOfLikes = [];\n          }\n        }\n\n        // save\n        let listOfSaves;\n        let saved = false;\n\n        // if the user has never saved any doctors\n        if (!res[1].saved) {\n          listOfSaves = [];\n        } else {\n          if (res[1].saved.doctors) {\n            listOfSaves = res[1].saved.doctors;\n            // if the user has saved this particular doctor before\n            const index = res[1].saved.doctors.findIndex(doctor => doctor.username == \"verify\")\n            if (index != -1) {\n              saved = true;\n            }\n          } else {\n            listOfSaves = [];\n          }\n        };\n\n\n        setState({\n          hasLiked: liked,\n          likedList: listOfLikes,\n          numLikes: res[0].likes ? res[0].likes : 0,\n\n          hasSaved: saved,\n          savedList: listOfSaves,\n\n          reportedList: res[1].reportedDoctors ? res[1].reportedDoctors : \"\",\n          numReports: res[0].report ? res[0].report.reportCount : 0,\n          reportReasonsList: res[0].report ? res[0].report.reportReasons : \"\",\n          oneReason: \"\"\n        });\n        \n\n        setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  // wait for returned props from firebase to be ready\n  let getStoredData = async () => {\n    let [storedSearchInfo, userStoredCredentials] =\n      await Promise.all([props.searchInfo, props.storedCredentials]);\n    return [storedSearchInfo, userStoredCredentials];\n  }\n\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LIKE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // when the like button is pressed\n  const toggleLikeUnlike = () => {\n    // the user has liked this doctor before\n    if (likeSaveInfo.hasLiked) {\n      let likedListCopy = likeSaveInfo.likedList;\n      let index = likedListCopy.findIndex(doctor => doctor.username == \"verify\");\n      // remove this doctor from the user like list\n      likedListCopy.splice(index, 1);\n      setState(prevState => ({\n        ...likeSaveInfo,\n        likedList: likedListCopy,\n        // change to unlike\n        hasLiked: false,\n        numLikes: prevState.numLikes - 1\n      }))\n    } else {\n      // the newly liked doctor's information to be added to the user's liked doctor list\n      const newDocInfo = {\n        hospital: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        languages: [\"English\", \"Mandarin\"],\n        likes: likeSaveInfo.numLikes,\n        name: \"Alex Leow\",\n        specialty: \"Gastroenterology\",\n        type: \"Private\",\n        username: \"verify\"\n      };\n\n      setState(prevState => ({\n        // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        ...likeSaveInfo,\n        likedList: (likeSaveInfo.likedList.length == 0) ? [newDocInfo] : [prevState.likedList, newDocInfo],\n        hasLiked: true,\n        numLikes: prevState.numLikes + 1\n      }))\n    }\n  }\n\n  // triggered if the like button is pressed (which sets state)\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleLike();\n    }\n  }, [likeSaveInfo.hasLiked, likeSaveInfo.likedList]);\n\n\n  const toggleLike = () => {\n    waitLikeUpdate()\n      .then((res) => {\n        props.changeDocLikeStatus(res[0]);\n        const updateInfo = {\n          specialty: \"Gastroenterology\",\n          hospital: \"Pantai Hospital Kuala Lumpur\",\n          username: \"verify\",\n          likes: res[1]\n        }\n        props.updateDoctorLikes(updateInfo)\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  let waitLikeUpdate = async () => {\n    let [likedList, likes] =\n      await Promise.all([likeSaveInfo.likedList, likeSaveInfo.numLikes]);\n    return [likedList, likes];\n  }\n\n\n  // if the user has liked this doctor before: filled heart, otherwise outlined heart\n  const LikeIcon = (likeSaveInfo.hasLiked) ? FavoriteIcon : FavoriteBorderOutlinedIcon;\n\n\n\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SAVE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // when the save button is pressed\n  const toggleSaveUnsave = () => {\n    // the user has saved this doctor before\n    if (likeSaveInfo.hasSaved) {\n      let savedListCopy = likeSaveInfo.savedList;\n      let index = savedListCopy.findIndex(doctor => doctor.username == \"verify\");\n      // remove this doctor from the user saved list\n      savedListCopy.splice(index, 1);\n\n      setState({\n        ...likeSaveInfo,\n        savedList: savedListCopy,\n        hasSaved: false,\n      })\n    } else {\n      // the newly saved doctor's information to be added to the user's saved doctor list\n      const newDocInfo = {\n        hospital: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        languages: [\"English\", \"Mandarin\"],\n        likes: likeSaveInfo.numLikes,\n        name: \"Alex Leow\",\n        specialty: \"Gastroenterology\",\n        type: \"Private\",\n        username: \"verify\"\n      };\n\n      setState(prevState => ({\n        // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        ...likeSaveInfo,\n        savedList: (likeSaveInfo.savedList.length == 0) ? [newDocInfo] : [prevState.savedList, newDocInfo],\n        hasSaved: true,\n      }))\n    }\n  }\n\n  // triggered if the save button is pressed (which sets state)\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleSave();\n    }\n  }, [likeSaveInfo.hasSaved, likeSaveInfo.savedList]);\n\n\n  const toggleSave = () => {\n    waitSaveUpdate()\n      .then((res) => {\n        props.changeDocSaveStatus(res);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  let waitSaveUpdate = async () => {\n    let savedList = await likeSaveInfo.savedList;\n    return savedList;\n  }\n\n\n  // if the user has saved this doctor before: filled bookmark, otherwise outlined bookmark\n  const SaveIcon = (likeSaveInfo.hasSaved) ? BookmarkIcon : BookmarkBorderOutlinedIcon;\n\n\n\n\n  // -------------------------------------------------------------------- //\n    // ----------------------------Report---------------------------------------- //\n  // 新加 5/14\n  //report弹窗：填的表\n  const [reportOpen, setReportOpen] = React.useState(false);\n  const handleReportOpen = () => {\n    setReportOpen(true);\n  };\n\n  // 关闭report的表\n  const handleReportClose = () => {\n    setReportOpen(false);\n  };\n\n  const handleReportReason = (event) => {\n    const oneReason = event.target.value;\n    setState({\n      ...likeSaveInfo,\n      oneReason: oneReason\n    });\n  };\n\n\n  const reported = likeSaveInfo.reportedList.includes(\"verify\");\n// reportedList\n  // send report to database\n  const submitReport = () => {\n    const oneReason = likeSaveInfo.oneReason;\n    const reasons = likeSaveInfo.reportReasonsList;\n    reasons.push(oneReason);\n    let reportedList = likeSaveInfo.reportedList;\n    console.log(likeSaveInfo);\n    if (!reported) {\n      console.log(reportedList);\n      reportedList.push(\"verify\");\n    }\n\n    // send to specialty doctor account\n    const oneReport = {\n      reportCount: likeSaveInfo.numReports + 1,\n      reportReasons: reasons,\n\n      // *******hard code \n      specialty: \"Gastroenterology\",\n      hospital: \"Pantai Hospital Kuala Lumpur\",\n    };\n    props.report(oneReport);\n\n    // send to user account\n    const sendToAccount = {\n      reportedDoctors: reportedList,\n    };\n    props.sendReportedDoctors(sendToAccount);\n\n    setReportOpen(false);\n    setState((prevState) => ({\n      ...likeSaveInfo,\n      numReports: prevState.numReports + 1,\n      reportReasonsList: [prevState.reportReasonsList, oneReason],\n      oneReason: \"\",\n      reportedList: [prevState.reportedList, \"verify\"],\n    }));\n  };\n\n\n\n\n\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // ~~~~~~~~~~~ign up or login in if want to save or report~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  const handleLoginOpen = () => {\n    setLoginOpen(true);\n  };\n  const handleLoginClose = () => {\n    setLoginOpen(false);\n  };\n\n  const signUpInDialogue = (option) => {\n    const optionFirstUpper = option[0].toUpperCase() + option.slice(1);\n    let Icon = \"\";\n\n    if (option == \"recommend\") {\n      Icon = FavoriteIcon;\n    } else if (option == \"save\") {\n      Icon = BookmarkIcon;\n    } else {\n      Icon = ErrorOutlineOutlinedIcon;\n    }\n\n    return (\n\n      <Dialog\n        fullWidth=\"true\"\n        maxWidth=\"sm\"\n        open={loginOpen}\n        onClose={handleLoginClose}\n      >\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box flexGrow={1}>\n            <DialogTitle>{optionFirstUpper} a Doctor</DialogTitle>\n          </Box>\n          <Box>\n            <DialogActions>\n              <IconButton\n                size=\"small\"\n                onClick={handleLoginClose}\n                color=\"primary\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </DialogActions>\n          </Box>\n        </Box>\n        <DialogContent>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Icon />\n            <br></br>\n            <Typography variant=\"body1\" align=\"center\">\n              You need to sign in to {option} this doctor\n                        </Typography>\n          </Box>\n          <Box display=\"flex\" mt={2} mb={2}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ textTransform: \"none\" }}\n              fullWidth\n              component={Link}\n              to=\"/login\"\n            >\n              Log in\n                        </Button>\n          </Box>\n\n          <Box display=\"flex\" mb={2}>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{ textTransform: \"none\" }}\n              fullWidth\n              component={Link}\n              to=\"/signup\"\n            >\n              Sign up\n                        </Button>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    )\n  }\n\n\n\n\n  // He Chen\n  let returnPageDesc;\n  if (props.backTo == \"resultsPage\"){\n    returnPageDesc = \"Result Page\";\n  } else {\n    returnPageDesc = \"Hospital Profile\";\n  }\n\n\n\n  return (\n    <div>\n      <div className={classes.covidBox}>\n        <CovidAlert />\n      </div>\n\n      {/* For 'return to doctors' button (需要换成return to hospital， depending on user之前是怎么搜的) */}\n      <Box display=\"flex\" mt={3} mb={3} className={classes.returnBox}>\n        <Button\n          style={{ fontSize: 16, textTransform: \"none\" }}\n          color=\"primary\"\n          onClick={backToRes}\n          startIcon={<ArrowBackIosIcon />}\n        >\n          Return to {returnPageDesc}\n        </Button>\n      </Box>\n\n      {/* 手机屏幕才会出现的格式：doctor照片在上面 ，like icon 在右上角*/}\n      <Hidden smUp>\n        <Grid container display=\"flex\" justifyContent=\"center\">\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6} align=\"center\">\n            {/* doctor image */}\n            <div style={{ width: 150, height: 180 }}>\n              <img className={classes.img} src={docImg} alt=\"docimg\" />\n            </div>\n          </Grid>\n          {/* Like icon + number of likes */}\n          <Grid item xs={3}>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              {/* 如果登入了，爱心icon成了iconButton，可以点 , 但是我没写logic, 目前点了的话，这个button不会从\n              <FavoriteBorderOutlinedIcon> 换成<FavoriteIcon>, likeCount也不会增加，麻烦你了\n              */}\n              {authenticated ? (\n                <IconButton onClick={toggleLikeUnlike}>\n                  <LikeIcon style={{ color: \"red\" }} />\n                </IconButton>\n              ) : (\n                <Fragment>\n                  <IconButton onClick={handleLoginOpen}>\n                    <FavoriteBorderOutlinedIcon style={{ color: \"red\" }} />\n                  </IconButton>\n                  {signUpInDialogue(\"recommend\")}\n                </Fragment>\n                )}\n              {/* like count */}\n              <Typography variant=\"body2\" color=\"primary\">\n                {likeSaveInfo.numLikes.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Hidden>\n\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={5} md={4}>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            {/* 大屏幕会出现的格式：doctor照片在左边 */}\n            <Hidden xsDown>\n              {/* doctor image */}\n              <div style={{ width: 200, height: 250 }}>\n                <img className={classes.img} src={docImg} alt=\"docimg\" />\n              </div>\n            </Hidden>\n\n            {/* 手机屏幕出现的格式：doctor's name 在照片下面 */}\n            <Hidden smUp>\n              <Typography variant=\"h5\" color=\"primary\" style={{ margin: 20 }}>\n                {\"Dr.\" + props.targetDoc[\"DocName\"]}\n              </Typography>\n            </Hidden>\n\n            <Box display=\"flex\" mt={2}>\n\n              {/* report button */}\n\n              {authenticated ? (\n                <Button\n                  disabled={reported}\n                  startIcon={<ErrorOutlineOutlinedIcon />}\n                  style={{ textTransform: \"none\" }}\n                  color=\"primary\"\n                  onClick={handleReportOpen}\n                >\n                  Report\n              </Button>\n              ) : (\n                  <Fragment>\n                    <Button\n                      startIcon={<ErrorOutlineOutlinedIcon />}\n                      style={{ textTransform: \"none\" }}\n                      color=\"primary\"\n                      onClick={handleLoginOpen}\n                    >\n                      Report\n                </Button>\n                    {signUpInDialogue(\"report\")}\n                  </Fragment>\n                )}\n\n                {/* report dialogue 新加的 5/10/2020 */}\n              <Dialog\n                fullWidth=\"true\"\n                maxWidth=\"sm\"\n                open={reportOpen}\n                onClose={handleReportClose}\n              >\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Box flexGrow={1}>\n                    <DialogTitle>Report</DialogTitle>\n                  </Box>\n                  <Box>\n                    <DialogActions>\n                      <IconButton\n                        size=\"small\"\n                        onClick={handleReportClose}\n                        color=\"primary\"\n                      >\n                        <CloseIcon />\n                      </IconButton>\n                    </DialogActions>\n                  </Box>\n                </Box>\n                <DialogContent>\n                  <Typography variant=\"body1\">\n                    Please provide a reason for why you are reporting this\n                    doctor:\n                  </Typography>\n                  <br></br>\n                  <TextField\n                    fullWidth\n                    multiline\n                    required\n                    variant=\"outlined\"\n                    label=\"Reason\"\n                    rows={5}\n                    onChange={handleReportReason}\n                  />\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    className={classes.reportButton}\n                    disabled={!likeSaveInfo.oneReason}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\" }}\n                    onClick={submitReport}\n                  >\n                    Submit\n                  </Button>\n                </DialogActions>\n              </Dialog>\n\n\n              {/* save button */}\n\n              {authenticated ? (\n                <Button\n                  startIcon={<SaveIcon />}\n                  style={{ textTransform: \"none\" }}\n                  color=\"primary\"\n                  onClick={toggleSaveUnsave}\n                >\n                  Save\n              </Button>\n              ) : (\n                  <Fragment>\n                    <Button\n                      startIcon={<SaveIcon />}\n                      style={{ textTransform: \"none\" }}\n                      color=\"primary\"\n                      onClick={handleLoginOpen}\n                    >\n                      Save\n                </Button>\n                    {signUpInDialogue(\"save\")}\n                  </Fragment>\n                )}\n\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={6}>\n          {/* 大屏幕会出现的格式：doctor name 在右边 */}\n          <Hidden xsDown>\n            <Typography variant=\"h5\" color=\"primary\">\n              {\"Dr.\" + props.targetDoc[\"DocName\"]}\n            </Typography>\n          </Hidden>\n          <br></br>\n\n          {/* 手机幕会出现的格式：灰色比较粗的divider line */}\n          <Hidden smUp>\n            <hr className={classes.line}></hr>\n          </Hidden>\n\n          {/* Doctor basic info */}\n          <Box className={classes.profileGrid} mt={3} mb={3}>\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Specialty: </strong>{\" \"}\n              <span>{props.targetDoc[\"Specialty\"]} </span>\n            </Typography>\n\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Years of Practice: </strong>{\" \"}\n              <span>{props.targetDoc[\"YearsofPractice\"] + \" years\"} </span>\n            </Typography>\n\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Hospital: </strong>\n              <span>{props.targetDoc[\"Hospital\"]}</span>\n              {/* private tag */}\n              <Chip\n                style={{ marginLeft: 10 }}\n                color=\"primary\"\n                size=\"small\"\n                label={props.targetDoc[\"Type\"]}\n              ></Chip>\n            </Typography>\n            <br></br>\n\n            <Box display=\"flex\" flexDirection=\"row\" mt={1}>\n              <LocationOnOutlinedIcon style={{ marginRight: 10 }} />\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <span>{props.targetDoc[\"Address\"]}</span>\n              </Typography>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\" mt={1}>\n              <PhoneOutlinedIcon style={{ marginRight: 10 }} />\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <span>{props.targetDoc[\"Phone\"]}</span>\n              </Typography>\n            </Box>\n          </Box>\n          {/* edit Tag component (imported from Tag.js) */}\n          <DocTags tagInfo={props.targetDoc[\"Tags\"]} />\n        </Grid>\n\n        <Grid item xs={12} sm={1} md={2}>\n          {/* 大屏幕会出现的格式：like icon在最右边 */}\n          <Hidden xsDown>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              {/* 如果登入了，爱心icon成了iconButton，可以点 , 但是我没写logic, 目前点了的话，这个button不会从\n              <FavoriteBorderOutlinedIcon> 换成<FavoriteIcon>, likeCount也不会增加，麻烦你了\n              */}\n              {authenticated ? (\n                <IconButton onClick={toggleLikeUnlike}>\n                  <LikeIcon style={{ color: \"red\" }} />\n                </IconButton>\n              ) : (\n                <Fragment>\n                  <IconButton onClick={handleLoginOpen}>\n                    <FavoriteBorderOutlinedIcon style={{ color: \"red\" }} />\n                  </IconButton>\n                  {signUpInDialogue(\"recommend\")}\n              </Fragment>\n                )}\n              <Typography variant=\"body2\" color=\"primary\">\n                {likeSaveInfo.numLikes.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n              </Typography>\n            </Box>\n          </Hidden>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nDocInfo.propTypes = {\n  // like\n  changeDocLikeStatus: PropTypes.func.isRequired,\n  updateDoctorLikes: PropTypes.func.isRequired,\n\n  // save\n  changeDocSaveStatus: PropTypes.func.isRequired,\n\n  // report\n  sendReportedDoctors: PropTypes.func.isRequired,\n  report: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.user.authenticated,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.searchInfo\n});\n\nconst mapActionsToProps = {\n  // like\n  changeDocLikeStatus,\n  updateDoctorLikes,\n\n  // save\n  changeDocSaveStatus,\n\n  // report\n  sendReportedDoctors,\n  report\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(DocInfo);\n"]},"metadata":{},"sourceType":"module"}
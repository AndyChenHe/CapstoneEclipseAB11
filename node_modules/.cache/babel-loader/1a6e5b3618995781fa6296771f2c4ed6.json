{"ast":null,"code":"import _slicedToArray from\"/Users/andychenhe/Desktop/CapstoneEclipseAB11/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Drawer from\"@material-ui/core/Drawer\";import Toolbar from\"@material-ui/core/Toolbar\";import Typography from\"@material-ui/core/Typography\";import Box from\"@material-ui/core/Box\";import Grid from\"@material-ui/core/Grid\";import Pagination from\"@material-ui/lab/Pagination\";import ToggleButton from\"@material-ui/lab/ToggleButton\";import ToggleButtonGroup from\"@material-ui/lab/ToggleButtonGroup\";import Hidden from\"@material-ui/core/Hidden\";// components\nimport CovidAlert from\"../Alert\";import DocCard from\"./DocCard\";import HospitalCard from\"./HospitalCard\";import{HospitalType,Languages,YearsOfPractice,Location}from\"./FiltersFunctions\";import{FilterButtonPhone}from\"./FiltersUI_Phone\";var useStyles=makeStyles(function(theme){return{root:{display:\"flex\",height:\"100vh\"},appBar:{zIndex:theme.zIndex.drawer+1},drawer:{width:240,flexShrink:0},drawerPaper:{width:240},drawerContainer:{overflow:\"auto\"},content:{flexGrow:1,padding:theme.spacing(3)},toggleContainer:{margin:theme.spacing(3,0)}};});export default function SearchResultsFilter(props){var classes=useStyles();//store state - whether user clicks on display by doctor or display by hospital\nvar _React$useState=React.useState(\"doctor\"),_React$useState2=_slicedToArray(_React$useState,2),display=_React$useState2[0],setDisplay=_React$useState2[1];//display by doctor as default\nvar handleDisplay=function handleDisplay(event,newDisplay){if(newDisplay!=null){setDisplay(newDisplay);}};//store state of pages\nvar _React$useState3=React.useState(1),_React$useState4=_slicedToArray(_React$useState3,2),page=_React$useState4[0],setPage=_React$useState4[1];//page 1 as default\nvar maxPage=5;var handlePageChange=function handlePageChange(event,value){window.scrollTo(0,0);setPage(value);};// create cards for doctors based on results\nvar pageNavCount=Math.ceil(props.docInfo.length/maxPage);// find the index of the first card in the page\nvar cardStartIndex=(page-1)*maxPage;var cardEndIndex=0;console.log(props.docInfo);// find the index of the last card in the page\nif(cardStartIndex+maxPage-1>props.docInfo.length){cardEndIndex=props.docInfo.length-1;}else{cardEndIndex=maxPage-1+cardStartIndex;}var allDoccards=[];if(props.docInfo){var key=0;for(var i=cardStartIndex;i<=cardEndIndex;i++){var component=/*#__PURE__*/React.createElement(DocCard,Object.assign({},props,{updateTargetDoc:props.updateTargetDoc,resultData:props.docInfo[i],key:i}));allDoccards.push(component);}// allDoccards = props.docInfo.map((msgString) => {\n//   // console.log('key: ' + key);\n//   // console.log('cardStartIndex: ' + cardEndIndex);\n//     if (key <= cardEndIndex && key >= cardStartIndex){\n//       //add this valid component to resulting array\n//       let component = <DocCard {...props} updateTargetDoc={props.updateTargetDoc} resultData = {msgString} key = {key}/>\n//       return component;\n//     }\n//     key ++;\n// })\n}// create cards for doctors based on Hospital\nvar allHosCards=/*#__PURE__*/React.createElement(\"div\",null);if(props.hospitalInfo){var _key=0;allHosCards=props.hospitalInfo.map(function(msgString){var component=/*#__PURE__*/React.createElement(HospitalCard,Object.assign({},props,{resultData:msgString,key:_key,updateTargetHos:props.updateTargetHos}));_key++;return component;//add this new component to resulting array\n});}return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Hidden,{smDown:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Drawer,{className:classes.drawer,variant:\"permanent\",classes:{paper:classes.drawerPaper}},/*#__PURE__*/React.createElement(Toolbar,null),/*#__PURE__*/React.createElement(\"div\",{className:classes.drawerContainer},/*#__PURE__*/React.createElement(Box,{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",ml:8},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(HospitalType,{filterHosType:props.filterHosType}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Languages,{filterLanguageList:props.filterLanguageList}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),display===\"doctor\"?/*#__PURE__*/React.createElement(YearsOfPractice,{filterYear:props.filterYear}):/*#__PURE__*/React.createElement(Location,null)))),/*#__PURE__*/React.createElement(\"main\",{className:classes.content},/*#__PURE__*/React.createElement(Toolbar,null),/*#__PURE__*/React.createElement(\"div\",{className:classes.covidBox,style:{marginLeft:30,marginRight:30}},/*#__PURE__*/React.createElement(CovidAlert,null)),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:0},/*#__PURE__*/React.createElement(Grid,{item:true,sm:9,lg:10},display===\"doctor\"?/*#__PURE__*/React.createElement(Typography,{style:{marginLeft:30,marginTop:30,marginBottom:30},variant:\"h6\",color:\"primary\"},\"Display results by doctors\"):/*#__PURE__*/React.createElement(Typography,{style:{marginLeft:30,marginTop:30,marginBottom:30},variant:\"h6\",color:\"primary\"},\"Display results by hospitals\")),/*#__PURE__*/React.createElement(Grid,{item:true,sm:3,lg:2},/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.toggleContainer},/*#__PURE__*/React.createElement(ToggleButtonGroup,{value:display,exclusive:true,onChange:handleDisplay},/*#__PURE__*/React.createElement(ToggleButton,{value:\"doctor\",color:\"primary\"},/*#__PURE__*/React.createElement(Typography,{color:\"primary\",style:{textTransform:\"none\"}},\"Doctor\")),/*#__PURE__*/React.createElement(ToggleButton,{value:\"hospital\"},/*#__PURE__*/React.createElement(Typography,{color:\"primary\",style:{textTransform:\"none\"}},\"Hospital\"))))))),/*#__PURE__*/React.createElement(\"div\",null,display===\"doctor\"?/*#__PURE__*/React.createElement(Fragment,null,allDoccards):/*#__PURE__*/React.createElement(Fragment,null,allHosCards)),/*#__PURE__*/React.createElement(Box,{display:\"flex\",justifyContent:\"center\"},/*#__PURE__*/React.createElement(Pagination,{count:pageNavCount,page:page,onChange:handlePageChange,shape:\"rounded\",color:\"primary\"}))))),/*#__PURE__*/React.createElement(Hidden,{mdUp:true},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:0,style:{marginTop:20}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:1}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:5,align:\"left\"},/*#__PURE__*/React.createElement(FilterButtonPhone,{filterLanguageList:props.filterLanguageList,filterHosType:props.filterHosType})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:5,align:\"right\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.toggleContainer},/*#__PURE__*/React.createElement(ToggleButtonGroup,{value:display,exclusive:true,onChange:handleDisplay},/*#__PURE__*/React.createElement(ToggleButton,{value:\"doctor\",color:\"primary\"},/*#__PURE__*/React.createElement(Typography,{color:\"primary\",style:{textTransform:\"none\"}},\"Doctor\")),/*#__PURE__*/React.createElement(ToggleButton,{value:\"hospital\"},/*#__PURE__*/React.createElement(Typography,{color:\"primary\",style:{textTransform:\"none\"}},\"Hospital\"))))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:1})),/*#__PURE__*/React.createElement(Box,{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\"},display===\"doctor\"?/*#__PURE__*/React.createElement(Fragment,null,allDoccards):/*#__PURE__*/React.createElement(Fragment,null,allHosCards)),/*#__PURE__*/React.createElement(Box,{display:\"flex\",justifyContent:\"center\"},/*#__PURE__*/React.createElement(Pagination,{count:pageNavCount,page:page,onChange:handlePageChange,shape:\"rounded\",color:\"primary\"}))));}","map":{"version":3,"sources":["/Users/andychenhe/Desktop/CapstoneEclipseAB11/src/Components/results/SearchResults.js"],"names":["React","Fragment","makeStyles","Drawer","Toolbar","Typography","Box","Grid","Pagination","ToggleButton","ToggleButtonGroup","Hidden","CovidAlert","DocCard","HospitalCard","HospitalType","Languages","YearsOfPractice","Location","FilterButtonPhone","useStyles","theme","root","display","height","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","toggleContainer","margin","SearchResultsFilter","props","classes","useState","setDisplay","handleDisplay","event","newDisplay","page","setPage","maxPage","handlePageChange","value","window","scrollTo","pageNavCount","Math","ceil","docInfo","length","cardStartIndex","cardEndIndex","console","log","allDoccards","key","i","component","updateTargetDoc","push","allHosCards","hospitalInfo","map","msgString","updateTargetHos","paper","filterHosType","filterLanguageList","filterYear","covidBox","marginLeft","marginRight","marginTop","marginBottom","textTransform"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n// components\nimport CovidAlert from \"../Alert\";\nimport DocCard from \"./DocCard\";\nimport HospitalCard from \"./HospitalCard\";\nimport {\n  HospitalType,\n  Languages,\n  YearsOfPractice,\n  Location,\n} from \"./FiltersFunctions\";\nimport { FilterButtonPhone } from \"./FiltersUI_Phone\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 240,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  toggleContainer: {\n    margin: theme.spacing(3, 0),\n  },\n}));\n\nexport default function SearchResultsFilter(props) {\n  const classes = useStyles();\n\n  //store state - whether user clicks on display by doctor or display by hospital\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  //store state of pages\n  const [page, setPage] = React.useState(1); //page 1 as default\n  const maxPage = 5;\n\n  const handlePageChange = (event, value) => {\n    window.scrollTo(0, 0);\n    setPage(value);\n  };\n\n    // create cards for doctors based on results\n    let pageNavCount = Math.ceil(props.docInfo.length / maxPage);\n    // find the index of the first card in the page\n    let cardStartIndex = (page - 1)*maxPage;\n    let cardEndIndex = 0;\n    console.log(props.docInfo);\n    // find the index of the last card in the page\n    if (cardStartIndex + maxPage - 1 > props.docInfo.length){\n      cardEndIndex = props.docInfo.length - 1;\n    } else {\n      cardEndIndex = maxPage - 1 + cardStartIndex;\n    }\n\n    let allDoccards = [];\n    if (props.docInfo){\n      let key = 0;\n      for (let i = cardStartIndex; i <= cardEndIndex; i ++){\n        let component = <DocCard {...props} updateTargetDoc={props.updateTargetDoc} resultData = {props.docInfo[i]} key = {i}/>\n        allDoccards.push(component);\n      }\n\n      // allDoccards = props.docInfo.map((msgString) => {\n      //   // console.log('key: ' + key);\n      //   // console.log('cardStartIndex: ' + cardEndIndex);\n      //     if (key <= cardEndIndex && key >= cardStartIndex){\n      //       //add this valid component to resulting array\n      //       let component = <DocCard {...props} updateTargetDoc={props.updateTargetDoc} resultData = {msgString} key = {key}/>\n      //       return component;\n      //     }\n      //     key ++;\n      // })\n  } \n  \n    // create cards for doctors based on Hospital\n    let allHosCards = <div></div>;\n    if (props.hospitalInfo){\n      let key = 0;\n      allHosCards = props.hospitalInfo.map((msgString) => {\n          let component = <HospitalCard {...props} resultData = {msgString} key = {key} updateTargetHos={props.updateTargetHos}/>\n          key ++;\n          return component; //add this new component to resulting array\n      })\n  } \n  \n  return (\n    <Fragment>\n      <Hidden smDown>\n        <div className={classes.root}>\n          <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <Toolbar />\n            {/* For filter sidebar */}\n            <div className={classes.drawerContainer}>\n              <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                ml={8}\n              >\n                <br></br>\n                <br></br>\n                <HospitalType filterHosType={props.filterHosType}/>\n                <br></br>\n                <br></br>\n                <Languages filterLanguageList={props.filterLanguageList}/>\n                <br></br>\n                <br></br>\n                {/* If display by doctor, filter sidebar will show years of practice;\n            if display by hospital, filter sidebar will show location */}\n                {display === \"doctor\" ? <YearsOfPractice filterYear={props.filterYear}/> : <Location />}\n              </Box>\n            </div>\n          </Drawer>\n          <main className={classes.content}>\n            <Toolbar />\n            {/* Covid Alert */}\n            <div\n              className={classes.covidBox}\n              style={{ marginLeft: 30, marginRight: 30 }}\n            >\n              <CovidAlert />\n            </div>\n            {/* Search result content starts here */}\n            <Grid container spacing={0}>\n              <Grid item sm={9} lg={10}>\n                {/* if user clicks on 'doctor' button, then render 'display results by doctors; else 'display results by hospitals'*/}\n                {display === \"doctor\" ? (\n                  <Typography\n                    style={{ marginLeft: 30, marginTop: 30, marginBottom: 30 }}\n                    variant=\"h6\"\n                    color=\"primary\"\n                  >\n                    Display results by doctors\n                  </Typography>\n                ) : (\n                  <Typography\n                    style={{ marginLeft: 30, marginTop: 30, marginBottom: 30 }}\n                    variant=\"h6\"\n                    color=\"primary\"\n                  >\n                    Display results by hospitals\n                  </Typography>\n                )}\n              </Grid>\n              <Grid item sm={3} lg={2}>\n                {/* Display by Doctor/Hospital buttons */}\n                <Fragment>\n                  <div className={classes.toggleContainer}>\n                    <ToggleButtonGroup\n                      value={display}\n                      exclusive\n                      onChange={handleDisplay}\n                    >\n                      <ToggleButton value=\"doctor\" color=\"primary\">\n                        <Typography\n                          color=\"primary\"\n                          style={{ textTransform: \"none\" }}\n                        >\n                          Doctor\n                        </Typography>\n                      </ToggleButton>\n                      <ToggleButton value=\"hospital\">\n                        <Typography\n                          color=\"primary\"\n                          style={{ textTransform: \"none\" }}\n                        >\n                          Hospital\n                        </Typography>\n                      </ToggleButton>\n                    </ToggleButtonGroup>\n                  </div>\n                </Fragment>\n              </Grid>\n            </Grid>\n            <div>\n              {/* if user clicks on display by 'doctor', then render doctor cards */}\n              {display === \"doctor\" ? (\n                <Fragment>\n                  {allDoccards}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  {allHosCards}\n                </Fragment>\n              )}\n            </div>\n            {/* For pages at bottom */}\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Pagination\n                count={pageNavCount}\n                page={page}\n                onChange={handlePageChange}\n                shape=\"rounded\"\n                color=\"primary\"\n              />\n            </Box>\n          </main>\n        </div>\n      </Hidden>\n\n      {/* for small phone screens */}\n      <Hidden mdUp>\n        <Grid container spacing={0} style={{ marginTop: 20 }}>\n          <Grid item xs={1}></Grid>\n\n          <Grid item xs={5} align=\"left\">\n            <FilterButtonPhone filterLanguageList={props.filterLanguageList} filterHosType={props.filterHosType} />\n          </Grid>\n          <Grid item xs={5} align=\"right\">\n            <div className={classes.toggleContainer}>\n              <ToggleButtonGroup\n                value={display}\n                exclusive\n                onChange={handleDisplay}\n              >\n                <ToggleButton value=\"doctor\" color=\"primary\">\n                  <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                    Doctor\n                  </Typography>\n                </ToggleButton>\n                <ToggleButton value=\"hospital\">\n                  <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                    Hospital\n                  </Typography>\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </div>\n          </Grid>\n          <Grid item xs={1}></Grid>\n        </Grid>\n\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          {/* If display by doctor, render DocCard; if display by Hospital, render HospitalCard */}\n          {display === \"doctor\" ? (\n            <Fragment>\n              {allDoccards}\n            </Fragment>\n          ) : (\n            <Fragment>\n             {allHosCards}\n            </Fragment>\n          )}\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <Pagination\n            count={pageNavCount}\n            page={page}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n            color=\"primary\"\n          />\n        </Box>\n      </Hidden>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
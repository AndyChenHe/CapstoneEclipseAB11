{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/may10_michelle 2/src/Components/docAccount/LikeHistorySaved.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\"; // import DocCard from \"../../Components/results/DocCard\";\n// import HospCard from \"../../Components/results/HospitalCard\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport docImg from \"../../img/results/docAlex.png\";\nimport hospImg from \"../../img/results/pantaihospital.png\"; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// for small cards display, might delete later if naming conventions unify\n\nconst useStyles = makeStyles(theme => ({ ...theme.account,\n  root: {\n    display: \"flex\",\n    margin: 30\n  },\n  img: {\n    width: \"60%\",\n    [theme.breakpoints.only(\"md\")]: {\n      width: \"80%\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"40%\"\n    }\n  },\n  imageGrid: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 30,\n      marginBottom: 10\n    }\n  },\n  likeBox: {\n    marginTop: 16,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 0,\n      alignItems: \"flex-start\",\n      marginLeft: 20,\n      marginRight: 20,\n      marginBottom: 20\n    }\n  }\n})); // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nfunction LikeHistorySaved(props) {\n  const classes = useStyles(); // decide if the page should render Like History or Saved\n\n  const displayType = props.saveLike;\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0);\n  const [saveLike, setSaveLike] = React.useState({\n    doctors: [],\n    hospitals: []\n  });\n  const indicator = \"\";\n  useEffect(() => {\n    if (!indicator) {\n      return displayStoredCredentials();\n    }\n  }, []);\n\n  const displayStoredCredentials = () => {\n    getStoredCredentials().then(res => {\n      // michelle 5/16: 从storedCredentials改成用axios了 所以现在uncomment这句 把原来的let stored = res[displayType]删掉\n      let stored = res.data.credentials[displayType];\n      let likedDoctors;\n      let likedHospitals; // if the user has not never liked any doctors or hospitals\n\n      if (!stored) {\n        likedDoctors = [];\n        likedHospitals = [];\n      } else {\n        likedDoctors = stored.doctors ? stored.doctors : [];\n        likedHospitals = stored.hospitals ? stored.hospitals : [];\n      }\n\n      console.log('user credential:');\n      console.log(res);\n      setSaveLike({\n        doctors: likedDoctors,\n        hospitals: likedHospitals\n      }); // setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let getStoredCredentials = async () => {\n    let userStoredCredentials = await axios.get(axios.defaults.baseURL + \"user\"); // console.log(userStoredCredentials)\n\n    return userStoredCredentials;\n  };\n\n  let getSpecialtyData = async searchSpecialty => {\n    let data = await axios.get(axios.defaults.baseURL + \"getallsearchdata\", {\n      params: {\n        specialty: searchSpecialty\n      }\n    });\n    return data;\n  }; // list of liked doctor cards on doctor tab\n\n\n  let doctorCards = saveLike.doctors.map(doctor => {\n    console.log('doctor:');\n    console.log(doctor);\n    return /*#__PURE__*/React.createElement(DocCard, {\n      key: doctor.username,\n      doctorInfo: doctor,\n      getSpecialtyData: getSpecialtyData,\n      database: props.database,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    });\n  }); // list of liked hospitals cards on hospital tab\n\n  let hospitalCards = saveLike.hospitals.map(hospital => {\n    return /*#__PURE__*/React.createElement(HospitalCard, {\n      key: hospital.name,\n      hospitalInfo: hospital,\n      getSpecialtyData: getSpecialtyData,\n      database: props.database,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"a\", {\n    id: \"likehistory\",\n    className: classes.anchor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 4,\n    mb: 3,\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    flexDirection: \"row\",\n    mb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"docaccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n    className: classes.backIcon,\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, displayType === \"likeHistory\" ? \"Like History\" : \"Saved\"))), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: display,\n    exclusive: true,\n    onChange: handleDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"doctor\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, \"Doctor\")), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"hospital\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"Hospital\")))), \" \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }), display === \"doctor\" ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, doctorCards) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, hospitalCards)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  })));\n} // }\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// might be deleted later if naming conventions unify\n// Each indiivdual doctor card\n\n\nfunction DocCard(props) {\n  const classes = useStyles();\n  console.log(props.database);\n  const [specialty, setSpecialty] = React.useState(props.doctorInfo.specialty);\n  const [hospital, setHospital] = React.useState(props.doctorInfo.hospital.replace(/\\s+/g, \"\"));\n  const [username, setUsername] = React.useState(props.doctorInfo.username.replace(/\\s+/g, \"\"));\n  const [targetDoc, setTargetDoc] = React.useState();\n  console.log('specialty');\n  console.log(specialty);\n  console.log('hospital');\n  console.log(hospital);\n  console.log('username');\n  console.log(username);\n  console.log('testData');\n  console.log(targetDoc);\n  useEffect(() => {\n    console.log(props.database[specialty]['hospitals'][hospital]['doctors'][username]); // setTargetDoc(props.database[specialty]['hospitals'][hospital]['doctors'][username]);\n  }, []); // let targetDoc = props.database[specialty]['hospitals'][hospital]['doctors'][username];\n  // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n  const clickDoctorCard = () => {\n    console.log(targetDoc); // const specialty = props.doctorInfo.specialty;\n    // const hospital = props.doctorInfo.hospital.replace(/\\s+/g, \"\");\n    // const username = props.doctorInfo.username.replace(/\\s+/g, \"\");\n    // [updateInfo['specialty']]['hospitals'][hospitalId]['doctors'][docID]\n    // props.getSpecialtyData(specialty)\n    //   .then((res) => {\n    //     let targetDoctor = res.data[specialty].hospitals[hospital].doctors[username];\n    //   }).catch((error) => {\n    //     console.error(error);\n    //   })\n  }; // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n\n  let singleCards = [];\n\n  if (targetDoc) {\n    console.log('im here');\n    console.log(targetDoc); //   singleCards = <Card className={classes.root} onClick={clickDoctorCard}>\n    //   <Grid container spacing={0}>\n    //     <Grid item xs={12} sm={3} className={classes.imageGrid}>\n    //       {/* doctor image */}\n    //       <CardMedia\n    //         component=\"img\"\n    //         className={classes.img}\n    //         image={docImg}\n    //       ></CardMedia>\n    //     </Grid>\n    //     <Grid item xs={12} sm={7}>\n    //       <CardContent>\n    //         {/* doctor details */}\n    //         <Typography variant=\"h6\" color=\"primary\">\n    //           {\"Dr.\" + targetDoc.DocName}\n    //         </Typography>\n    //         <br></br>\n    //         <Typography variant=\"subtitle1\" color=\"textSecondary\">\n    //           <strong>Specialty: </strong>{\" \"}\n    //           <span>{targetDoc[\"Specialty\"]}</span>\n    //         </Typography>\n    //         <Typography variant=\"subtitle1\" color=\"textSecondary\">\n    //           <strong>Hospital: </strong>\n    //           <span>{targetDoc[\"Hospital\"]}</span>\n    //         </Typography>\n    //         <br></br>\n    //         {/* private tag */}\n    //         <Chip color=\"secondary\" size=\"small\" label={targetDoc.Type}></Chip>\n    //       </CardContent>\n    //     </Grid>\n    //     <Grid item xs={12} sm={2}>\n    //       {/* Like icon + number of likes */}\n    //       <Box className={classes.likeBox}>\n    //         <FavoriteIcon style={{ color: \"red\" }} />\n    //         <Typography variant=\"body2\" color=\"primary\">\n    //           {targetDoc[\"NumberOfLikes\"]}\n    //         </Typography>\n    //       </Box>\n    //     </Grid>\n    //   </Grid>\n    // </Card>\n  } else {\n    singleCards = /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      style: {\n        marginLeft: '45%',\n        marginTop: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 19\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"secondary\",\n    style: {\n      marginLeft: '45%',\n      marginTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction HospitalCard(props) {\n  const classes = useStyles();\n\n  const clickHospitalCard = () => {\n    const specialty = props.hospitalInfo.relatedSpecialty;\n    const hospital = props.hospitalInfo.name.replace(/\\s+/g, \"\");\n    props.getSpecialtyData(specialty).then(res => {\n      let targetHospital = res.data[specialty].hospitals[hospital];\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // const handleClick = () => {\n  //   props.updateTargetHos(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/hospprofile\");\n  //   }\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    onClick: clickHospitalCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    className: classes.imageGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    className: classes.img,\n    image: hospImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, props.hospitalInfo[\"name\"]), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 15\n    }\n  }, \"Address: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }, props.hospitalInfo[\"address\"])), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }, \"Related Specialty: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 15\n    }\n  }, props.hospitalInfo[\"relatedSpecialty\"])), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 15\n    }\n  }, \"Phone: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }, props.hospitalInfo[\"phone\"])), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Chip, {\n    color: \"secondary\",\n    size: \"small\",\n    label: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.likeBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, props.hospitalInfo[\"likes\"])))));\n}\n\nLikeHistorySaved.propTypes = {// updateVerification: PropTypes.func.isRequired,\n  // getAllSearchData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  storedCredentials: state.user.credentials // searchData: state.data.searchData\n\n});\n\nconst mapActionsToProps = {// updateVerification,\n  // getAllSearchData\n};\nexport default connect(mapStateToProps, mapActionsToProps)(LikeHistorySaved);","map":{"version":3,"sources":["/Users/andychenhe/Desktop/may10_michelle 2/src/Components/docAccount/LikeHistorySaved.js"],"names":["React","Fragment","useEffect","useState","makeStyles","Box","Typography","Grid","Hidden","ArrowBackIosIcon","ToggleButton","ToggleButtonGroup","CircularProgress","Link","connect","PropTypes","axios","Card","CardContent","CardMedia","Chip","FavoriteIcon","docImg","hospImg","useStyles","theme","account","root","display","margin","img","width","breakpoints","only","down","imageGrid","flexDirection","justifyContent","alignItems","marginTop","marginBottom","likeBox","marginLeft","marginRight","LikeHistorySaved","props","classes","displayType","saveLike","setDisplay","handleDisplay","event","newDisplay","renderCount","setRenderCount","setSaveLike","doctors","hospitals","indicator","displayStoredCredentials","getStoredCredentials","then","res","stored","data","credentials","likedDoctors","likedHospitals","console","log","catch","error","userStoredCredentials","get","defaults","baseURL","getSpecialtyData","searchSpecialty","params","specialty","doctorCards","map","doctor","username","database","hospitalCards","hospital","name","anchor","backIcon","textTransform","DocCard","setSpecialty","doctorInfo","setHospital","replace","setUsername","targetDoc","setTargetDoc","clickDoctorCard","singleCards","HospitalCard","clickHospitalCard","hospitalInfo","relatedSpecialty","targetHospital","color","propTypes","mapStateToProps","state","storedCredentials","user","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect,useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\n// import DocCard from \"../../Components/results/DocCard\";\n// import HospCard from \"../../Components/results/HospitalCard\";\n\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport docImg from \"../../img/results/docAlex.png\";\nimport hospImg from \"../../img/results/pantaihospital.png\";\n\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// for small cards display, might delete later if naming conventions unify\n\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.account,\n\n  root: {\n    display: \"flex\",\n    margin: 30,\n  },\n\n  img: {\n    width: \"60%\",\n    [theme.breakpoints.only(\"md\")]: {\n      width: \"80%\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"40%\",\n    },\n  },\n\n  imageGrid: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 30,\n      marginBottom: 10,\n    },\n  },\n  likeBox: {\n    marginTop: 16,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 0,\n      alignItems: \"flex-start\",\n      marginLeft: 20,\n      marginRight: 20,\n      marginBottom: 20,\n    },\n  },\n}));\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nfunction LikeHistorySaved(props) {\n  const classes = useStyles();\n\n  // decide if the page should render Like History or Saved\n  const displayType = props.saveLike;\n\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0);\n\n  const [saveLike, setSaveLike] = React.useState({\n    doctors: [],\n    hospitals: []\n  })\n\n  const indicator = \"\";\n\n  useEffect(() => {\n    if (!indicator) {\n      return displayStoredCredentials();\n    }\n  }, []);\n\n\n  const displayStoredCredentials = () => {\n    getStoredCredentials()\n      .then((res) => {\n        // michelle 5/16: 从storedCredentials改成用axios了 所以现在uncomment这句 把原来的let stored = res[displayType]删掉\n        let stored = res.data.credentials[displayType];\n\n        let likedDoctors;\n        let likedHospitals;\n\n        // if the user has not never liked any doctors or hospitals\n        if (!stored) {\n          likedDoctors = [];\n          likedHospitals = [];\n        } else {\n          likedDoctors = stored.doctors ? stored.doctors : [];\n          likedHospitals = stored.hospitals ? stored.hospitals : [];\n        }\n        console.log('user credential:')\n        console.log(res)\n        setSaveLike({\n          doctors: likedDoctors,\n          hospitals: likedHospitals\n        });\n\n        // setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  let getStoredCredentials = async () => {\n    let userStoredCredentials = await axios.get( axios.defaults.baseURL + \"user\");\n    // console.log(userStoredCredentials)\n    return userStoredCredentials;\n  }\n\n\n  let getSpecialtyData = async (searchSpecialty) => {\n    let data =\n      await axios.get(axios.defaults.baseURL + \"getallsearchdata\",\n        {\n          params: {\n            specialty: searchSpecialty\n          }\n        })\n    return data;\n  }\n\n\n\n  // list of liked doctor cards on doctor tab\n  let doctorCards = saveLike.doctors.map(doctor => {\n    console.log('doctor:')\n    console.log(doctor);\n    return (\n      <DocCard key={doctor.username} doctorInfo={doctor} getSpecialtyData={getSpecialtyData} database = {props.database} />\n    )\n  })\n\n  // list of liked hospitals cards on hospital tab\n  let hospitalCards = saveLike.hospitals.map(hospital => {\n    return (\n      <HospitalCard key={hospital.name} hospitalInfo={hospital} getSpecialtyData={getSpecialtyData} database = {props.database} />\n    )\n  })\n\n    return (\n      <a id=\"likehistory\" className={classes.anchor}>\n        <Grid container spacing={0}>\n          <Grid item xs={1}></Grid>\n          <Grid item xs={10} md={8}>\n            <Box display=\"flex\" mt={4} mb={3} flexWrap=\"wrap\" alignItems=\"center\">\n              <Box flexGrow={1} flexDirection=\"row\" mb={1}>\n                <Typography variant=\"h5\" color=\"primary\">\n                  {/* Back button, 手机屏幕才会出现 */}\n                  <Hidden mdUp>\n                    {/* <IconButton> */}\n                    <Link to=\"docaccount\">\n                      <ArrowBackIosIcon\n                        className={classes.backIcon}\n                        fontSize=\"small\"\n                      />\n                    </Link>\n                    {/* </IconButton> */}\n                  </Hidden>\n                  <strong>\n                    {displayType === \"likeHistory\" ? \"Like History\" : \"Saved\"}\n                  </strong>\n                </Typography>\n              </Box>\n              {/* Display by Doctor/Hospital buttons */}\n              <Box>\n                <ToggleButtonGroup\n                  value={display}\n                  exclusive\n                  onChange={handleDisplay}\n                >\n                  <ToggleButton value=\"doctor\" color=\"primary\">\n                    <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                      Doctor\n                  </Typography>\n                  </ToggleButton>\n                  <ToggleButton value=\"hospital\">\n                    <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                      Hospital\n                  </Typography>\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </Box>{\" \"}\n            </Box>\n\n            <br></br>\n            <br></br>\n\n            {/* if user clicks on display by 'doctor', then render doctor cards */}\n            {display === \"doctor\" ? (\n              <Fragment>{doctorCards}</Fragment>\n            ) : (\n                <Fragment>{hospitalCards}</Fragment>\n              )}\n          </Grid>\n          <Grid item xs={1} md={3}></Grid>\n        </Grid>\n      </a>\n    );\n  }\n// }\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// might be deleted later if naming conventions unify\n\n\n\n// Each indiivdual doctor card\nfunction DocCard(props) {\n  const classes = useStyles();\n  console.log(props.database);\n  const [specialty, setSpecialty] = React.useState(props.doctorInfo.specialty);\n  const [hospital, setHospital] = React.useState(props.doctorInfo.hospital.replace(/\\s+/g, \"\"));\n  const [username, setUsername] = React.useState(props.doctorInfo.username.replace(/\\s+/g, \"\"));\n  const [targetDoc, setTargetDoc] = React.useState();\n  console.log('specialty');\n  console.log(specialty);\n  console.log('hospital');\n  console.log(hospital);\n  console.log('username');\n  console.log(username);\n  console.log('testData');\n  console.log(targetDoc);\n\n  useEffect(() => {\n    console.log(props.database[specialty]['hospitals'][hospital]['doctors'][username]);\n    // setTargetDoc(props.database[specialty]['hospitals'][hospital]['doctors'][username]);\n  }, []);\n\n  // let targetDoc = props.database[specialty]['hospitals'][hospital]['doctors'][username];\n\n  // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n  const clickDoctorCard = () => {\n    console.log(targetDoc);\n    // const specialty = props.doctorInfo.specialty;\n    // const hospital = props.doctorInfo.hospital.replace(/\\s+/g, \"\");\n    // const username = props.doctorInfo.username.replace(/\\s+/g, \"\");\n\n    // [updateInfo['specialty']]['hospitals'][hospitalId]['doctors'][docID]\n\n    // props.getSpecialtyData(specialty)\n    //   .then((res) => {\n    //     let targetDoctor = res.data[specialty].hospitals[hospital].doctors[username];\n    //   }).catch((error) => {\n    //     console.error(error);\n    //   })\n  }\n\n\n  // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n  let singleCards = [];\n  if(targetDoc){\n    console.log('im here');\n    console.log(targetDoc);\n  //   singleCards = <Card className={classes.root} onClick={clickDoctorCard}>\n  //   <Grid container spacing={0}>\n  //     <Grid item xs={12} sm={3} className={classes.imageGrid}>\n  //       {/* doctor image */}\n  //       <CardMedia\n  //         component=\"img\"\n  //         className={classes.img}\n  //         image={docImg}\n  //       ></CardMedia>\n  //     </Grid>\n  //     <Grid item xs={12} sm={7}>\n  //       <CardContent>\n  //         {/* doctor details */}\n  //         <Typography variant=\"h6\" color=\"primary\">\n  //           {\"Dr.\" + targetDoc.DocName}\n  //         </Typography>\n  //         <br></br>\n  //         <Typography variant=\"subtitle1\" color=\"textSecondary\">\n  //           <strong>Specialty: </strong>{\" \"}\n  //           <span>{targetDoc[\"Specialty\"]}</span>\n  //         </Typography>\n  //         <Typography variant=\"subtitle1\" color=\"textSecondary\">\n  //           <strong>Hospital: </strong>\n  //           <span>{targetDoc[\"Hospital\"]}</span>\n  //         </Typography>\n  //         <br></br>\n  //         {/* private tag */}\n  //         <Chip color=\"secondary\" size=\"small\" label={targetDoc.Type}></Chip>\n  //       </CardContent>\n  //     </Grid>\n  //     <Grid item xs={12} sm={2}>\n  //       {/* Like icon + number of likes */}\n  //       <Box className={classes.likeBox}>\n  //         <FavoriteIcon style={{ color: \"red\" }} />\n  //         <Typography variant=\"body2\" color=\"primary\">\n  //           {targetDoc[\"NumberOfLikes\"]}\n  //         </Typography>\n  //       </Box>\n  //     </Grid>\n  //   </Grid>\n  // </Card>\n\n  } else {\n    singleCards = <CircularProgress color=\"secondary\" style={{ marginLeft: '45%', marginTop: '5%' }} />\n  }\n\n  return (\n    <CircularProgress color=\"secondary\" style={{ marginLeft: '45%', marginTop: '5%' }} />\n  );\n}\n\n\nfunction HospitalCard(props) {\n  const classes = useStyles();\n\n  const clickHospitalCard = () => {\n    const specialty = props.hospitalInfo.relatedSpecialty;\n    const hospital = props.hospitalInfo.name.replace(/\\s+/g, \"\");\n\n    props.getSpecialtyData(specialty)\n      .then((res) => {\n        let targetHospital = res.data[specialty].hospitals[hospital];\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n\n  // const handleClick = () => {\n  //   props.updateTargetHos(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/hospprofile\");\n  //   }\n  // };\n\n\n\n  return (\n    <Card className={classes.root} onClick={clickHospitalCard}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={3} className={classes.imageGrid}>\n          {/* hospital logo image */}\n          <CardMedia\n            component=\"img\"\n            className={classes.img}\n            image={hospImg}\n          ></CardMedia>\n        </Grid>\n\n        <Grid item xs={12} sm={7}>\n          <CardContent>\n            {/* hospital details */}\n            <Typography variant=\"h6\" color=\"primary\">\n              {props.hospitalInfo[\"name\"]}\n            </Typography>\n            <br></br>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Address: </strong>\n              <span>{props.hospitalInfo[\"address\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Related Specialty: </strong>\n              <span>{props.hospitalInfo[\"relatedSpecialty\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Phone: </strong>\n              <span>{props.hospitalInfo[\"phone\"]}</span>\n            </Typography>\n\n            <br></br>\n            <Chip color=\"secondary\" size=\"small\" label=\"Private\"></Chip>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          {/* like icon + number of likes */}\n          <Box className={classes.likeBox}>\n            <FavoriteIcon style={{ color: \"red\" }} />\n            <Typography variant=\"body2\" color=\"primary\">\n              {props.hospitalInfo[\"likes\"]}\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\n\n\n\n\n\n\n\nLikeHistorySaved.propTypes = {\n  // updateVerification: PropTypes.func.isRequired,\n  // getAllSearchData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  storedCredentials: state.user.credentials,\n  // searchData: state.data.searchData\n});\n\nconst mapActionsToProps = {\n  // updateVerification,\n  // getAllSearchData\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(LikeHistorySaved);"]},"metadata":{},"sourceType":"module"}
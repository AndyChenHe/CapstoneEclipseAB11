{"ast":null,"code":"import _slicedToArray from\"/Users/andychenhe/Desktop/CapstoneEclipseAB11/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/andychenhe/Desktop/CapstoneEclipseAB11/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{Fragment}from\"react\";import{connect}from\"react-redux\";import{makeStyles}from\"@material-ui/core/styles\";import Dialog from\"@material-ui/core/Dialog\";import Chip from\"@material-ui/core/Chip\";import Button from\"@material-ui/core/Button\";import Box from\"@material-ui/core/Box\";import Typography from\"@material-ui/core/Typography\";import DialogActions from\"@material-ui/core/DialogActions\";import Hidden from\"@material-ui/core/Hidden\";import Divider from\"@material-ui/core/Divider\";import EditOutlinedIcon from\"@material-ui/icons/EditOutlined\";var useStyles=makeStyles(function(theme){var _tagDialog;return{editTagDialog:{display:\"flex\",justifyContent:\"center\",flexWrap:\"wrap\",listStyle:\"none\",padding:theme.spacing(0.5),margin:0},tag:{margin:theme.spacing(0.5)},tagDialog:(_tagDialog={display:\"flex\",flexWrap:\"wrap\",listStyle:\"none\",padding:theme.spacing(0.5),margin:0},_defineProperty(_tagDialog,theme.breakpoints.down(\"xs\"),{marginLeft:10}),_defineProperty(_tagDialog,\"marginBottom\",20),_tagDialog),editTagsButton:_defineProperty({},theme.breakpoints.down(\"xs\"),{marginLeft:20}),line:_defineProperty({},theme.breakpoints.down(\"xs\"),{border:\"5px solid rgba(0, 0, 0, 0.05)\"}),reviewTagsBox:_defineProperty({},theme.breakpoints.down(\"xs\"),{justifyContent:\"left\",alignItems:\"left\",marginLeft:20}),divider:{height:2,width:115,backgroundColor:\"#FF8686\"}};});// Edit Tags (用在DocInfo.js)\n// 目前doctor所有的tags and edit tags 都是hardcoded， 麻烦你了\nfunction Tags(props){var classes=useStyles();// load user authenticate \nvar authenticated=props.authenticated;// 这是点进去edit tags 会出现的tags选项\nvar _React$useState=React.useState([{key:0,label:\"Attentive\"},{key:1,label:\"Bedside manner\"},{key:2,label:\"Empathetic\"},{key:3,label:\"Enthusiastic\"},{key:4,label:\"Friendly\"},{key:5,label:\"Honest\"},{key:6,label:\"Knowledgeable\"},{key:7,label:\"Passionate\"},{key:8,label:\"Patient\"},{key:9,label:\"Respectful\"},{key:10,label:\"Responsible\"},{key:11,label:\"Trustworthy\"}]),_React$useState2=_slicedToArray(_React$useState,2),editTags=_React$useState2[0],displayEditedTags=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),open=_React$useState4[0],setOpen=_React$useState4[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(value){setOpen(false);};// 这里我想说点了一个tag，就会换色（从outlined 换成default)\n// 但是我不会写那个logic,所以目前是点了一个tag,所有tag都一起换色了。。麻烦你了\n// 还有需要弄一个logic是 user再点一次又会换成原来outlined的style,麻烦你了\n// const [color, setColor] = React.useState(\"outlined\");\n// const handleClick = () => {\n//   setColor(\"default\");\n// };\n// create a tag list that contains all tags for this doctor\nvar tagList=[];props.tagInfo.map(function(tag){tagList.push(/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"li\",{key:tag.TagName},/*#__PURE__*/React.createElement(Chip,{label:tag.TagName+' ('+tag.Number+')',className:classes.tag,color:\"secondary\",size:\"small\"}))));});console.log(props.tagInfo);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Hidden,{smUp:true},/*#__PURE__*/React.createElement(\"hr\",{className:classes.line}),/*#__PURE__*/React.createElement(Box,{mt:2,mb:2,display:\"flex\",flexDirection:\"column\",className:classes.reviewTagsBox},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",color:\"primary\"},\"Review Tags\"),/*#__PURE__*/React.createElement(Divider,{className:classes.divider}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.tagDialog},tagList,\" \",authenticated?/*#__PURE__*/React.createElement(Button,{color:\"primary\",startIcon:/*#__PURE__*/React.createElement(EditOutlinedIcon,null),onClick:handleClickOpen,style:{textTransform:\"none\"},className:classes.editTagsButton},\"Edit Tags\"):\"\"),/*#__PURE__*/React.createElement(Dialog,{onClose:handleClose,open:open,maxWidth:\"xs\"},/*#__PURE__*/React.createElement(Typography,{variant:\"Body\",style:{margin:20}},\"Please select tag(s) that best describe this doctor from the list below:\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.editTagDialog},editTags.map(function(tag){// let index = props.tagInfo.findIndex(eachTag => eachTag.tagName == tag)\n// // if the \n// let selected = (index > -1)? \"true\" : \"false\";\nreturn/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(PreDefinedTag,{tag:tag}));})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,variant:\"outlined\",color:\"primary\",style:{textTransform:\"none\",margin:10}},\"Done\"))));}function PreDefinedTag(props){var classes=useStyles();var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),selected=_React$useState6[0],selectUnselectTag=_React$useState6[1];var handleClick=function handleClick(){selectUnselectTag(!selected);};return/*#__PURE__*/React.createElement(\"li\",{key:props.tag.key},/*#__PURE__*/React.createElement(Chip,{label:props.tag.label,className:classes.tag,color:\"secondary\",variant:selected?\"default\":\"secondary\",onClick:handleClick}));}function mapStateToProps(state){return{authenticated:state.user.authenticated};}export default connect(mapStateToProps)(Tags);","map":{"version":3,"sources":["/Users/andychenhe/Desktop/CapstoneEclipseAB11/src/Components/profile/DocTags.js"],"names":["React","Fragment","connect","makeStyles","Dialog","Chip","Button","Box","Typography","DialogActions","Hidden","Divider","EditOutlinedIcon","useStyles","theme","editTagDialog","display","justifyContent","flexWrap","listStyle","padding","spacing","margin","tag","tagDialog","breakpoints","down","marginLeft","editTagsButton","line","border","reviewTagsBox","alignItems","divider","height","width","backgroundColor","Tags","props","classes","authenticated","useState","key","label","editTags","displayEditedTags","open","setOpen","handleClickOpen","handleClose","value","tagList","tagInfo","map","push","TagName","Number","console","log","textTransform","PreDefinedTag","selected","selectUnselectTag","handleClick","mapStateToProps","state","user"],"mappings":"0UAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CAEA,GAAMC,CAAAA,SAAS,CAAGV,UAAU,CAAC,SAACW,KAAD,uBAAY,CACvCC,aAAa,CAAE,CACbC,OAAO,CAAE,MADI,CAEbC,cAAc,CAAE,QAFH,CAGbC,QAAQ,CAAE,MAHG,CAIbC,SAAS,CAAE,MAJE,CAKbC,OAAO,CAAEN,KAAK,CAACO,OAAN,CAAc,GAAd,CALI,CAMbC,MAAM,CAAE,CANK,CADwB,CASvCC,GAAG,CAAE,CACHD,MAAM,CAAER,KAAK,CAACO,OAAN,CAAc,GAAd,CADL,CATkC,CAavCG,SAAS,cACPR,OAAO,CAAE,MADF,CAEPE,QAAQ,CAAE,MAFH,CAGPC,SAAS,CAAE,MAHJ,CAIPC,OAAO,CAAEN,KAAK,CAACO,OAAN,CAAc,GAAd,CAJF,CAKPC,MAAM,CAAE,CALD,6BAMNR,KAAK,CAACW,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CANM,CAMyB,CAC9BC,UAAU,CAAE,EADkB,CANzB,4CASO,EATP,aAb8B,CAyBvCC,cAAc,oBACXd,KAAK,CAACW,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CADW,CACoB,CAC9BC,UAAU,CAAE,EADkB,CADpB,CAzByB,CA+BvCE,IAAI,oBACDf,KAAK,CAACW,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CADC,CAC8B,CAC9BI,MAAM,CAAE,+BADsB,CAD9B,CA/BmC,CAoCvCC,aAAa,oBACVjB,KAAK,CAACW,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CADU,CACqB,CAC9BT,cAAc,CAAE,MADc,CAE9Be,UAAU,CAAE,MAFkB,CAG9BL,UAAU,CAAE,EAHkB,CADrB,CApC0B,CA2CvCM,OAAO,CAAE,CACPC,MAAM,CAAE,CADD,CAEPC,KAAK,CAAE,GAFA,CAGPC,eAAe,CAAE,SAHV,CA3C8B,CAAZ,EAAD,CAA5B,CAqDA;AACA;AACA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAEnB,GAAMC,CAAAA,OAAO,CAAG1B,SAAS,EAAzB,CACA;AACA,GAAM2B,CAAAA,aAAa,CAAGF,KAAK,CAACE,aAA5B,CACA;AALmB,oBAMmBxC,KAAK,CAACyC,QAAN,CAAe,CACnD,CAAEC,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,WAAjB,CADmD,CAEnD,CAAED,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,gBAAjB,CAFmD,CAGnD,CAAED,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,YAAjB,CAHmD,CAInD,CAAED,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,cAAjB,CAJmD,CAKnD,CAAED,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,UAAjB,CALmD,CAMnD,CAAED,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,QAAjB,CANmD,CAOnD,CAAED,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,eAAjB,CAPmD,CAQnD,CAAED,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,YAAjB,CARmD,CASnD,CAAED,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,SAAjB,CATmD,CAUnD,CAAED,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,YAAjB,CAVmD,CAWnD,CAAED,GAAG,CAAE,EAAP,CAAWC,KAAK,CAAE,aAAlB,CAXmD,CAYnD,CAAED,GAAG,CAAE,EAAP,CAAWC,KAAK,CAAE,aAAlB,CAZmD,CAAf,CANnB,oDAMZC,QANY,qBAMFC,iBANE,0CAqBK7C,KAAK,CAACyC,QAAN,CAAe,KAAf,CArBL,qDAqBZK,IArBY,qBAqBNC,OArBM,qBAuBnB,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BD,OAAO,CAAC,IAAD,CAAP,CACD,CAFD,CAIA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7BH,OAAO,CAAC,KAAD,CAAP,CACD,CAFD,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,GAAII,CAAAA,OAAO,CAAG,EAAd,CACAb,KAAK,CAACc,OAAN,CAAcC,GAAd,CAAkB,SAAC9B,GAAD,CAAS,CAEzB4B,OAAO,CAACG,IAAR,cACE,oBAAC,QAAD,mBACE,0BAAI,GAAG,CAAE/B,GAAG,CAACgC,OAAb,eACE,oBAAC,IAAD,EACE,KAAK,CAAEhC,GAAG,CAACgC,OAAJ,CAAc,IAAd,CAAqBhC,GAAG,CAACiC,MAAzB,CAAkC,GAD3C,CAEE,SAAS,CAAEjB,OAAO,CAAChB,GAFrB,CAGE,KAAK,CAAC,WAHR,CAIE,IAAI,CAAC,OAJP,EADF,CADF,CADF,EAYD,CAdD,EAgBAkC,OAAO,CAACC,GAAR,CAAYpB,KAAK,CAACc,OAAlB,EAEA,mBACE,4CACE,oBAAC,MAAD,EAAQ,IAAI,KAAZ,eACE,0BAAI,SAAS,CAAEb,OAAO,CAACV,IAAvB,EADF,cAEE,oBAAC,GAAD,EACE,EAAE,CAAE,CADN,CAEE,EAAE,CAAE,CAFN,CAGE,OAAO,CAAC,MAHV,CAIE,aAAa,CAAC,QAJhB,CAKE,SAAS,CAAEU,OAAO,CAACR,aALrB,eAOE,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,KAAK,CAAC,SAA/B,gBAPF,cAUE,oBAAC,OAAD,EAAS,SAAS,CAAEQ,OAAO,CAACN,OAA5B,EAVF,CAFF,CADF,cAiBE,2BAAK,SAAS,CAAEM,OAAO,CAACf,SAAxB,EACG2B,OADH,CACY,GADZ,CAGGX,aAAa,cACZ,oBAAC,MAAD,EACE,KAAK,CAAC,SADR,CAEE,SAAS,cAAE,oBAAC,gBAAD,MAFb,CAGE,OAAO,CAAEQ,eAHX,CAIE,KAAK,CAAE,CAAEW,aAAa,CAAE,MAAjB,CAJT,CAKE,SAAS,CAAEpB,OAAO,CAACX,cALrB,cADY,CAWV,EAdN,CAjBF,cAmCE,oBAAC,MAAD,EAAQ,OAAO,CAAEqB,WAAjB,CAA8B,IAAI,CAAEH,IAApC,CAA0C,QAAQ,CAAC,IAAnD,eACE,oBAAC,UAAD,EAAY,OAAO,CAAC,MAApB,CAA2B,KAAK,CAAE,CAAExB,MAAM,CAAE,EAAV,CAAlC,6EADF,cAME,2BAAK,SAAS,CAAEiB,OAAO,CAACxB,aAAxB,EACG6B,QAAQ,CAACS,GAAT,CAAa,SAAC9B,GAAD,CAAS,CAErB;AACA;AACA;AAIE,mBACE,oBAAC,QAAD,mBACE,oBAAC,aAAD,EAAe,GAAG,CAAEA,GAApB,EADF,CADF,CAKH,CAbA,CADH,CANF,cAwBE,oBAAC,aAAD,mBACE,oBAAC,MAAD,EACE,OAAO,CAAE0B,WADX,CAEE,OAAO,CAAC,UAFV,CAGE,KAAK,CAAC,SAHR,CAIE,KAAK,CAAE,CAAEU,aAAa,CAAE,MAAjB,CAAyBrC,MAAM,CAAE,EAAjC,CAJT,SADF,CAxBF,CAnCF,CADF,CAyED,CAED,QAASsC,CAAAA,aAAT,CAAuBtB,KAAvB,CAA8B,CAC5B,GAAMC,CAAAA,OAAO,CAAG1B,SAAS,EAAzB,CAD4B,qBAGUb,KAAK,CAACyC,QAAN,CAAe,KAAf,CAHV,qDAGrBoB,QAHqB,qBAGXC,iBAHW,qBAK5B,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBD,iBAAiB,CAAC,CAACD,QAAF,CAAjB,CACD,CAFD,CAIA,mBACE,0BAAI,GAAG,CAAEvB,KAAK,CAACf,GAAN,CAAUmB,GAAnB,eACE,oBAAC,IAAD,EACE,KAAK,CAAEJ,KAAK,CAACf,GAAN,CAAUoB,KADnB,CAEE,SAAS,CAAEJ,OAAO,CAAChB,GAFrB,CAGE,KAAK,CAAC,WAHR,CAIE,OAAO,CAAEsC,QAAQ,CAAG,SAAH,CAAe,WAJlC,CAKE,OAAO,CAAEE,WALX,EADF,CADF,CAWD,CAGD,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,MAAO,CAAEzB,aAAa,CAAEyB,KAAK,CAACC,IAAN,CAAW1B,aAA5B,CAAP,CACD,CAED,cAAetC,CAAAA,OAAO,CAAC8D,eAAD,CAAP,CAAyB3B,IAAzB,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Divider from \"@material-ui/core/Divider\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  editTagDialog: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  tag: {\n    margin: theme.spacing(0.5),\n  },\n\n  tagDialog: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0,\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 10,\n    },\n    marginBottom: 20,\n  },\n\n  editTagsButton: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n    },\n  },\n\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\",\n    },\n  },\n  reviewTagsBox: {\n    [theme.breakpoints.down(\"xs\")]: {\n      justifyContent: \"left\",\n      alignItems: \"left\",\n      marginLeft: 20,\n    },\n  },\n  divider: {\n    height: 2,\n    width: 115,\n    backgroundColor: \"#FF8686\",\n  },\n}));\n\n\n\n\n// Edit Tags (用在DocInfo.js)\n// 目前doctor所有的tags and edit tags 都是hardcoded， 麻烦你了\nfunction Tags(props) {\n\n  const classes = useStyles();\n  // load user authenticate \n  const authenticated = props.authenticated;\n  // 这是点进去edit tags 会出现的tags选项\n  const [editTags, displayEditedTags] = React.useState([\n    { key: 0, label: \"Attentive\" },\n    { key: 1, label: \"Bedside manner\" },\n    { key: 2, label: \"Empathetic\" },\n    { key: 3, label: \"Enthusiastic\" },\n    { key: 4, label: \"Friendly\" },\n    { key: 5, label: \"Honest\" },\n    { key: 6, label: \"Knowledgeable\" },\n    { key: 7, label: \"Passionate\" },\n    { key: 8, label: \"Patient\" },\n    { key: 9, label: \"Respectful\" },\n    { key: 10, label: \"Responsible\" },\n    { key: 11, label: \"Trustworthy\" },\n  ]);\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n\n  // 这里我想说点了一个tag，就会换色（从outlined 换成default)\n  // 但是我不会写那个logic,所以目前是点了一个tag,所有tag都一起换色了。。麻烦你了\n  // 还有需要弄一个logic是 user再点一次又会换成原来outlined的style,麻烦你了\n  // const [color, setColor] = React.useState(\"outlined\");\n  // const handleClick = () => {\n  //   setColor(\"default\");\n  // };\n\n  // create a tag list that contains all tags for this doctor\n  let tagList = [];\n  props.tagInfo.map((tag) => {\n\n    tagList.push((\n      <Fragment>\n        <li key={tag.TagName}>\n          <Chip\n            label={tag.TagName + ' (' + tag.Number + ')'}\n            className={classes.tag}\n            color=\"secondary\"\n            size=\"small\"\n          />\n        </li>\n      </Fragment>\n    ));\n  })\n\n  console.log(props.tagInfo)\n\n  return (\n    <div>\n      <Hidden smUp>\n        <hr className={classes.line}></hr>\n        <Box\n          mt={2}\n          mb={2}\n          display=\"flex\"\n          flexDirection=\"column\"\n          className={classes.reviewTagsBox}\n        >\n          <Typography variant=\"h6\" color=\"primary\">\n            Review Tags\n          </Typography>\n          <Divider className={classes.divider} />\n        </Box>\n      </Hidden>\n      {/* 显示这个doctor现在有的tags, 目前是hardcoded的， 麻烦你了 */}\n      <div className={classes.tagDialog}>\n        {tagList}{\" \"}\n        {/* 如果登入了，edit tags的button会出现，否则不会出现 */}\n        {authenticated ? (\n          <Button\n            color=\"primary\"\n            startIcon={<EditOutlinedIcon />}\n            onClick={handleClickOpen}\n            style={{ textTransform: \"none\" }}\n            className={classes.editTagsButton}\n          >\n            Edit Tags\n          </Button>\n        ) : (\n            \"\"\n          )}\n      </div>\n\n      <Dialog onClose={handleClose} open={open} maxWidth=\"xs\">\n        <Typography variant=\"Body\" style={{ margin: 20 }}>\n          Please select tag(s) that best describe this doctor from the list\n          below:\n        </Typography>\n        {/* 弹窗出现所有tags选项 */}\n        <div className={classes.editTagDialog}>\n          {editTags.map((tag) => {\n\n            // let index = props.tagInfo.findIndex(eachTag => eachTag.tagName == tag)\n            // // if the \n            // let selected = (index > -1)? \"true\" : \"false\";\n\n            \n\n              return (\n                <Fragment>\n                  <PreDefinedTag tag={tag} />\n                </Fragment>\n              );\n          })}\n        </div>\n\n        {/* Done button， 目前是点了就关掉窗口，没有save user点了什么 */}\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ textTransform: \"none\", margin: 10 }}\n          >\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nfunction PreDefinedTag(props) {\n  const classes = useStyles();\n\n  const [selected, selectUnselectTag] = React.useState(false);\n\n  const handleClick = () => {\n    selectUnselectTag(!selected);\n  };\n\n  return (\n    <li key={props.tag.key}>\n      <Chip\n        label={props.tag.label}\n        className={classes.tag}\n        color=\"secondary\"\n        variant={selected ? \"default\" : \"secondary\"}\n        onClick={handleClick}\n      />\n    </li>\n  )\n}\n\n\nfunction mapStateToProps(state) {\n  return { authenticated: state.user.authenticated };\n}\n\nexport default connect(mapStateToProps)(Tags);\n"]},"metadata":{},"sourceType":"module"}
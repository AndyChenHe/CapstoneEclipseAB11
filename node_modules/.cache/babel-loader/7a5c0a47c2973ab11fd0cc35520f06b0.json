{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Downloads/may10_michelle/src/Components/profile/DocInfo.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\"; //icons\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport PropTypes from \"prop-types\";\nimport { changeDocLikeStatus } from \"../../redux/actions/userActions\";\nimport { updateDoctorLikes } from \"../../redux/actions/dataActions\"; //images\n\nimport docImg from \"../../img/results/docAlex.png\"; //components\n\nimport CovidAlert from \"../Alert\";\nimport DocTags from \"./DocTags\";\nconst useStyles = makeStyles(theme => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  //return to doctors button\n  returnBox: {\n    marginLeft: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 20\n    }\n  },\n  //doctor image\n  img: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"contain\"\n  },\n  profileGrid: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\"\n    }\n  }\n})); //for Doc image + basic info + likes\n//edit tags section is imported from DocTags.js\n\nfunction DocInfo(props) {\n  const classes = useStyles();\n\n  const backToRes = () => {\n    if (props.history != null) {\n      if (props.backTo == \"resultsPage\") {\n        props.history.push(\"/results\");\n      } else if (props.backTo == \"profilePage\") {\n        props.history.push(\"/hospprofile\");\n      }\n    }\n  };\n\n  const authenticated = props.authenticated;\n  const [renderCount, setRenderCount] = React.useState(0);\n  const [likeSaveInfo, setState] = React.useState({\n    // like functionality\n    hasLiked: false,\n    likedList: [],\n    numLikes: 0,\n    // save functionality\n    hasSaved: false,\n    savedList: []\n  }); // only get called once in the first render\n\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    getStoredData().then(res => {\n      // like\n      let listOfLikes;\n      let liked = false; // if the user has never liked any doctors\n\n      if (!res[1].likeHistory) {\n        listOfLikes = [];\n      } else {\n        if (res[1].likeHistory.doctors) {\n          listOfLikes = res[1].likeHistory.doctors; // if the user has liked this particular doctor before\n\n          const index = res[1].likeHistory.doctors.findIndex(doctor => doctor.username == \"verify\");\n\n          if (index != -1) {\n            liked = true;\n          }\n        } else {\n          listOfLikes = [];\n        }\n      } // save\n\n\n      let listOfSaves;\n      let saved = false; // if the user has never saved any doctors\n\n      if (!res[1].saved) {\n        listOfSaves = [];\n      } else {\n        if (res[1].saved.doctors) {\n          listOfSaves = res[1].saved.doctors; // if the user has saved this particular doctor before\n\n          const index = res[1].saved.doctors.findIndex(doctor => doctor.username == \"verify\");\n\n          if (index != -1) {\n            saved = true;\n          }\n        } else {\n          listOfSaves = [];\n        }\n      }\n\n      setState({\n        hasLiked: liked,\n        likedList: listOfLikes,\n        numLikes: res[0].likes ? res[0].likes : 0,\n        hasSaved: saved,\n        savedList: listOfSaves\n      });\n      setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // wait for returned props from firebase to be ready\n\n\n  let getStoredData = async () => {\n    let [storedSearchInfo, userStoredCredentials] = await Promise.all([props.searchInfo, props.storedCredentials]);\n    return [storedSearchInfo, userStoredCredentials];\n  }; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LIKE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // when the like button is pressed\n\n\n  const toggleLikeUnlike = () => {\n    // the user has liked this doctor before\n    if (likeSaveInfo.hasLiked) {\n      let likedListCopy = likeSaveInfo.likedList;\n      let index = likedListCopy.findIndex(doctor => doctor.username == \"verify\"); // remove this doctor from the user like list\n\n      likedListCopy.splice(index, 1);\n      setState(prevState => ({ ...likeSaveInfo,\n        likedList: likedListCopy,\n        // change to unlike\n        hasLiked: false,\n        numLikes: prevState.numLikes - 1\n      }));\n    } else {\n      // the newly liked doctor's information to be added to the user's liked doctor list\n      const newDocInfo = {\n        hospital: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        languages: [\"English\", \"Mandarin\"],\n        likes: likeSaveInfo.numLikes,\n        name: \"Alex Leow\",\n        specialty: \"Gastroenterology\",\n        type: \"Private\",\n        username: \"verify\"\n      };\n      setState(prevState => ({\n        // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        likedList: likeSaveInfo.likedList.length == 0 ? [newDocInfo] : [prevState.likedList, newDocInfo],\n        hasLiked: true,\n        numLikes: prevState.numLikes + 1\n      }));\n    }\n  }; // triggered if the like button is pressed (which sets state)\n\n\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleLike();\n    }\n  }, [likeSaveInfo.hasLiked, likeSaveInfo.likedList]);\n\n  const toggleLike = () => {\n    waitLikeUpdate().then(res => {\n      props.changeDocLikeStatus(res[0]);\n      const updateInfo = {\n        specialty: \"Gastroenterology\",\n        hospital: \"Pantai Hospital Kuala Lumpur\",\n        username: \"verify\",\n        likes: res[1]\n      };\n      props.updateDoctorLikes(updateInfo);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let waitLikeUpdate = async () => {\n    let [likedList, likes] = await Promise.all([likeSaveInfo.likedList, likeSaveInfo.numLikes]);\n    return [likedList, likes];\n  }; // if the user has liked this doctor before: filled heart, otherwise outlined heart\n\n\n  const LikeIcon = likeSaveInfo.hasLiked ? FavoriteIcon : FavoriteBorderOutlinedIcon; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SAVE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // when the save button is pressed\n\n  const toggleSaveUnsave = () => {\n    // the user has saved this doctor before\n    if (likeSaveInfo.hasSaved) {\n      let savedListCopy = likeSaveInfo.savedList;\n      let index = savedListCopy.findIndex(doctor => doctor.username == \"verify\"); // remove this doctor from the user saved list\n\n      savedListCopy.splice(index, 1);\n      setState({ ...likeSaveInfo,\n        savedList: savedListCopy,\n        hasSaved: false\n      });\n    } else {\n      // the newly saved doctor's information to be added to the user's saved doctor list\n      const newDocInfo = {\n        hospital: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        languages: [\"English\", \"Mandarin\"],\n        likes: likeSaveInfo.numLikes,\n        name: \"Alex Leow\",\n        specialty: \"Gastroenterology\",\n        type: \"Private\",\n        username: \"verify\"\n      };\n      setState(prevState => ({ // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        ...likeSaveInfo,\n        savedList: likeSaveInfo.savedList.length == 0 ? [newDocInfo] : [prevState.savedList, newDocInfo],\n        hasSaved: true\n      }));\n    }\n  }; // triggered if the save button is pressed (which sets state)\n\n\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleSave();\n    }\n  }, [likeSaveInfo.hasSaved, likeSaveInfo.savedList]);\n\n  const toggleSave = () => {\n    waitSaveUpdate().then(res => {\n      props.changeDocSaveStatus(res);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let waitSaveUpdate = async () => {\n    let savedList = await likeSaveInfo.savedList;\n    return savedList;\n  }; // if the user has liked this doctor before: filled heart, otherwise outlined heart\n\n\n  const SaveIcon = likeSaveInfo.hasSaved ? BookmarkIcon : BookmarkBorderOutlinedIcon;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.covidBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CovidAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 3,\n    mb: 3,\n    className: classes.returnBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      fontSize: 16,\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: backToRes,\n    startIcon: /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }\n  }, \"Return to Doctors\")), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 150,\n      height: 180\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: docImg,\n    alt: \"docimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleLikeUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LikeIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 15\n    }\n  }, likeSaveInfo.numLikes.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 200,\n      height: 250\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: docImg,\n    alt: \"docimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }, \"Dr.\" + props.targetDoc[\"DocName\"])), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(ErrorOutlineOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 28\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(ShareOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 28\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 15\n    }\n  }, \"Share\"), /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 28\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: toggelSaveUnsave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 15\n    }\n  }, \"Save\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }\n  }, \"Dr.\" + props.targetDoc[\"DocName\"])), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    className: classes.profileGrid,\n    mt: 3,\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 15\n    }\n  }, \"Specialty: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 15\n    }\n  }, props.targetDoc[\"Specialty\"], \" \")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 15\n    }\n  }, \"Years of Practice: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 15\n    }\n  }, props.targetDoc[\"YearsofPractice\"] + \" years\", \" \")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 15\n    }\n  }, \"Hospital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 15\n    }\n  }, props.targetDoc[\"Hospital\"]), /*#__PURE__*/React.createElement(Chip, {\n    style: {\n      marginLeft: 10\n    },\n    color: \"primary\",\n    size: \"small\",\n    label: props.targetDoc[\"Type\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationOnOutlinedIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 17\n    }\n  }, props.targetDoc[\"Address\"]))), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PhoneOutlinedIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 17\n    }\n  }, props.targetDoc[\"Phone\"])))), /*#__PURE__*/React.createElement(DocTags, {\n    tagInfo: props.targetDoc[\"Tags\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 1,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleLikeUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LikeIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 15\n    }\n  }, likeSaveInfo.numLikes.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  })))))));\n}\n\nDocInfo.propTypes = {\n  changeDocLikeStatus: PropTypes.func.isRequired,\n  updateDoctorLikes: PropTypes.func.isRequired,\n  changeDocSaveStatus: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.searchInfo\n});\n\nconst mapActionsToProps = {\n  changeDocLikeStatus,\n  updateDoctorLikes,\n  changeDocSaveStatus\n};\nexport default connect(mapStateToProps, mapActionsToProps)(DocInfo);","map":{"version":3,"sources":["/Users/Michelle/Downloads/may10_michelle/src/Components/profile/DocInfo.js"],"names":["React","useEffect","connect","makeStyles","Button","Box","Typography","Chip","Grid","IconButton","Hidden","ArrowBackIosIcon","LocationOnOutlinedIcon","PhoneOutlinedIcon","ErrorOutlineOutlinedIcon","BookmarkIcon","BookmarkBorderOutlinedIcon","ShareOutlinedIcon","FavoriteIcon","FavoriteBorderOutlinedIcon","PropTypes","changeDocLikeStatus","updateDoctorLikes","docImg","CovidAlert","DocTags","useStyles","theme","covidBox","marginTop","breakpoints","down","marginLeft","marginRight","returnBox","img","width","height","objectFit","profileGrid","line","border","DocInfo","props","classes","backToRes","history","backTo","push","authenticated","renderCount","setRenderCount","useState","likeSaveInfo","setState","hasLiked","likedList","numLikes","hasSaved","savedList","displayStoredData","getStoredData","then","res","listOfLikes","liked","likeHistory","doctors","index","findIndex","doctor","username","listOfSaves","saved","likes","catch","error","console","storedSearchInfo","userStoredCredentials","Promise","all","searchInfo","storedCredentials","toggleLikeUnlike","likedListCopy","splice","prevState","newDocInfo","hospital","imgSrc","languages","name","specialty","type","length","toggleLike","waitLikeUpdate","updateInfo","LikeIcon","toggleSaveUnsave","savedListCopy","toggleSave","waitSaveUpdate","changeDocSaveStatus","SaveIcon","fontSize","textTransform","color","toLocaleString","navigator","language","minimumFractionDigits","margin","targetDoc","toggelSaveUnsave","propTypes","func","isRequired","mapStateToProps","state","user","credentials","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n//icons\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\n\nimport PropTypes from \"prop-types\";\n\nimport { changeDocLikeStatus } from \"../../redux/actions/userActions\";\nimport { updateDoctorLikes } from \"../../redux/actions/dataActions\";\n\n//images\nimport docImg from \"../../img/results/docAlex.png\";\n\n//components\nimport CovidAlert from \"../Alert\";\nimport DocTags from \"./DocTags\";\n\nconst useStyles = makeStyles((theme) => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  //return to doctors button\n  returnBox: {\n    marginLeft: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 20,\n    },\n  },\n\n  //doctor image\n  img: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"contain\",\n  },\n\n  profileGrid: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\",\n    },\n  },\n}));\n\n//for Doc image + basic info + likes\n//edit tags section is imported from DocTags.js\n\nfunction DocInfo(props) {\n  const classes = useStyles();\n\n  const backToRes = () => {\n    if (props.history != null) {\n      if (props.backTo == \"resultsPage\") {\n        props.history.push(\"/results\");\n      } else if (props.backTo == \"profilePage\") {\n        props.history.push(\"/hospprofile\");\n      }\n    }\n  };\n\n\n  const authenticated = props.authenticated;\n\n  const [renderCount, setRenderCount] = React.useState(0);\n\n  const [likeSaveInfo, setState] = React.useState({\n    // like functionality\n    hasLiked: false,\n    likedList: [],\n    numLikes: 0,\n\n    // save functionality\n    hasSaved: false,\n    savedList: []\n  });\n\n  // only get called once in the first render\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    getStoredData()\n      .then((res) => {\n        // like\n        let listOfLikes;\n        let liked = false;\n\n        // if the user has never liked any doctors\n        if (!res[1].likeHistory) {\n          listOfLikes = [];\n        } else {\n          if (res[1].likeHistory.doctors) {\n            listOfLikes = res[1].likeHistory.doctors;\n            // if the user has liked this particular doctor before\n            const index = res[1].likeHistory.doctors.findIndex(doctor => doctor.username == \"verify\")\n            if (index != -1) {\n              liked = true;\n            }\n          } else {\n            listOfLikes = [];\n          }\n        }\n\n        // save\n        let listOfSaves;\n        let saved = false;\n\n        // if the user has never saved any doctors\n        if (!res[1].saved) {\n          listOfSaves = [];\n        } else {\n          if (res[1].saved.doctors) {\n            listOfSaves = res[1].saved.doctors;\n            // if the user has saved this particular doctor before\n            const index = res[1].saved.doctors.findIndex(doctor => doctor.username == \"verify\")\n            if (index != -1) {\n              saved = true;\n            }\n          } else {\n            listOfSaves = [];\n          }\n        }\n\n        setState({\n          hasLiked: liked,\n          likedList: listOfLikes,\n          numLikes: res[0].likes ? res[0].likes : 0,\n\n          hasSaved: saved,\n          savedList: listOfSaves,\n        });\n\n        setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  // wait for returned props from firebase to be ready\n  let getStoredData = async () => {\n    let [storedSearchInfo, userStoredCredentials] =\n      await Promise.all([props.searchInfo, props.storedCredentials]);\n    return [storedSearchInfo, userStoredCredentials];\n  }\n\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LIKE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // when the like button is pressed\n  const toggleLikeUnlike = () => {\n    // the user has liked this doctor before\n    if (likeSaveInfo.hasLiked) {\n      let likedListCopy = likeSaveInfo.likedList;\n      let index = likedListCopy.findIndex(doctor => doctor.username == \"verify\");\n      // remove this doctor from the user like list\n      likedListCopy.splice(index, 1);\n      setState(prevState => ({\n        ...likeSaveInfo,\n        likedList: likedListCopy,\n        // change to unlike\n        hasLiked: false,\n        numLikes: prevState.numLikes - 1\n      }))\n    } else {\n      // the newly liked doctor's information to be added to the user's liked doctor list\n      const newDocInfo = {\n        hospital: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        languages: [\"English\", \"Mandarin\"],\n        likes: likeSaveInfo.numLikes,\n        name: \"Alex Leow\",\n        specialty: \"Gastroenterology\",\n        type: \"Private\",\n        username: \"verify\"\n      };\n\n      setState(prevState => ({\n        // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        likedList: (likeSaveInfo.likedList.length == 0) ? [newDocInfo] : [prevState.likedList, newDocInfo],\n        hasLiked: true,\n        numLikes: prevState.numLikes + 1\n      }))\n    }\n  }\n\n  // triggered if the like button is pressed (which sets state)\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleLike();\n    }\n  }, [likeSaveInfo.hasLiked, likeSaveInfo.likedList]);\n\n\n  const toggleLike = () => {\n    waitLikeUpdate()\n      .then((res) => {\n        props.changeDocLikeStatus(res[0]);\n        const updateInfo = {\n          specialty: \"Gastroenterology\",\n          hospital: \"Pantai Hospital Kuala Lumpur\",\n          username: \"verify\",\n          likes: res[1]\n        }\n        props.updateDoctorLikes(updateInfo)\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  let waitLikeUpdate = async () => {\n    let [likedList, likes] =\n      await Promise.all([likeSaveInfo.likedList, likeSaveInfo.numLikes]);\n    return [likedList, likes];\n  }\n\n\n  // if the user has liked this doctor before: filled heart, otherwise outlined heart\n  const LikeIcon = (likeSaveInfo.hasLiked) ? FavoriteIcon : FavoriteBorderOutlinedIcon;\n\n\n\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SAVE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // when the save button is pressed\n  const toggleSaveUnsave = () => {\n    // the user has saved this doctor before\n    if (likeSaveInfo.hasSaved) {\n      let savedListCopy = likeSaveInfo.savedList;\n      let index = savedListCopy.findIndex(doctor => doctor.username == \"verify\");\n      // remove this doctor from the user saved list\n      savedListCopy.splice(index, 1);\n\n      setState({\n        ...likeSaveInfo,\n        savedList: savedListCopy,\n        hasSaved: false,\n      })\n    } else {\n      // the newly saved doctor's information to be added to the user's saved doctor list\n      const newDocInfo = {\n        hospital: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        languages: [\"English\", \"Mandarin\"],\n        likes: likeSaveInfo.numLikes,\n        name: \"Alex Leow\",\n        specialty: \"Gastroenterology\",\n        type: \"Private\",\n        username: \"verify\"\n      };\n\n      setState(prevState => ({\n        // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        ...likeSaveInfo,\n        savedList: (likeSaveInfo.savedList.length == 0) ? [newDocInfo] : [prevState.savedList, newDocInfo],\n        hasSaved: true,\n      }))\n    }\n  }\n\n  // triggered if the save button is pressed (which sets state)\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleSave();\n    }\n  }, [likeSaveInfo.hasSaved, likeSaveInfo.savedList]);\n\n\n  const toggleSave = () => {\n    waitSaveUpdate()\n      .then((res) => {\n        props.changeDocSaveStatus(res);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  let waitSaveUpdate = async () => {\n    let savedList = await likeSaveInfo.savedList;\n    return savedList;\n  }\n\n\n  // if the user has liked this doctor before: filled heart, otherwise outlined heart\n  const SaveIcon = (likeSaveInfo.hasSaved) ? BookmarkIcon : BookmarkBorderOutlinedIcon;\n\n\n\n\n\n\n\n  return (\n    <div>\n      <div className={classes.covidBox}>\n        <CovidAlert />\n      </div>\n\n      {/* For 'return to doctors' button (需要换成return to hospital， depending on user之前是怎么搜的) */}\n      <Box display=\"flex\" mt={3} mb={3} className={classes.returnBox}>\n        <Button\n          style={{ fontSize: 16, textTransform: \"none\" }}\n          color=\"primary\"\n          onClick={backToRes}\n          startIcon={<ArrowBackIosIcon />}\n        >\n          Return to Doctors\n        </Button>\n      </Box>\n\n      {/* 手机屏幕才会出现的格式：doctor照片在上面 ，like icon 在右上角*/}\n      <Hidden smUp>\n        <Grid container display=\"flex\" justifyContent=\"center\">\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6} align=\"center\">\n            {/* doctor image */}\n            <div style={{ width: 150, height: 180 }}>\n              <img className={classes.img} src={docImg} alt=\"docimg\" />\n            </div>\n          </Grid>\n          {/* Like icon + number of likes */}\n          <Grid item xs={3}>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              {/* 如果登入了，爱心icon成了iconButton，可以点 , 但是我没写logic, 目前点了的话，这个button不会从\n              <FavoriteBorderOutlinedIcon> 换成<FavoriteIcon>, likeCount也不会增加，麻烦你了\n              */}\n              {authenticated ? (\n                <IconButton onClick={toggleLikeUnlike}>\n                  <LikeIcon style={{ color: \"red\" }} />\n                </IconButton>\n              ) : (\n                  <FavoriteIcon style={{ color: \"red\" }} />\n                )}\n              {/* like count */}\n              <Typography variant=\"body2\" color=\"primary\">\n                {likeSaveInfo.numLikes.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Hidden>\n\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={5} md={4}>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            {/* 大屏幕会出现的格式：doctor照片在左边 */}\n            <Hidden xsDown>\n              {/* doctor image */}\n              <div style={{ width: 200, height: 250 }}>\n                <img className={classes.img} src={docImg} alt=\"docimg\" />\n              </div>\n            </Hidden>\n\n            {/* 手机屏幕出现的格式：doctor's name 在照片下面 */}\n            <Hidden smUp>\n              <Typography variant=\"h5\" color=\"primary\" style={{ margin: 20 }}>\n                {\"Dr.\" + props.targetDoc[\"DocName\"]}\n              </Typography>\n            </Hidden>\n\n            <Box display=\"flex\" mt={2}>\n              {/* report button */}\n              <Button\n                startIcon={<ErrorOutlineOutlinedIcon />}\n                style={{ textTransform: \"none\" }}\n                color=\"primary\"\n              >\n                Report\n              </Button>\n              {/* share button */}\n              <Button\n                startIcon={<ShareOutlinedIcon />}\n                style={{ textTransform: \"none\" }}\n                color=\"primary\"\n              >\n                Share\n              </Button>\n              {/* save button */}\n              <Button\n                startIcon={<SaveIcon />}\n                style={{ textTransform: \"none\" }}\n                color=\"primary\"\n                onClick={toggelSaveUnsave}\n              >\n                Save\n              </Button>\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={6}>\n          {/* 大屏幕会出现的格式：doctor name 在右边 */}\n          <Hidden xsDown>\n            <Typography variant=\"h5\" color=\"primary\">\n              {\"Dr.\" + props.targetDoc[\"DocName\"]}\n            </Typography>\n          </Hidden>\n          <br></br>\n\n          {/* 手机幕会出现的格式：灰色比较粗的divider line */}\n          <Hidden smUp>\n            <hr className={classes.line}></hr>\n          </Hidden>\n\n          {/* Doctor basic info */}\n          <Box className={classes.profileGrid} mt={3} mb={3}>\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Specialty: </strong>{\" \"}\n              <span>{props.targetDoc[\"Specialty\"]} </span>\n            </Typography>\n\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Years of Practice: </strong>{\" \"}\n              <span>{props.targetDoc[\"YearsofPractice\"] + \" years\"} </span>\n            </Typography>\n\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Hospital: </strong>\n              <span>{props.targetDoc[\"Hospital\"]}</span>\n              {/* private tag */}\n              <Chip\n                style={{ marginLeft: 10 }}\n                color=\"primary\"\n                size=\"small\"\n                label={props.targetDoc[\"Type\"]}\n              ></Chip>\n            </Typography>\n            <br></br>\n\n            <Box display=\"flex\" flexDirection=\"row\" mt={1}>\n              <LocationOnOutlinedIcon style={{ marginRight: 10 }} />\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <span>{props.targetDoc[\"Address\"]}</span>\n              </Typography>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\" mt={1}>\n              <PhoneOutlinedIcon style={{ marginRight: 10 }} />\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <span>{props.targetDoc[\"Phone\"]}</span>\n              </Typography>\n            </Box>\n          </Box>\n          {/* edit Tag component (imported from Tag.js) */}\n          <DocTags tagInfo={props.targetDoc[\"Tags\"]} />\n        </Grid>\n\n        <Grid item xs={12} sm={1} md={2}>\n          {/* 大屏幕会出现的格式：like icon在最右边 */}\n          <Hidden xsDown>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              {/* 如果登入了，爱心icon成了iconButton，可以点 , 但是我没写logic, 目前点了的话，这个button不会从\n              <FavoriteBorderOutlinedIcon> 换成<FavoriteIcon>, likeCount也不会增加，麻烦你了\n              */}\n              {authenticated ? (\n                <IconButton onClick={toggleLikeUnlike}>\n                  <LikeIcon style={{ color: \"red\" }} />\n                </IconButton>\n              ) : (\n                  <FavoriteIcon style={{ color: \"red\" }} />\n                )}\n              <Typography variant=\"body2\" color=\"primary\">\n                {likeSaveInfo.numLikes.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n              </Typography>\n            </Box>\n          </Hidden>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nDocInfo.propTypes = {\n  changeDocLikeStatus: PropTypes.func.isRequired,\n  updateDoctorLikes: PropTypes.func.isRequired,\n\n  changeDocSaveStatus: PropTypes.func.isRequired,\n\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.user.authenticated,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.searchInfo\n});\n\nconst mapActionsToProps = {\n  changeDocLikeStatus,\n  updateDoctorLikes,\n\n  changeDocSaveStatus\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(DocInfo);\n"]},"metadata":{},"sourceType":"module"}
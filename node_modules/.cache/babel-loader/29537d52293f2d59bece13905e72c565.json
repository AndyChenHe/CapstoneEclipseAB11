{"ast":null,"code":"var _jsxFileName = \"/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/home/SearchTabs.js\";\nimport React, { Fragment } from \"react\"; // material ui\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Location from \"./Location\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nconst filterOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.specialty\n});\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return value === index && /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, children);\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\"\n    }\n  }\n})(props => /*#__PURE__*/React.createElement(Tabs, Object.assign({}, props, {\n  TabIndicatorProps: {\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 63\n      }\n    })\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 15\n  }\n})));\nconst StyledTab = withStyles(theme => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"1em\",\n    marginTop: 10,\n    \"&:focus\": {\n      opacity: 1\n    }\n  }\n}))(props => /*#__PURE__*/React.createElement(Tab, Object.assign({\n  disableRipple: true\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 16\n  }\n})));\nexport default function SearchTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function FormRow() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Location, {\n      className: classes.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 24\n        }\n      }),\n      size: \"md\",\n      className: classes.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledTabs, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"search tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledTab, Object.assign({\n    label: \"Specialty\"\n  }, a11yProps(0), {\n    style: {\n      minWidth: 120\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(StyledTab, Object.assign({\n    label: \"Doctor\"\n  }, a11yProps(1), {\n    style: {\n      minWidth: 120\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(StyledTab, Object.assign({\n    label: \"Hospital\"\n  }, a11yProps(2), {\n    style: {\n      minWidth: 120\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(StyledTab, Object.assign({\n    label: \"Condition\"\n  }, a11yProps(3), {\n    style: {\n      minWidth: 120\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: specialties,\n    getOptionLabel: option => option.specialty,\n    filterOptions: filterOptions,\n    style: {\n      width: 500\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by specialty\",\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: names,\n    getOptionLabel: option => option.name,\n    filterOptions: filterOptions,\n    style: {\n      width: 500\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by doctor's name\",\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"hi\")), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"hi\")));\n}\nconst specialties = [{\n  specialty: \"Allergy and Immunology\"\n}, {\n  specialty: \"Anesthesiology\"\n}, {\n  specialty: \"Arthroplasty\"\n}];\nconst docNames = [{\n  name: \"Alex Lee\"\n}, {\n  name: \"Alex Tan\"\n}, {\n  name: \"Bryan Leow\"\n}];\nconst useStyles = makeStyles(theme => ({\n  inputRoot: {\n    \"& .MuiFilledInput-root\": {\n      backgroundColor: \"rgba(255,255,255)\",\n      borderRadius: 4\n    }\n  },\n  location: {\n    position: \"relative\"\n  },\n  search: {\n    position: \"absolute\",\n    right: 0\n  }\n}));","map":{"version":3,"sources":["/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/home/SearchTabs.js"],"names":["React","Fragment","withStyles","makeStyles","Grid","Tabs","Tab","Typography","Box","TextField","Location","SearchIcon","Button","Autocomplete","createFilterOptions","filterOptions","matchFrom","stringify","option","specialty","TabPanel","props","children","value","index","other","a11yProps","id","StyledTabs","indicator","display","justifyContent","backgroundColor","width","StyledTab","theme","root","textTransform","color","fontWeight","fontSize","marginTop","opacity","SearchTabs","classes","useStyles","setValue","useState","handleChange","event","newValue","FormRow","location","search","tabContainer","minWidth","specialties","params","inputRoot","InputProps","disableUnderline","names","name","docNames","borderRadius","position","right"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\n\n// material ui\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Location from \"./Location\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\n\nconst filterOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.specialty,\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return value === index && <Box mt={2}>{children}</Box>;\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"1em\",\n    marginTop: 10,\n    \"&:focus\": {\n      opacity: 1,\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\nexport default function SearchTabs() {\n  const classes = useStyles();\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  function FormRow() {\n    return (\n      <Fragment>\n        <Grid item xs={6}>\n          <Location className={classes.location} />\n        </Grid>\n        <Grid item xs={2}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<SearchIcon />}\n            size=\"md\"\n            className={classes.search}\n          ></Button>{\" \"}\n        </Grid>\n        <Grid item xs={4}></Grid>\n      </Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.tabContainer}>\n      <div>\n        <StyledTabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"search tabs\"\n        >\n          <StyledTab\n            label=\"Specialty\"\n            {...a11yProps(0)}\n            style={{ minWidth: 120 }}\n          />\n          <StyledTab\n            label=\"Doctor\"\n            {...a11yProps(1)}\n            style={{ minWidth: 120 }}\n          />\n          <StyledTab\n            label=\"Hospital\"\n            {...a11yProps(2)}\n            style={{ minWidth: 120 }}\n          />\n          <StyledTab\n            label=\"Condition\"\n            {...a11yProps(3)}\n            style={{ minWidth: 120 }}\n          />\n        </StyledTabs>\n\n        <Typography />\n      </div>\n      <TabPanel value={value} index={0}>\n        <Autocomplete\n          options={specialties}\n          getOptionLabel={(option) => option.specialty}\n          filterOptions={filterOptions}\n          style={{ width: 500 }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by specialty\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n      </TabPanel>\n\n      <TabPanel value={value} index={1}>\n        <Autocomplete\n          options={names}\n          getOptionLabel={(option) => option.name}\n          filterOptions={filterOptions}\n          style={{ width: 500 }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by doctor's name\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n      </TabPanel>\n\n      <TabPanel value={value} index={2}>\n        {\" \"}\n        <p>hi</p>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        {\" \"}\n        <p>hi</p>\n      </TabPanel>\n    </div>\n  );\n}\n\nconst specialties = [\n  { specialty: \"Allergy and Immunology\" },\n  { specialty: \"Anesthesiology\" },\n  { specialty: \"Arthroplasty\" },\n];\n\nconst docNames = [\n  { name: \"Alex Lee\" },\n  { name: \"Alex Tan\" },\n  { name: \"Bryan Leow\" },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    \"& .MuiFilledInput-root\": {\n      backgroundColor: \"rgba(255,255,255)\",\n      borderRadius: 4,\n    },\n  },\n  location: {\n    position: \"relative\",\n  },\n  search: {\n    position: \"absolute\",\n    right: 0,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}
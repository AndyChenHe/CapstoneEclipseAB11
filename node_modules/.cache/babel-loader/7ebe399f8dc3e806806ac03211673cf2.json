{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Desktop/Capstone/CapstoneEclipseAB11/src/Components/profile/HospInfo.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\"; //icons\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Link } from \"react-router-dom\"; //images\n\nimport hospImg from \"../../img/results/pantaihospital.png\"; //components\n\nimport CovidAlert from \"../Alert\";\nimport HospTags from \"./HospTags\";\nimport PropTypes from \"prop-types\";\nimport { changeHospLikeStatus, changeHospSaveStatus, sendReportedHospitals } from \"../../redux/actions/userActions\";\nimport { updateHospitalLikes, reportHospital } from \"../../redux/actions/dataActions\"; // ～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～\n// ～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～\n// \"hospital tags\" used in this js is actually referred to the tags attached to a specialty in this hospital\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nconst useStyles = makeStyles(theme => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  //return to hospital button\n  returnBox: {\n    marginLeft: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 20\n    }\n  },\n  //hospital image\n  img: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"contain\"\n  },\n  profileGrid: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\"\n    }\n  },\n  signUpInButton: {\n    paddingLeft: \"7.5rem\"\n  }\n})); //for hospital image + basic info + likes\n//edit tags section is imported from HospTags.js\n\nfunction HospInfo(props) {\n  const classes = useStyles();\n  const authenticated = props.authenticated;\n\n  const backToRes = () => {\n    if (props.history != null) {\n      if (props.backTo == \"resultsPage\") {\n        props.history.push(\"/results\");\n      } else if (props.backTo == \"hospprofile\") {\n        props.history.push(\"/hospprofile\");\n      } else if (props.backTo == \"likeHistory\") {\n        props.history.push(\"/likehistory\");\n      } else {\n        props.history.push(\"/saved\");\n      }\n    }\n  };\n\n  let returnPageDesc;\n\n  if (props.backTo == \"resultsPage\") {\n    returnPageDesc = \"Result Page\";\n  } else if (props.backTo == \"hospprofile\") {\n    returnPageDesc = \"Hospital Profile\";\n  } else if (props.backTo == \"likeHistory\") {\n    returnPageDesc = \"Liked History Page\";\n  } else {\n    returnPageDesc = \"Saved History Page\";\n  }\n\n  const [renderCount, setRenderCount] = React.useState(0);\n  const [likeSaveInfo, setState] = React.useState({\n    hasLiked: false,\n    likedList: [],\n    numLikes: 0,\n    // save functionality\n    hasSaved: false,\n    savedList: [],\n    // report functionality\n    reportedList: [],\n    numReports: 0,\n    reportReasonsList: [],\n    oneReason: \"\"\n  }); // only get called once in the first render\n\n  useEffect(() => {\n    // if (renderCount == 0) {\n    return displayStoredData(); // }\n  }, []);\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredData().then(res => {\n      console.log('hi im here');\n      console.log(props.targetHos);\n      console.log(res); // like\n\n      let listOfLikes;\n      let liked = false; // if the user has never liked any hospitals\n\n      if (!res.likeHistory) {\n        listOfLikes = [];\n      } else {\n        if (res.likeHistory.hospitals) {\n          listOfLikes = res.likeHistory.hospitals; // if the user has liked this particular hospital before\n\n          const index = res.likeHistory.hospitals.findIndex(hospital => hospital.name.replace(/\\s/g, '').toLowerCase() == props.targetHos.name.replace(/\\s/g, '').toLowerCase());\n\n          if (index != -1) {\n            liked = true;\n          }\n        } else {\n          listOfLikes = [];\n        }\n      } // save\n\n\n      let listOfSaves;\n      let saved = false; // if the user has never saved any hospitals\n\n      if (!res.saved) {\n        listOfSaves = [];\n      } else {\n        if (res[1].saved.hospitals) {\n          listOfSaves = res.saved.hospitals; // if the user has saved this particular hospital before\n\n          const index = res.saved.hospitals.findIndex(hospital => hospital.name.replace(/\\s/g, '').toLowerCase() == props.targetHos.name.replace(/\\s/g, '').toLowerCase());\n\n          if (index != -1) {\n            saved = true;\n          }\n        } else {\n          listOfSaves = [];\n        }\n      }\n\n      setState({\n        hasLiked: liked,\n        likedList: listOfLikes,\n        numLikes: props.targetHos.likes,\n        hasSaved: saved,\n        savedList: listOfSaves,\n        reportedList: res.reportedHospitals ? res.reportedHospitals : \"\",\n        numReports: res[0].report ? res[0].report.reportCount : 0,\n        reportReasonsList: res[0].report ? res[0].report.reportReasons : \"\",\n        oneReason: \"\"\n      });\n      console.log('likeSaveInfo');\n      console.log(likeSaveInfo); // setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // wait for returned props from firebase to be ready\n\n\n  let getStoredData = async () => {\n    // let [storedSearchInfo, userStoredCredentials] =\n    //   await Promise.all([props.searchInfo, props.storedCredentials]);\n    // return [storedSearchInfo, userStoredCredentials];\n    let storedCredentials = await props.storedCredentials;\n    return storedCredentials;\n  }; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LIKE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // when the like button is pressed\n\n\n  const toggleLikeUnlike = () => {\n    // the user has liked this hospital before\n    if (likeSaveInfo.hasLiked) {\n      let likedListCopy = likeSaveInfo.likedList;\n      let index = likedListCopy.findIndex(hospital => hospital.name == props.targetHos.name); // remove this hospital from the user like list\n\n      likedListCopy.splice(index, 1);\n      setState(prevState => {\n        prevState.numLikes = prevState.numLikes - 1;\n        prevState.hasLiked = false;\n        prevState.likedList = likedListCopy;\n        return { ...prevState\n        };\n      });\n    } else {\n      console.log(props.targetHos);\n      const newHospInfo = {\n        name: props.targetHos.name,\n        address: props.targetHos.address,\n        likes: likeSaveInfo.numLikes,\n        phone: props.targetHos.phone,\n        relatedSpecialty: props.targetHos.relatedSpecialty,\n        type: props.targetHos.type\n      };\n      likeSaveInfo.likedList.push(newHospInfo);\n      console.log(likeSaveInfo);\n      setState( // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n      prevState => {\n        prevState.numLikes = prevState.numLikes + 1;\n        prevState.hasLiked = true;\n        return { ...prevState\n        };\n      });\n    }\n\n    toggleLike();\n  };\n\n  const toggleLike = () => {\n    waitLikeUpdate().then(res => {\n      console.log(likeSaveInfo.likedList);\n      props.changeHospLikeStatus(likeSaveInfo.likedList);\n      const updateInfo = {\n        specialty: props.targetHos.relatedSpecialty,\n        hospital: props.targetHos.HospitalName.replace(/\\s/g, ''),\n        likes: res[1]\n      };\n      props.updateHospitalLikes(updateInfo);\n      updateLocalDocList(updateInfo);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let waitLikeUpdate = async () => {\n    let [likedList, likes] = await Promise.all([likeSaveInfo.likedList, likeSaveInfo.numLikes]);\n    return [likedList, likes];\n  };\n\n  const updateLocalDocList = updateInfo => {\n    // set location target list location\n    console.log('local list');\n    let newHosList = [];\n\n    for (let hos in props.hospitalInfo) {\n      let hosItem = props.hospitalInfo[hos];\n      console.log('hosItem');\n      console.log(hosItem);\n\n      if (hosItem.name == props.targetHos.name) {\n        hosItem.NumberOfLikes = likeSaveInfo.numLikes;\n        hosItem.likes = likeSaveInfo.numLikes;\n      }\n\n      newHosList.push(hosItem);\n    }\n\n    console.log(newHosList);\n    props.sethospitalInfo(newHosList); // set database\n\n    let newDatabase;\n    newDatabase = props.database;\n    let hospitalId = updateInfo['hospital'].replace(/\\s/g, '');\n    newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]['likes'] = likeSaveInfo.numLikes;\n    newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]['NumberOfLikes'] = likeSaveInfo.numLikes;\n    console.log('new database');\n    console.log(newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]);\n    props.setDatabase(newDatabase);\n  }; // if the user has liked this hospital before: filled heart, otherwise outlined heart\n\n\n  const LikeIcon = likeSaveInfo.hasLiked ? FavoriteIcon : FavoriteBorderOutlinedIcon; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SAVE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // when the save button is pressed\n\n  const toggleSaveUnsave = () => {\n    // the user has saved this hospital before\n    if (likeSaveInfo.hasSaved) {\n      let savedListCopy = likeSaveInfo.savedList;\n      let index = savedListCopy.findIndex(hospital => hospital.name == props.targetHos.name); // remove this hospital from the user saved list\n\n      savedListCopy.splice(index, 1);\n      setState({ ...likeSaveInfo,\n        savedList: savedListCopy,\n        hasSaved: false\n      });\n    } else {\n      // the newly saved hospital's information to be added to the user's saved hospital list\n      const newHospInfo = {\n        name: props.targetHos.name.replace(/\\s/g, ''),\n        address: props.targetHos.address,\n        likes: likeSaveInfo.numLikes,\n        phone: props.targetHos.phone,\n        relatedSpecialty: props.targetHos.relatedSpecialty,\n        type: props.targetHos.type\n      };\n      likeSaveInfo.savedList.push(newHospInfo);\n      setState( // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n      prevState => {\n        prevState.hasSaved = true;\n        return { ...prevState\n        };\n      });\n    }\n\n    toggleSave();\n  }; // triggered if the save button is pressed (which sets state)\n  // useEffect(() => {\n  //   if (renderCount == 1) {\n  //     return toggleSave();\n  //   }\n  // }, [likeSaveInfo.hasSaved, likeSaveInfo.savedList]);\n\n\n  const toggleSave = () => {\n    waitSaveUpdate().then(res => {\n      props.changeHospSaveStatus(res);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let waitSaveUpdate = async () => {\n    let savedList = await likeSaveInfo.savedList;\n    return savedList;\n  }; // if the user has saved this doctor before: filled bookmark, otherwise outlined bookmark\n\n\n  const SaveIcon = likeSaveInfo.hasSaved ? BookmarkIcon : BookmarkBorderOutlinedIcon; // -------------------------------------------------------------------- //\n  // ----------------------------Report---------------------------------------- //\n  // 新加 5/14\n  //report弹窗：填的表\n\n  const [reportOpen, setReportOpen] = React.useState(false);\n\n  const handleReportOpen = () => {\n    setReportOpen(true);\n  };\n\n  const handleReportClose = () => {\n    setReportOpen(false);\n  };\n\n  const handleReportReason = event => {\n    const oneReason = event.target.value;\n    setState({ ...likeSaveInfo,\n      oneReason: oneReason\n    });\n  };\n\n  console.log('props.targetHos');\n  console.log(props.targetHos);\n  const reported = likeSaveInfo.reportedList.includes(props.targetHos.name); // send hospital report to database\n\n  const submitReport = () => {\n    const oneReason = likeSaveInfo.oneReason;\n    const reasons = likeSaveInfo.reportReasonsList;\n    reasons.push(oneReason);\n    const reportedList = likeSaveInfo.reportedList;\n\n    if (!reported) {\n      reportedList.push(props.targetHos.name);\n    } // send to specialty doctor account\n\n\n    const oneReport = {\n      reportCount: likeSaveInfo.numReports + 1,\n      reportReasons: reasons,\n      // *******hard code \n      specialty: props.targetHos.relatedSpecialty,\n      hospital: props.targetHos.name\n    };\n    props.reportHospital(oneReport); // send to user account\n\n    const sendToAccount = {\n      reportedHospitals: reportedList\n    };\n    props.sendReportedHospitals(sendToAccount);\n    setReportOpen(false);\n    setState(prevState => ({ ...likeSaveInfo,\n      numReports: prevState.numReports + 1,\n      reportReasonsList: [prevState.reportReasonsList, oneReason],\n      oneReason: \"\",\n      reportedList: [prevState.reportedList, props.targetHos.name]\n    }));\n  }; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // ~~~~~~~~~~~sign up or login in if want to save or report~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // 弹窗去signin/signup如果要report没有login\n\n\n  const [loginOpen, setLoginOpen] = React.useState({\n    open: false,\n    // keep track of what function the user selects (report, like, save, tag)\n    userOption: \"\"\n  });\n\n  const handleLoginOpen = option => {\n    setLoginOpen({\n      open: true,\n      userOption: option\n    });\n  };\n\n  const handleLoginClose = () => {\n    setLoginOpen({ ...loginOpen,\n      open: false\n    });\n  }; // for login in diagolue: render correponding icon for user option: recommend, like, save\n\n\n  let Icon = FavoriteIcon;\n\n  if (loginOpen.userOption == \"Recommend\") {\n    Icon = FavoriteIcon;\n  } else if (loginOpen.userOption == \"Save\") {\n    Icon = BookmarkBorderOutlinedIcon;\n  } else if (loginOpen.userOption == \"Report\") {\n    Icon = ErrorOutlineOutlinedIcon;\n  } else {\n    Icon = EditOutlinedIcon;\n  } //   const signUpInDialogue = (option) => {\n  //     const optionFirstUpper = option[0].toUpperCase() + option.slice(1);\n  //     return (\n  //       <Dialog\n  //         fullWidth=\"true\"\n  //         maxWidth=\"sm\"\n  //         open={loginOpen}\n  //         onClose={handleLoginClose}\n  //       >\n  //         <Box display=\"flex\" alignItems=\"center\">\n  //           <Box flexGrow={1}>\n  //             <DialogTitle>{optionFirstUpper} a Doctor</DialogTitle>\n  //           </Box>\n  //           <Box>\n  //             <DialogActions>\n  //               <IconButton\n  //                 size=\"small\"\n  //                 onClick={handleLoginClose}\n  //                 color=\"primary\"\n  //               >\n  //                 <CloseIcon />\n  //               </IconButton>\n  //             </DialogActions>\n  //           </Box>\n  //         </Box>\n  //         <DialogContent>\n  //           <Box\n  //             display=\"flex\"\n  //             flexDirection=\"column\"\n  //             justifyContent=\"center\"\n  //             alignItems=\"center\"\n  //           >\n  //             <ErrorOutlineOutlinedIcon />\n  //             <br></br>\n  //             <Typography variant=\"body1\" align=\"center\">\n  //               You need to sign in to {option} this doctor\n  //                         </Typography>\n  //           </Box>\n  //           <Box display=\"flex\" mt={2} mb={2}>\n  //             <Button\n  //               variant=\"contained\"\n  //               color=\"primary\"\n  //               style={{ textTransform: \"none\" }}\n  //               fullWidth\n  //               component={Link}\n  //               to=\"/login\"\n  //             >\n  //               Log in\n  //                         </Button>\n  //           </Box>\n  //           <Box display=\"flex\" mb={2}>\n  //             <Button\n  //               variant=\"outlined\"\n  //               color=\"primary\"\n  //               style={{ textTransform: \"none\" }}\n  //               fullWidth\n  //               component={Link}\n  //               to=\"/signup\"\n  //             >\n  //               Sign up\n  //                         </Button>\n  //           </Box>\n  //         </DialogContent>\n  //       </Dialog>\n  //     )\n  //   }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.covidBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CovidAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 3,\n    mb: 3,\n    className: classes.returnBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      fontSize: 16,\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 22\n      }\n    }),\n    onClick: backToRes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 9\n    }\n  }, \"Return to \", returnPageDesc)), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 150,\n      height: 180\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: hospImg,\n    alt: \"hospimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleLikeUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LikeIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 19\n    }\n  })) :\n  /*#__PURE__*/\n  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的\n  React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => handleLoginOpen(\"Recommend\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 23\n    }\n  }))), \"                )}\", /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 15\n    }\n  }, likeSaveInfo.numLikes.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 200,\n      height: 250\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: hospImg,\n    alt: \"hospimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 15\n    }\n  }, props.targetHos[\"HospitalName\"])), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(Button, {\n    disabled: reported,\n    startIcon: /*#__PURE__*/React.createElement(ErrorOutlineOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 30\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: handleReportOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 17\n    }\n  }, \"Report\") :\n  /*#__PURE__*/\n  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的 （这里新的东西比原来长很多 麻烦小心对一下位置）\n  React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(ErrorOutlineOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 30\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: () => handleLoginOpen(\"Report\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 17\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: \"true\",\n    maxWidth: \"sm\",\n    open: loginOpen.open,\n    onClose: handleLoginClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 23\n    }\n  }, loginOpen.userOption, \" a Hospital\")), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: handleLoginClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 27\n    }\n  }))))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 23\n    }\n  }, \"You need to sign in to \", loginOpen.userOption.toLowerCase(), \" this hospital \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 2,\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.signUpInButton,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    fullWidth: true,\n    component: Link,\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 23\n    }\n  }, \"Log in \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.signUpInButton,\n    variant: \"outlined\",\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    fullWidth: true,\n    component: Link,\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 23\n    }\n  }, \"Sign up \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"))))), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: \"true\",\n    maxWidth: \"sm\",\n    open: reportOpen,\n    onClose: handleReportClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 21\n    }\n  }, \"Report\")), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: handleReportClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 19\n    }\n  }, \"Please provide a reason for why you are reporting this hospital:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    multiline: true,\n    required: true,\n    variant: \"outlined\",\n    label: \"Reason\",\n    rows: 5,\n    onChange: handleReportReason,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.reportButton,\n    disabled: !likeSaveInfo.oneReason,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      textTransform: \"none\"\n    },\n    onClick: submitReport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 19\n    }\n  }, \"Submit\"))), authenticated ? /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 30\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: toggleSaveUnsave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 17\n    }\n  }, \"Save\") :\n  /*#__PURE__*/\n  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的\n  React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 34\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: () => handleLoginOpen(\"Save\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 21\n    }\n  }, \"Save\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 13\n    }\n  }, props.targetHos[\"HospitalName\"], /*#__PURE__*/React.createElement(Chip, {\n    style: {\n      marginLeft: 10\n    },\n    color: \"primary\",\n    size: \"small\",\n    label: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    className: classes.profileGrid,\n    mt: 3,\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 15\n    }\n  }, \"Official website: \"), \" \", /*#__PURE__*/React.createElement(Link, {\n    href: \"https://www.pantai.com.my/kuala-lumpur\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 15\n    }\n  }, \"Link\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 15\n    }\n  }, \"Hours: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 15\n    }\n  }, \"Open \", props.targetHos[\"Hours\"])), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 17\n    }\n  }, \"Hospital Type: \"), \" \", /*#__PURE__*/React.createElement(Chip, {\n    style: {\n      marginLeft: 10\n    },\n    color: \"primary\",\n    size: \"small\",\n    label: props.targetHos[\"HospitalType\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationOnOutlinedIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 17\n    }\n  }, props.targetHos[\"Address\"]))), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PhoneOutlinedIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 17\n    }\n  }, props.targetHos[\"Phone\"])))), /*#__PURE__*/React.createElement(HospTags, {\n    tagInfo: props.targetHos[\"tags\"],\n    targetHos: props.targetHos,\n    handleLoginOpen: handleLoginOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 1,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleLikeUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LikeIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 19\n    }\n  })) :\n  /*#__PURE__*/\n  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的\n  React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => handleLoginOpen(\"Recommend\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 936,\n      columnNumber: 15\n    }\n  }, likeSaveInfo.numLikes.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  })))))));\n}\n\nHospInfo.propTypes = {\n  // like\n  changeHospLikeStatus: PropTypes.func.isRequired,\n  updateHospitalLikes: PropTypes.func.isRequired,\n  // save\n  changeHospSaveStatus: PropTypes.func.isRequired,\n  // report\n  sendReportedHospitals: PropTypes.func.isRequired,\n  reportHospital: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.searchInfoHospital\n});\n\nconst mapActionsToProps = {\n  changeHospLikeStatus,\n  updateHospitalLikes,\n  changeHospSaveStatus,\n  sendReportedHospitals,\n  reportHospital\n};\nexport default connect(mapStateToProps, mapActionsToProps)(HospInfo);","map":{"version":3,"sources":["/Users/Michelle/Desktop/Capstone/CapstoneEclipseAB11/src/Components/profile/HospInfo.js"],"names":["React","Fragment","useEffect","connect","makeStyles","Button","Box","Typography","Chip","Grid","IconButton","Hidden","ArrowBackIosIcon","LocationOnOutlinedIcon","PhoneOutlinedIcon","ErrorOutlineOutlinedIcon","BookmarkIcon","BookmarkBorderOutlinedIcon","ShareOutlinedIcon","FavoriteIcon","FavoriteBorderOutlinedIcon","EditOutlinedIcon","Dialog","DialogContent","DialogTitle","DialogActions","TextField","CloseIcon","Link","hospImg","CovidAlert","HospTags","PropTypes","changeHospLikeStatus","changeHospSaveStatus","sendReportedHospitals","updateHospitalLikes","reportHospital","useStyles","theme","covidBox","marginTop","breakpoints","down","marginLeft","marginRight","returnBox","img","width","height","objectFit","profileGrid","line","border","signUpInButton","paddingLeft","HospInfo","props","classes","authenticated","backToRes","history","backTo","push","returnPageDesc","renderCount","setRenderCount","useState","likeSaveInfo","setState","hasLiked","likedList","numLikes","hasSaved","savedList","reportedList","numReports","reportReasonsList","oneReason","displayStoredData","getStoredData","then","res","console","log","targetHos","listOfLikes","liked","likeHistory","hospitals","index","findIndex","hospital","name","replace","toLowerCase","listOfSaves","saved","likes","reportedHospitals","report","reportCount","reportReasons","catch","error","storedCredentials","toggleLikeUnlike","likedListCopy","splice","prevState","newHospInfo","address","phone","relatedSpecialty","type","toggleLike","waitLikeUpdate","updateInfo","specialty","HospitalName","updateLocalDocList","Promise","all","newHosList","hos","hospitalInfo","hosItem","NumberOfLikes","sethospitalInfo","newDatabase","database","hospitalId","setDatabase","LikeIcon","toggleSaveUnsave","savedListCopy","toggleSave","waitSaveUpdate","SaveIcon","reportOpen","setReportOpen","handleReportOpen","handleReportClose","handleReportReason","event","target","value","reported","includes","submitReport","reasons","oneReport","sendToAccount","loginOpen","setLoginOpen","open","userOption","handleLoginOpen","option","handleLoginClose","Icon","fontSize","textTransform","color","toLocaleString","navigator","language","minimumFractionDigits","margin","reportButton","propTypes","func","isRequired","mapStateToProps","state","user","credentials","searchInfo","data","searchInfoHospital","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n//icons\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Link } from \"react-router-dom\";\n\n//images\nimport hospImg from \"../../img/results/pantaihospital.png\";\n\n//components\nimport CovidAlert from \"../Alert\";\nimport HospTags from \"./HospTags\";\n\nimport PropTypes from \"prop-types\";\n\nimport { changeHospLikeStatus, changeHospSaveStatus, sendReportedHospitals } from \"../../redux/actions/userActions\";\nimport { updateHospitalLikes, reportHospital } from \"../../redux/actions/dataActions\";\n\n\n// ～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～\n// ～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～\n// \"hospital tags\" used in this js is actually referred to the tags attached to a specialty in this hospital\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\nconst useStyles = makeStyles((theme) => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  //return to hospital button\n  returnBox: {\n    marginLeft: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 20,\n    },\n  },\n\n  //hospital image\n  img: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"contain\",\n  },\n\n  profileGrid: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\",\n    },\n  },\n\n  signUpInButton: {\n    paddingLeft: \"7.5rem\"\n  }\n}));\n\n//for hospital image + basic info + likes\n//edit tags section is imported from HospTags.js\n\nfunction HospInfo(props) {\n  const classes = useStyles();\n  const authenticated = props.authenticated;\n\n  const backToRes = () => {\n    if (props.history != null) {\n      if (props.backTo == \"resultsPage\") {\n        props.history.push(\"/results\");\n      } else if (props.backTo == \"hospprofile\") {\n        props.history.push(\"/hospprofile\");\n      } else if (props.backTo == \"likeHistory\"){\n        props.history.push(\"/likehistory\");\n      } else {\n        props.history.push(\"/saved\");\n      }\n    }\n  };\n\n  let returnPageDesc;\n  if (props.backTo == \"resultsPage\"){\n    returnPageDesc = \"Result Page\";\n  } else if (props.backTo == \"hospprofile\") {\n    returnPageDesc = \"Hospital Profile\";\n  } else if (props.backTo == \"likeHistory\"){\n    returnPageDesc = \"Liked History Page\";\n  } else {\n    returnPageDesc = \"Saved History Page\";\n  }\n\n  const [renderCount, setRenderCount] = React.useState(0);\n\n  const [likeSaveInfo, setState] = React.useState({\n    hasLiked: false,\n    likedList: [],\n    numLikes: 0,\n\n    // save functionality\n    hasSaved: false,\n    savedList: [],\n\n    // report functionality\n    reportedList: [],\n    numReports: 0,\n    reportReasonsList: [],\n    oneReason: \"\"\n  });\n\n\n  // only get called once in the first render\n  useEffect(() => {\n    // if (renderCount == 0) {\n      return displayStoredData();\n    // }\n  },[]);\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredData()\n      .then((res) => {\n        console.log('hi im here')\n        console.log(props.targetHos)\n        console.log(res)\n        // like\n        let listOfLikes;\n        let liked = false;\n\n        // if the user has never liked any hospitals\n        if (!res.likeHistory) {\n          listOfLikes = [];\n        } else {\n          if (res.likeHistory.hospitals) {\n            listOfLikes = res.likeHistory.hospitals;\n            // if the user has liked this particular hospital before\n            const index = res.likeHistory.hospitals.findIndex(hospital => hospital.name.replace(/\\s/g,'').toLowerCase() == props.targetHos.name.replace(/\\s/g,'').toLowerCase());\n            if (index != -1) {\n              liked = true;\n            }\n          } else {\n            listOfLikes = [];\n          }\n        }\n\n        // save\n        let listOfSaves;\n        let saved = false;\n\n        // if the user has never saved any hospitals\n        if (!res.saved) {\n          listOfSaves = [];\n        } else {\n          if (res[1].saved.hospitals) {\n            listOfSaves = res.saved.hospitals;\n            // if the user has saved this particular hospital before\n            const index = res.saved.hospitals.findIndex(hospital => hospital.name.replace(/\\s/g,'').toLowerCase() == props.targetHos.name.replace(/\\s/g,'').toLowerCase())\n            if (index != -1) {\n              saved = true;\n            }\n          } else {\n            listOfSaves = [];\n          }\n        }\n\n\n        setState({\n          hasLiked: liked,\n          likedList: listOfLikes,\n          numLikes: props.targetHos.likes,\n\n          hasSaved: saved,\n          savedList: listOfSaves,\n\n          reportedList: res.reportedHospitals ? res.reportedHospitals : \"\",\n          numReports: res[0].report ? res[0].report.reportCount : 0,\n          reportReasonsList: res[0].report ? res[0].report.reportReasons : \"\",\n          oneReason: \"\"\n        });\n        console.log('likeSaveInfo');\n        console.log(likeSaveInfo);\n\n        // setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  // wait for returned props from firebase to be ready\n  let getStoredData = async () => {\n    // let [storedSearchInfo, userStoredCredentials] =\n    //   await Promise.all([props.searchInfo, props.storedCredentials]);\n    // return [storedSearchInfo, userStoredCredentials];\n\n    let storedCredentials = await props.storedCredentials;\n    return storedCredentials;\n  }\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LIKE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // when the like button is pressed\n  const toggleLikeUnlike = () => {\n    // the user has liked this hospital before\n    if (likeSaveInfo.hasLiked) {\n      let likedListCopy = likeSaveInfo.likedList;\n      let index = likedListCopy.findIndex(hospital => hospital.name == props.targetHos.name);\n      // remove this hospital from the user like list\n      likedListCopy.splice(index, 1);\n      setState(prevState => {\n        prevState.numLikes = prevState.numLikes - 1;\n        prevState.hasLiked = false;\n        prevState.likedList = likedListCopy;\n        return ({\n          ...prevState\n        })\n      })\n    } else {\n      console.log(props.targetHos);\n      const newHospInfo = {\n        name: props.targetHos.name,\n        address: props.targetHos.address,\n        likes: likeSaveInfo.numLikes,\n        phone: props.targetHos.phone,\n        relatedSpecialty: props.targetHos.relatedSpecialty,\n        type: props.targetHos.type\n      };\n\n      likeSaveInfo.likedList.push(newHospInfo);\n      console.log(likeSaveInfo);\n      setState(\n        // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        (prevState) => {\n          prevState.numLikes = prevState.numLikes + 1;\n          prevState.hasLiked = true;\n          return ({\n            ...prevState\n          })\n        }\n      )\n    }\n    toggleLike();\n  }\n\n  const toggleLike = () => {\n    waitLikeUpdate()\n      .then((res) => {\n        console.log(likeSaveInfo.likedList);\n        props.changeHospLikeStatus(likeSaveInfo.likedList);\n        const updateInfo = {\n          specialty: props.targetHos.relatedSpecialty,\n          hospital: props.targetHos.HospitalName.replace(/\\s/g,''),\n          likes: res[1]\n        }\n        props.updateHospitalLikes(updateInfo);\n        updateLocalDocList(updateInfo);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  let waitLikeUpdate = async () => {\n    let [likedList, likes] =\n      await Promise.all([likeSaveInfo.likedList, likeSaveInfo.numLikes]);\n    return [likedList, likes];\n  }\n\n  const updateLocalDocList = (updateInfo)=>{\n    // set location target list location\n    console.log('local list');\n    let newHosList = [];\n    for (let hos in props.hospitalInfo){\n      let hosItem = props.hospitalInfo[hos];\n      console.log('hosItem')\n      console.log(hosItem)\n      if (hosItem.name == props.targetHos.name){\n        hosItem.NumberOfLikes = likeSaveInfo.numLikes;\n        hosItem.likes = likeSaveInfo.numLikes;\n      }\n      newHosList.push(hosItem);\n    }\n    console.log(newHosList);\n    props.sethospitalInfo(newHosList);\n\n    // set database\n    let newDatabase;\n    newDatabase = props.database;\n    let hospitalId = updateInfo['hospital'].replace(/\\s/g,'')\n    newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]['likes'] = likeSaveInfo.numLikes;\n    newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]['NumberOfLikes'] = likeSaveInfo.numLikes;\n    console.log('new database')\n    console.log(newDatabase[updateInfo['specialty']]['hospitals'][hospitalId]);\n    props.setDatabase(newDatabase);\n  }\n\n  // if the user has liked this hospital before: filled heart, otherwise outlined heart\n  const LikeIcon = (likeSaveInfo.hasLiked) ? FavoriteIcon : FavoriteBorderOutlinedIcon;\n\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SAVE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // when the save button is pressed\n  const toggleSaveUnsave = () => {\n    // the user has saved this hospital before\n    if (likeSaveInfo.hasSaved) {\n      let savedListCopy = likeSaveInfo.savedList;\n      let index = savedListCopy.findIndex(hospital => hospital.name == props.targetHos.name);\n      // remove this hospital from the user saved list\n      savedListCopy.splice(index, 1);\n\n      setState({\n        ...likeSaveInfo,\n        savedList: savedListCopy,\n        hasSaved: false,\n      })\n    } else {\n      // the newly saved hospital's information to be added to the user's saved hospital list\n      const newHospInfo = {\n        name: props.targetHos.name.replace(/\\s/g,''),\n        address: props.targetHos.address,\n        likes: likeSaveInfo.numLikes,\n        phone: props.targetHos.phone,\n        relatedSpecialty: props.targetHos.relatedSpecialty,\n        type: props.targetHos.type\n      };\n      likeSaveInfo.savedList.push(newHospInfo);\n      setState(\n        // add to the list if the list contains other doctors, otherwise use this doctor to start a list\n        (prevState) => {\n          prevState.hasSaved = true;\n          return ({\n            ...prevState\n          })\n        }\n      )\n    }\n    toggleSave();\n  }\n\n  // triggered if the save button is pressed (which sets state)\n  // useEffect(() => {\n  //   if (renderCount == 1) {\n  //     return toggleSave();\n  //   }\n  // }, [likeSaveInfo.hasSaved, likeSaveInfo.savedList]);\n\n\n  const toggleSave = () => {\n    waitSaveUpdate()\n      .then((res) => {\n        props.changeHospSaveStatus(res);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  let waitSaveUpdate = async () => {\n    let savedList = await likeSaveInfo.savedList;\n    return savedList;\n  }\n\n\n  // if the user has saved this doctor before: filled bookmark, otherwise outlined bookmark\n  const SaveIcon = (likeSaveInfo.hasSaved) ? BookmarkIcon : BookmarkBorderOutlinedIcon;\n\n\n\n  // -------------------------------------------------------------------- //\n    // ----------------------------Report---------------------------------------- //\n  // 新加 5/14\n  //report弹窗：填的表\n  const [reportOpen, setReportOpen] = React.useState(false);\n  const handleReportOpen = () => {\n    setReportOpen(true);\n  };\n\n  const handleReportClose = () => {\n    setReportOpen(false);\n  };\n\n  const handleReportReason = (event) => {\n    const oneReason = event.target.value;\n    setState({\n      ...likeSaveInfo,\n      oneReason: oneReason,\n    });\n  };\n\n  console.log('props.targetHos');\n  console.log(props.targetHos);\n  \n  const reported = likeSaveInfo.reportedList.includes(props.targetHos.name);\n\n  // send hospital report to database\n  const submitReport = () => {\n    const oneReason = likeSaveInfo.oneReason;\n    const reasons = likeSaveInfo.reportReasonsList;\n    reasons.push(oneReason);\n    const reportedList = likeSaveInfo.reportedList;\n    if (!reported) {\n      reportedList.push(props.targetHos.name);\n    }\n\n    // send to specialty doctor account\n    const oneReport = {\n      reportCount: likeSaveInfo.numReports + 1,\n      reportReasons: reasons,\n\n      // *******hard code \n      specialty: props.targetHos.relatedSpecialty,\n      hospital: props.targetHos.name,\n    };\n    props.reportHospital(oneReport);\n\n    // send to user account\n    const sendToAccount = {\n      reportedHospitals: reportedList,\n    };\n    props.sendReportedHospitals(sendToAccount);\n\n    setReportOpen(false);\n    setState((prevState) => ({\n      ...likeSaveInfo,\n      numReports: prevState.numReports + 1,\n      reportReasonsList: [prevState.reportReasonsList, oneReason],\n      oneReason: \"\",\n      reportedList: [prevState.reportedList,props.targetHos.name],\n    }));\n  };\n\n\n\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // ~~~~~~~~~~~sign up or login in if want to save or report~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n  // 弹窗去signin/signup如果要report没有login\n  const [loginOpen, setLoginOpen] = React.useState({\n    open: false,\n    // keep track of what function the user selects (report, like, save, tag)\n    userOption: \"\",\n  });\n\n  const handleLoginOpen = (option) => {\n    setLoginOpen({\n      open: true,\n      userOption: option,\n    });\n  };\n\n  const handleLoginClose = () => {\n    setLoginOpen({\n      ...loginOpen,\n      open: false,\n    });\n  };\n\n  // for login in diagolue: render correponding icon for user option: recommend, like, save\n  let Icon = FavoriteIcon;\n\n  if (loginOpen.userOption == \"Recommend\") {\n    Icon = FavoriteIcon;\n  } else if (loginOpen.userOption == \"Save\") {\n    Icon = BookmarkBorderOutlinedIcon;\n  } else if (loginOpen.userOption == \"Report\") {\n    Icon = ErrorOutlineOutlinedIcon;\n  } else {\n    Icon = EditOutlinedIcon;\n  }\n\n//   const signUpInDialogue = (option) => {\n//     const optionFirstUpper = option[0].toUpperCase() + option.slice(1);\n\n//     return (\n\n//       <Dialog\n//         fullWidth=\"true\"\n//         maxWidth=\"sm\"\n//         open={loginOpen}\n//         onClose={handleLoginClose}\n//       >\n//         <Box display=\"flex\" alignItems=\"center\">\n//           <Box flexGrow={1}>\n//             <DialogTitle>{optionFirstUpper} a Doctor</DialogTitle>\n//           </Box>\n//           <Box>\n//             <DialogActions>\n//               <IconButton\n//                 size=\"small\"\n//                 onClick={handleLoginClose}\n//                 color=\"primary\"\n//               >\n//                 <CloseIcon />\n//               </IconButton>\n//             </DialogActions>\n//           </Box>\n//         </Box>\n//         <DialogContent>\n//           <Box\n//             display=\"flex\"\n//             flexDirection=\"column\"\n//             justifyContent=\"center\"\n//             alignItems=\"center\"\n//           >\n//             <ErrorOutlineOutlinedIcon />\n//             <br></br>\n//             <Typography variant=\"body1\" align=\"center\">\n//               You need to sign in to {option} this doctor\n//                         </Typography>\n//           </Box>\n//           <Box display=\"flex\" mt={2} mb={2}>\n//             <Button\n//               variant=\"contained\"\n//               color=\"primary\"\n//               style={{ textTransform: \"none\" }}\n//               fullWidth\n//               component={Link}\n//               to=\"/login\"\n//             >\n//               Log in\n//                         </Button>\n//           </Box>\n\n//           <Box display=\"flex\" mb={2}>\n//             <Button\n//               variant=\"outlined\"\n//               color=\"primary\"\n//               style={{ textTransform: \"none\" }}\n//               fullWidth\n//               component={Link}\n//               to=\"/signup\"\n//             >\n//               Sign up\n//                         </Button>\n//           </Box>\n//         </DialogContent>\n//       </Dialog>\n//     )\n//   }\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    <div>\n      <div className={classes.covidBox}>\n        <CovidAlert />\n      </div>\n\n      {/* For 'return to hospitals' button (需要换成return to doctors， depending on user之前是怎么搜的) */}\n      <Box display=\"flex\" mt={3} mb={3} className={classes.returnBox}>\n        <Button\n          style={{ fontSize: 16, textTransform: \"none\" }}\n          color=\"primary\"\n          startIcon={<ArrowBackIosIcon />}\n          onClick={backToRes}\n        >\n          Return to {returnPageDesc}\n        </Button>\n      </Box>\n\n      {/* 手机屏幕才会出现的格式：hospital照片在上面 ，like icon 在右上角*/}\n      <Hidden smUp>\n        <Grid container display=\"flex\" justifyContent=\"center\">\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6} align=\"center\">\n            {/* hospital image */}\n            <div style={{ width: 150, height: 180 }}>\n              <img className={classes.img} src={hospImg} alt=\"hospimg\" />\n            </div>\n          </Grid>\n          {/* Like icon + number of likes */}\n          <Grid item xs={3}>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              {/* 如果登入了，爱心icon成了iconButton，可以点 , 但是我没写logic, 目前点了的话，这个button不会从\n              <FavoriteBorderOutlinedIcon> 换成<FavoriteIcon>, likeCount也不会增加，麻烦你了\n              */}\n              {authenticated ? (\n                <IconButton onClick={toggleLikeUnlike}>\n                  <LikeIcon style={{ color: \"red\" }} />\n                </IconButton>\n              ) : (\n                  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的\n                  <Fragment>\n                    <IconButton onClick={() => handleLoginOpen(\"Recommend\")}>\n                      <FavoriteBorderOutlinedIcon style={{ color: \"red\" }} />\n                    </IconButton>\n                  </Fragment>\n\n                )}                )}\n              {/* like count */}\n              <Typography variant=\"body2\" color=\"primary\">\n                {likeSaveInfo.numLikes.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Hidden>\n\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={5} md={4}>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            {/* 大屏幕会出现的格式：hospital照片在左边 */}\n            <Hidden xsDown>\n              {/* hospital image */}\n              <div style={{ width: 200, height: 250 }}>\n                <img className={classes.img} src={hospImg} alt=\"hospimg\" />\n              </div>\n            </Hidden>\n\n            {/* 手机屏幕出现的格式：hospital name 在照片下面 */}\n            <Hidden smUp>\n              <Typography variant=\"h5\" color=\"primary\" style={{ margin: 20 }}>\n                {props.targetHos[\"HospitalName\"]}\n              </Typography>\n            </Hidden>\n\n            <Box display=\"flex\" mt={2}>\n              {/* report button */}\n\n              {authenticated ? (\n                <Button\n                  disabled={reported}\n                  startIcon={<ErrorOutlineOutlinedIcon />}\n                  style={{ textTransform: \"none\" }}\n                  color=\"primary\"\n                  onClick={handleReportOpen}\n                >\n                  Report\n              </Button>\n              ) : (\n// michelle 5/16: 这里的fragment和里面的东西都替换掉原来的 （这里新的东西比原来长很多 麻烦小心对一下位置）\n                <Fragment>\n                <Button\n                  startIcon={<ErrorOutlineOutlinedIcon />}\n                  style={{ textTransform: \"none\" }}\n                  color=\"primary\"\n                  onClick={() => handleLoginOpen(\"Report\")}\n                >\n                  Report\n                </Button>\n\n                {/* login dialog asking user to sign in if they want to report, save, or like */}\n                <Dialog\n                  fullWidth=\"true\"\n                  maxWidth=\"sm\"\n                  open={loginOpen.open}\n                  onClose={handleLoginClose}\n                >\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Box flexGrow={1}>\n                      <DialogTitle>{loginOpen.userOption} a Hospital</DialogTitle>\n                    </Box>\n                    <Box>\n                      <DialogActions>\n                        <IconButton\n                          size=\"small\"\n                          onClick={handleLoginClose}\n                          color=\"primary\"\n                        >\n                          <CloseIcon />\n                        </IconButton>\n                      </DialogActions>\n                    </Box>\n                  </Box>\n                  <DialogContent>\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"column\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                    >\n                      <Icon style={{ color: \"red\" }} />\n                      <br></br>\n                      <Typography variant=\"body1\" align=\"center\">\n                        You need to sign in to {loginOpen.userOption.toLowerCase()} this hospital\n                                        </Typography>\n                    </Box>\n                    <Box display=\"flex\" mt={2} mb={2}>\n                      <Button\n                        className={classes.signUpInButton}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{ textTransform: \"none\" }}\n                        fullWidth\n                        component={Link}\n                        to=\"/login\"\n                      >\n                        Log in\n                                        </Button>\n                    </Box>\n\n                    <Box display=\"flex\" mb={2}>\n                      <Button\n                        className={classes.signUpInButton}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        style={{ textTransform: \"none\" }}\n                        fullWidth\n                        component={Link}\n                        to=\"/signup\"\n                      >\n                        Sign up\n                                        </Button>\n                    </Box>\n                  </DialogContent>\n                </Dialog>\n\n                </Fragment>\n                )}\n\n                {/* report dialogue 新加的 5/10/2020 */}\n              <Dialog\n                fullWidth=\"true\"\n                maxWidth=\"sm\"\n                open={reportOpen}\n                onClose={handleReportClose}\n              >\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Box flexGrow={1}>\n                    <DialogTitle>Report</DialogTitle>\n                  </Box>\n                  <Box>\n                    <DialogActions>\n                      <IconButton\n                        size=\"small\"\n                        onClick={handleReportClose}\n                        color=\"primary\"\n                      >\n                        <CloseIcon />\n                      </IconButton>\n                    </DialogActions>\n                  </Box>\n                </Box>\n                <DialogContent>\n                  <Typography variant=\"body1\">\n                    Please provide a reason for why you are reporting this\n                    hospital:\n                  </Typography>\n                  <br></br>\n                  <TextField\n                    fullWidth\n                    multiline\n                    required\n                    variant=\"outlined\"\n                    label=\"Reason\"\n                    rows={5}\n                    onChange={handleReportReason}\n                  />\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    className={classes.reportButton}\n                    disabled={!likeSaveInfo.oneReason}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\" }}\n                    onClick={submitReport}\n                  >\n                    Submit\n                  </Button>\n                </DialogActions>\n              </Dialog>\n\n\n              {/* save button */}\n\n              {authenticated ? (\n                <Button\n                  startIcon={<SaveIcon />}\n                  style={{ textTransform: \"none\" }}\n                  color=\"primary\"\n                  onClick={toggleSaveUnsave}\n                >\n                  Save\n              </Button>\n              ) : (\n                  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的\n                  <Fragment>\n                    <Button\n                      startIcon={<SaveIcon />}\n                      style={{ textTransform: \"none\" }}\n                      color=\"primary\"\n                      onClick={() => handleLoginOpen(\"Save\")}\n                    >\n                      Save\n                     </Button>\n                  </Fragment>\n                )}\n\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={6}>\n          {/* 大屏幕会出现的格式：hospital name 在右边 */}\n          <Hidden xsDown>\n            <Typography variant=\"h5\" color=\"primary\">\n              {props.targetHos[\"HospitalName\"]}\n              {/* private tag */}\n              <Chip\n                style={{ marginLeft: 10 }}\n                color=\"primary\"\n                size=\"small\"\n                label=\"Private\"\n              ></Chip>\n            </Typography>\n          </Hidden>\n\n          {/* 手机幕会出现的格式：灰色比较粗的divider line */}\n          <Hidden smUp>\n            <hr className={classes.line}></hr>\n          </Hidden>\n\n          {/* hospital basic info */}\n          <Box className={classes.profileGrid} mt={3} mb={3}>\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Official website: </strong>{\" \"}\n              <Link href=\"https://www.pantai.com.my/kuala-lumpur\">Link</Link>\n            </Typography>\n\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Hours: </strong>{\" \"}\n              <span>Open {props.targetHos[\"Hours\"]}</span>\n            </Typography>\n\n            <Hidden smUp>\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <strong>Hospital Type: </strong> {/* private tag */}\n                <Chip\n                  style={{ marginLeft: 10 }}\n                  color=\"primary\"\n                  size=\"small\"\n                  label={props.targetHos[\"HospitalType\"]}\n                ></Chip>\n              </Typography>\n            </Hidden>\n\n            <br></br>\n\n            <Box display=\"flex\" flexDirection=\"row\" mt={1}>\n              <LocationOnOutlinedIcon style={{ marginRight: 10 }} />\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <span>{props.targetHos[\"Address\"]}</span>\n              </Typography>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\" mt={1}>\n              <PhoneOutlinedIcon style={{ marginRight: 10 }} />\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <span>{props.targetHos[\"Phone\"]}</span>\n              </Typography>\n            </Box>\n          </Box>\n          {/* edit Tag component (imported from HospTag.js) */}\n          <HospTags tagInfo={props.targetHos[\"tags\"]} targetHos={props.targetHos} handleLoginOpen={handleLoginOpen}/>\n        </Grid>\n\n        <Grid item xs={12} sm={1} md={2}>\n          {/* 大屏幕会出现的格式：like icon在最右边 */}\n          <Hidden xsDown>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              {/* 如果登入了，爱心icon成了iconButton，可以点 , 但是我没写logic, 目前点了的话，这个button不会从\n              <FavoriteBorderOutlinedIcon> 换成<FavoriteIcon>, likeCount也不会增加，麻烦你了\n              */}\n              {authenticated ? (\n                <IconButton onClick={toggleLikeUnlike}>\n                  <LikeIcon style={{ color: \"red\" }} />\n                </IconButton>\n              ) : (\n                  // michelle 5/16: 这里的fragment和里面的东西都替换掉原来的\n                  <Fragment>\n                    <IconButton onClick={() => handleLoginOpen(\"Recommend\")}>\n                      <FavoriteBorderOutlinedIcon style={{ color: \"red\" }} />\n                    </IconButton>\n                  </Fragment>\n                )}\n              <Typography variant=\"body2\" color=\"primary\">\n                {likeSaveInfo.numLikes.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n              </Typography>\n            </Box>\n          </Hidden>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nHospInfo.propTypes = {\n  // like\n  changeHospLikeStatus: PropTypes.func.isRequired,\n  updateHospitalLikes: PropTypes.func.isRequired,\n\n  // save\n  changeHospSaveStatus: PropTypes.func.isRequired,\n\n  // report\n  sendReportedHospitals: PropTypes.func.isRequired,\n  reportHospital: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.user.authenticated,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.searchInfoHospital\n});\n\nconst mapActionsToProps = {\n  changeHospLikeStatus,\n  updateHospitalLikes,\n\n  changeHospSaveStatus,\n\n  sendReportedHospitals,\n  reportHospital\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(HospInfo);"]},"metadata":{},"sourceType":"module"}
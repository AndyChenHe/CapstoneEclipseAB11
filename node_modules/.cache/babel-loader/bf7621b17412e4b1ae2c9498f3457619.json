{"ast":null,"code":"var _jsxFileName = \"/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/Navbar.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Logo from \"../img/login/logo.svg\";\nimport LogoWhite from \"../img/login/logo-white.svg\"; // material ui\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\"; //redux\n\nimport { connect } from \"react-redux\"; // User menu component\n\nimport UserMenu from \"./UserMenu\"; // material ui style\n\nconst styles = theme => ({ ...theme.nav,\n  appbar: {\n    [theme.breakpoints.down(\"sm\")]: {\n      background: \"transparent\"\n    }\n  },\n  logo: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  logoWhite: {\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  }\n});\n\nclass Navbar extends Component {\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      authenticated\n    } = this.props;\n    return /*#__PURE__*/React.createElement(AppBar, {\n      className: classes.appbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      className: \"nav-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      component: Link,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Logo,\n      alt: \"logo\",\n      className: classes.logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: LogoWhite,\n      alt: \"logo\",\n      className: classes.logowhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    })), authenticated ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UserMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.navButton,\n      size: \"small\",\n      variant: \"outlined\",\n      color: \"inherit\",\n      component: Link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \"Login / Sign up\"))));\n  }\n\n}\n\nNavbar.propTypes = {\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Navbar));","map":{"version":3,"sources":["/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/Navbar.js"],"names":["React","Component","Fragment","Link","PropTypes","withStyles","AppBar","Toolbar","Button","connect","UserMenu","styles","theme","nav","appbar","breakpoints","down","background","logo","display","logoWhite","up","Navbar","render","classes","props","authenticated","Logo","LogoWhite","logowhite","navButton","propTypes","bool","isRequired","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Logo from \"../img/login/logo.svg\";\nimport LogoWhite from \"../img/login/logo-white.svg\";\n\n// material ui\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\n\n//redux\nimport { connect } from \"react-redux\";\n\n// User menu component\nimport UserMenu from \"./UserMenu\";\n\n// material ui style\nconst styles = (theme) => ({\n  ...theme.nav,\n  appbar: {\n    [theme.breakpoints.down(\"sm\")]: {\n      background: \"transparent\",\n    },\n  },\n\n  logo: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  logoWhite: {\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n});\n\nclass Navbar extends Component {\n  render() {\n    const { classes } = this.props;\n    const { authenticated } = this.props;\n\n    return (\n      <AppBar className={classes.appbar}>\n        <Toolbar className=\"nav-container\">\n          <Button component={Link} to=\"/\">\n            <img src={Logo} alt=\"logo\" className={classes.logo} />\n            <img src={LogoWhite} alt=\"logo\" className={classes.logowhite} />\n          </Button>\n          {authenticated ? (\n            <Fragment>\n              <UserMenu />\n            </Fragment>\n          ) : (\n            <Fragment>\n              <Button\n                className={classes.navButton}\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"inherit\"\n                component={Link}\n                to=\"/login\"\n              >\n                Login / Sign up\n              </Button>\n            </Fragment>\n          )}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  authenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.user.authenticated,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Navbar));\n"]},"metadata":{},"sourceType":"module"}
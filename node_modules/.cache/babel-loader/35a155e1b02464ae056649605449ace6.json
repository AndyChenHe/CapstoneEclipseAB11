{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/mydoc_25/src/Components/GlobalSearch.js\";\nimport React, { Fragment } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\"; // components (add global search tabs inside the dialog)\n\nimport GlobalSearchTabs from \"./GlobalSearchTabs\";\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      border: \"1px solid rgba(0, 0, 0, 0.12)\"\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      color: \"#003367\"\n    }\n  },\n  inputRoot: {\n    color: \"inherit\",\n    [theme.breakpoints.down(\"sm\")]: {\n      color: \"#003367\"\n    }\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\"\n  }\n})); // Global search on Navbar\n\nexport default function GlobalSearch() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState(\"sm\");\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMaxWidthChange = event => {\n    setMaxWidth(event.target.value);\n  };\n\n  const handleFullWidthChange = event => {\n    setFullWidth(event.target.checked);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    fullWidth: fullWidth,\n    maxWidth: maxWidth,\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GlobalSearchTabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.search,\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(InputBase, {\n    placeholder: \"Search\",\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/andychenhe/Desktop/mydoc_25/src/Components/GlobalSearch.js"],"names":["React","Fragment","fade","makeStyles","InputBase","SearchIcon","Button","Dialog","DialogContent","DialogActions","CloseIcon","useMediaQuery","useTheme","GlobalSearchTabs","useStyles","theme","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","down","border","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","color","inputRoot","inputInput","paddingLeft","transition","transitions","create","GlobalSearch","classes","open","setOpen","useState","fullWidth","setFullWidth","maxWidth","setMaxWidth","fullScreen","handleClickOpen","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","root","input"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\n// components (add global search tabs inside the dialog)\nimport GlobalSearchTabs from \"./GlobalSearchTabs\";\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      border: \"1px solid rgba(0, 0, 0, 0.12)\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      color: \"#003367\",\n    },\n  },\n  inputRoot: {\n    color: \"inherit\",\n    [theme.breakpoints.down(\"sm\")]: {\n      color: \"#003367\",\n    },\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n  },\n}));\n\n// Global search on Navbar\nexport default function GlobalSearch() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState(\"sm\");\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMaxWidthChange = (event) => {\n    setMaxWidth(event.target.value);\n  };\n\n  const handleFullWidthChange = (event) => {\n    setFullWidth(event.target.checked);\n  };\n\n  return (\n    <div>\n      <Fragment>\n        {/* user clicks 'search' on Navbar and will render this dialog */}\n        <Dialog\n          fullScreen={fullScreen}\n          fullWidth={fullWidth}\n          maxWidth={maxWidth}\n          open={open}\n          onClose={handleClose}\n        >\n          {/* close icon on top-right */}\n          <DialogActions>\n            <Button autoFocus onClick={handleClose} color=\"primary\">\n              <CloseIcon />\n            </Button>\n          </DialogActions>\n          <DialogContent>\n            {/* Global search tabs + search by specialty/doc/hosp/condition */}\n            <GlobalSearchTabs />\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n\n      <div>\n        {/* Global Search box on Navbar */}\n        <div className={classes.search} onClick={handleClickOpen}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            placeholder=\"Search\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Downloads/may3_getVerify_issue/src/Components/docAccount/DocAccountVerification.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CloudUploadOutlinedIcon from \"@material-ui/icons/CloudUploadOutlined\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport DocSideNav from \"./DocSideNav\";\nimport Navbar from \"../../Components/Navbar\";\nimport CovidAlert from \"../../Components/Alert\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { updateVerification, getUserData } from \"../../redux/actions/userActions\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  anchor: {\n    display: \"block\",\n    paddingTop: 100,\n    marginTop: -100\n  }\n})); // doctor account verification\n\nfunction Verification(props) {\n  const classes = useStyles(); // const { index } = props\n\n  const [medicalNumber, setMedicalNumber] = React.useState();\n  const [identityCard, setIdentityCard] = React.useState({\n    src: \"\",\n    name: \"\"\n  });\n  const [medicalDegree, setMedicalDegree] = React.useState({\n    src: \"\",\n    name: \"\"\n  });\n\n  const editMedicalNumber = event => {\n    setMedicalNumber(event.target.value);\n  };\n\n  const uploadIdentityCard = event => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n\n    reader.onload = () => {\n      setIdentityCard({\n        src: reader.result,\n        name: uploaded.name\n      });\n    };\n  };\n\n  const uploadMedicalDegree = event => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n\n    reader.onload = () => {\n      setMedicalDegree({\n        src: reader.result,\n        name: uploaded.name\n      });\n    };\n  }; // initiate push to firebase when submit button is clicked\n\n\n  const submitVerification = () => {\n    //event.preventDefault();\n    const newVerification = {\n      medicalNumber: medicalNumber,\n      identityCardSrc: identityCard[\"src\"],\n      medicalDegreeSrc: medicalDegree[\"src\"]\n    };\n    props.updateVerification(newVerification);\n  }; // console.log(props.defaultMedicalNum)\n\n\n  const defaultMedicalNum = props.defaultMedicalNum;\n\n  if (!defaultMedicalNum) {\n    // loading sign if prop data is not yet available\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      id: \"accountverification\",\n      className: classes.anchor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      flexDirection: \"row\",\n      mb: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      mdUp: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"docaccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Account Verification\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CancelIcon, {\n      style: {\n        color: \"red\",\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, \"Account not verified\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      required: true,\n      label: \"Medical Registration Number\",\n      defaultValue: defaultMedicalNum,\n      variant: \"outlined\",\n      onChange: editMedicalNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mt: 5,\n      mb: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, \"Malaysian Identity Card\")), /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      style: {\n        display: \"none\"\n      },\n      id: \"contained-button-identity\",\n      multiple: true,\n      type: \"file\",\n      onChange: uploadIdentityCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-identity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 32\n        }\n      }),\n      variant: \"outlined\",\n      component: \"span\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, identityCard.name), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mt: 5,\n      mb: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, \"Certified copy of Medical Degree\")), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      style: {\n        display: \"none\"\n      },\n      id: \"contained-button-medical\",\n      multiple: true,\n      type: \"file\",\n      onChange: uploadMedicalDegree,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-medical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 32\n        }\n      }),\n      variant: \"outlined\",\n      component: \"span\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, medicalDegree.name), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"large\",\n      onClick: submitVerification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    })));\n  }\n}\n\nfunction DocAccountVerification(props) {\n  // const componentDidMount = () => {\n  //   if \n  //   await props.storedVerificationInfo;\n  //   //set loader false\n  // }\n  const classes = useStyles(); // const verificationInfo = props[\"user\"][\"credentials\"][\"verification\"]\n  // const authenticated = props.authenticated;\n  // let storedMedicalNum = \"\";\n  // if (props.storedVerificationInfo) {\n  //   storedMedicalNum = props.storedVerificationInfo.medicalRegistrationNumber;\n  // }\n  // console.log(props.storedVerificationInfo.medicalRegistrationNumber)\n  // const {\n  //   user: {\n  //     credentials: { \n  //       verification\n  //     },\n  //   },\n  // } = props;\n  // useEffect(() => {\n  //   if (!props.fetched) {\n  //     props.fetchRules();\n  //   }\n  //   console.log(\"again\");\n  // }, []);\n\n  const storedMedicalNum = props.storedVerificationInfo && props.storedVerificationInfo.medicalRegistrationNumber; // console.log(storedMedicalNum)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.covidBox,\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CovidAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DocSideNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 8,\n    lg: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Verification, {\n    updateVerification: props.updateVerification,\n    defaultMedicalNum: storedMedicalNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Verification, {\n    updateVerification: props.updateVerification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  })));\n} // 加了下面这些\n\n\nDocAccountVerification.propTypes = {\n  user: PropTypes.object.isRequired,\n  updateVerification: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // authenticated: state.user.authenticated,\n  user: state.user,\n  storedVerificationInfo: state.user.credentials.verification\n});\n\nconst mapActionsToProps = {\n  updateVerification\n};\nexport default connect(mapStateToProps, mapActionsToProps)(DocAccountVerification);","map":{"version":3,"sources":["/Users/Michelle/Downloads/may3_getVerify_issue/src/Components/docAccount/DocAccountVerification.js"],"names":["React","useEffect","makeStyles","Box","Typography","Button","Grid","TextField","Hidden","IconButton","ArrowBackIosIcon","CancelIcon","CloudUploadOutlinedIcon","CircularProgress","Link","DocSideNav","Navbar","CovidAlert","connect","PropTypes","updateVerification","getUserData","useStyles","theme","root","display","marginLeft","spacing","covidBox","marginTop","breakpoints","down","marginRight","anchor","paddingTop","Verification","props","classes","medicalNumber","setMedicalNumber","useState","identityCard","setIdentityCard","src","name","medicalDegree","setMedicalDegree","editMedicalNumber","event","target","value","uploadIdentityCard","reader","FileReader","uploaded","files","readAsDataURL","onload","result","uploadMedicalDegree","submitVerification","newVerification","identityCardSrc","medicalDegreeSrc","defaultMedicalNum","color","textTransform","float","DocAccountVerification","storedMedicalNum","storedVerificationInfo","medicalRegistrationNumber","position","propTypes","user","object","isRequired","func","mapStateToProps","state","credentials","verification","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CloudUploadOutlinedIcon from \"@material-ui/icons/CloudUploadOutlined\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { Link } from 'react-router-dom';\n\nimport DocSideNav from \"./DocSideNav\";\nimport Navbar from \"../../Components/Navbar\";\nimport CovidAlert from \"../../Components/Alert\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { updateVerification, getUserData } from \"../../redux/actions/userActions\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n  },\n\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  anchor: {\n    display: \"block\",\n    paddingTop: 100,\n    marginTop: -100,\n  },\n}));\n\n\n// doctor account verification\nfunction Verification(props) {\n  const classes = useStyles();\n  // const { index } = props\n\n  const [medicalNumber, setMedicalNumber] = React.useState();\n  const [identityCard, setIdentityCard] = React.useState({\n    src: \"\",\n    name: \"\"\n  });\n  const [medicalDegree, setMedicalDegree] = React.useState({\n    src: \"\",\n    name: \"\"\n  });\n\n  const editMedicalNumber = (event) => {\n    setMedicalNumber(event.target.value);\n  }\n\n  const uploadIdentityCard = (event) => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n    reader.onload = () => {\n      setIdentityCard({\n        src: reader.result,\n        name: uploaded.name\n      })\n    };\n  };\n\n  const uploadMedicalDegree = (event) => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n    reader.onload = () => {\n      setMedicalDegree({\n        src: reader.result,\n        name: uploaded.name\n      })\n    };\n  };\n\n\n  // initiate push to firebase when submit button is clicked\n  const submitVerification = () => {\n    //event.preventDefault();\n    const newVerification = {\n      medicalNumber: medicalNumber,\n      identityCardSrc: identityCard[\"src\"],\n      medicalDegreeSrc: medicalDegree[\"src\"],\n    };\n    props.updateVerification(newVerification);\n  };\n\n\n  // console.log(props.defaultMedicalNum)\n  const defaultMedicalNum = props.defaultMedicalNum;\n\n  if (!defaultMedicalNum) {\n\n    // loading sign if prop data is not yet available\n    return (\n      <div className={classes.root}>\n        <CircularProgress color=\"secondary\" />\n      </div>\n    );\n\n  } else {\n\n    return (\n      <a id=\"accountverification\" className={classes.anchor}>\n        <Grid container spacing={0}>\n          <Grid item xs={1}></Grid>\n          <Grid item xs={10} md={8}>\n            <Box flexGrow={1} flexDirection=\"row\" mb={1}>\n              <Typography variant=\"h5\" color=\"primary\">\n                {/* Back button 手机屏幕才会出玄 */}\n                <Hidden mdUp>\n                  {/* <IconButton> */}\n                  <Link to='docaccount'>\n                    <ArrowBackIosIcon />\n                  </Link>\n                  {/* </IconButton> */}\n                </Hidden>\n                <strong>Account Verification</strong>\n              </Typography>\n            </Box>\n\n            <br></br>\n            <Box display=\"flex\" flexDirection=\"row\">\n              {/* 现在是ACCOUNT NOT VERIFIED, 需要换icon 如果account pending/verified */}\n              <CancelIcon style={{ color: \"red\", marginRight: 10 }} />\n              <Typography variant=\"body1\">\n                Account not verified<br></br>\n              </Typography>\n            </Box>\n            <br></br>\n            <br></br>\n            {/* Meidcal reg number */}\n            <TextField\n              fullWidth\n              required\n              label=\"Medical Registration Number\"\n              defaultValue={defaultMedicalNum}\n              variant=\"outlined\"\n              onChange={editMedicalNumber}\n            />\n            {/* Upload malaysian identity card */}\n            <Box display=\"flex\" mt={5} mb={3}>\n              <Box flexGrow={1}>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Malaysian Identity Card\n              </Typography>\n              </Box>\n              <Box flexGrow={1}>\n                <input\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  id=\"contained-button-identity\"\n                  multiple\n                  type=\"file\"\n                  onChange={uploadIdentityCard}\n                />\n                <label htmlFor=\"contained-button-identity\">\n                  <Button\n                    startIcon={<CloudUploadOutlinedIcon />}\n                    variant=\"outlined\"\n                    component=\"span\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\", float: \"right\" }}\n                    size=\"medium\"\n                  >\n                    Upload\n              </Button>\n                </label>\n              </Box>\n            </Box>\n            <Typography variant=\"body2\">{identityCard.name}</Typography>\n            {/* Upload medical degree */}\n            <Box display=\"flex\" mt={5} mb={5}>\n              <Box flexGrow={1}>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Certified copy of Medical Degree\n              </Typography>\n              </Box>\n              <Box>\n                <input\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  id=\"contained-button-medical\"\n                  multiple\n                  type=\"file\"\n                  onChange={uploadMedicalDegree}\n                />\n                <label htmlFor=\"contained-button-medical\">\n                  <Button\n                    startIcon={<CloudUploadOutlinedIcon />}\n                    variant=\"outlined\"\n                    component=\"span\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\", float: \"right\" }}\n                    size=\"medium\"\n                  >\n                    Upload\n              </Button>\n                </label>\n              </Box>\n            </Box>\n            <Typography variant=\"body2\">{medicalDegree.name}</Typography>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ textTransform: \"none\", float: \"right\" }}\n              size=\"large\"\n              onClick={submitVerification}\n            >\n              Submit\n          </Button>\n            <br></br>\n            <br></br>\n          </Grid>\n          <Grid item xs={1} md={3}></Grid>\n        </Grid>\n      </a>\n    );\n  }\n}\n\n\nfunction DocAccountVerification(props) {\n  // const componentDidMount = () => {\n  //   if \n\n\n  //   await props.storedVerificationInfo;\n  //   //set loader false\n  // }\n\n\n\n  const classes = useStyles();\n\n  // const verificationInfo = props[\"user\"][\"credentials\"][\"verification\"]\n  // const authenticated = props.authenticated;\n\n\n\n\n\n\n  // let storedMedicalNum = \"\";\n  // if (props.storedVerificationInfo) {\n  //   storedMedicalNum = props.storedVerificationInfo.medicalRegistrationNumber;\n  // }\n  // console.log(props.storedVerificationInfo.medicalRegistrationNumber)\n\n  // const {\n  //   user: {\n  //     credentials: { \n  //       verification\n  //     },\n  //   },\n  // } = props;\n\n  // useEffect(() => {\n  //   if (!props.fetched) {\n  //     props.fetchRules();\n  //   }\n  //   console.log(\"again\");\n  // }, []);\n\n  const storedMedicalNum = props.storedVerificationInfo && props.storedVerificationInfo.medicalRegistrationNumber;\n  // console.log(storedMedicalNum)\n\n  return (\n    <div>\n      <Navbar />\n      <Hidden smDown>\n        <div className={classes.covidBox} style={{ position: \"relative\" }}>\n          <CovidAlert />\n\n          <Grid container spacing={0}>\n            <Grid item md={4} lg={3}>\n              <DocSideNav />\n            </Grid>\n\n            <Grid item sm={12} md={8} lg={9}>\n              <Verification updateVerification={props.updateVerification} defaultMedicalNum={storedMedicalNum} />\n            </Grid>\n          </Grid>\n        </div>\n      </Hidden>\n      <Hidden mdUp>\n        <Verification updateVerification={props.updateVerification} />\n      </Hidden>\n    </div>\n  );\n}\n\n\n// 加了下面这些\nDocAccountVerification.propTypes = {\n  user: PropTypes.object.isRequired,\n  updateVerification: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  // authenticated: state.user.authenticated,\n  user: state.user,\n  storedVerificationInfo: state.user.credentials.verification\n});\n\nconst mapActionsToProps = {\n  updateVerification,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(DocAccountVerification);"]},"metadata":{},"sourceType":"module"}
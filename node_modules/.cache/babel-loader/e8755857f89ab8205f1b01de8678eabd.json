{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/finalCapstoneII/CapstoneEclipseAB11/src/Components/home/SearchTabs.js\";\nimport React from \"react\"; // material ui\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nconst useStyles = makeStyles(theme => ({\n  inputRoot: {\n    \"& .MuiFilledInput-root\": {\n      backgroundColor: \"rgba(255,255,255)\",\n      borderRadius: 4\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      variant: \"outline\"\n    }\n  },\n  tabContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }\n})); //filter specialty\n\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.specialty\n}); //filter doctor\n\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.name\n}); //filter hospital\n\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.hospName\n}); //filter condition\n\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.condition\n}); // specialties options\n// const specialties = [\n//   { specialty: \"Allergy and Immunology\" },\n//   { specialty: \"Anesthesiology\" },\n//   { specialty: \"Gastroenterology\" },\n// ];\n// doctor name options\n\nconst docNames = [{\n  name: \"Alex Leow\"\n}, {\n  name: \"Alex Tan\"\n}, {\n  name: \"Bryan Lee\"\n}]; // hospital options\n\nconst hospNames = [{\n  hospName: \"Pantai Hospital Kuala Lumpur\"\n}, {\n  hospName: \"Sunway Medical\"\n}]; // Conditions options\n// const conditions = [{ condition: \"Fever\" }, { condition: \"Headache\" }];\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props;\n  return value === index && /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, children);\n}\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\"\n    }\n  }\n})(props => /*#__PURE__*/React.createElement(Tabs, Object.assign({}, props, {\n  TabIndicatorProps: {\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 63\n      }\n    })\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 15\n  }\n})));\nconst StyledTab = withStyles(theme => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"1em\",\n    marginTop: 10,\n    \"&:focus\": {\n      opacity: 1\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"0.75em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"0.7em\"\n    }\n  }\n}))(props => /*#__PURE__*/React.createElement(Tab, Object.assign({\n  disableRipple: true\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 16\n  }\n}))); // Search Box for Specialty, Doctor, Hospital, Condition\n\nexport default function SearchTabs(props) {\n  const classes = useStyles();\n  const conditions = props.conditionListForInput;\n  const specialties = props.specialtyListForInput;\n  const [value, setValue] = React.useState(0);\n  const [keyword, setkeyword] = React.useState('');\n\n  const handleSearchMethodChange = (event, newValue) => {\n    let method = '';\n\n    if (newValue == 0) {\n      method = 'Specialty';\n    } else if (newValue == 1) {\n      method = 'Doctor';\n    } else if (newValue == 2) {\n      method = 'Hospital';\n    } else {\n      method = 'Condition';\n    }\n\n    setValue(newValue);\n    props.getSearchMethod(method);\n  };\n\n  const getDocHosNameList = () => {\n    console.log(props.database);\n    let allHosName = [];\n    let allDocName = [];\n    let allInfo = props.database;\n\n    for (let spec in allInfo) {\n      let targetSpec = allInfo[spec];\n\n      for (hos in targetSpec.hospitals) {\n        let hospital = targetSpec.hospitals[hos];\n        allHosName.push(hospital.name);\n        let doctorsList = hospital.doctors;\n\n        for (docId in doctorsList) {\n          allDocName.push(doctorsList[docId].name);\n        }\n      }\n    }\n\n    console.log(allHosName);\n    console.log(allDocName);\n  };\n\n  console.log('doc + hos init');\n  getDocHosNameList();\n\n  const handleSpecialtySearchKeyChange = (event, newValue) => {\n    if (newValue) {\n      props.setSearchMethod('Specialty');\n      props.getKeyWords(newValue.specialty);\n    }\n  };\n\n  const handleDoctorSearchKeyChange = (event, newValue) => {\n    if (newValue) {\n      props.getKeyWords(newValue.name);\n    }\n  };\n\n  const handleHospitalSearchKeyChange = (event, newValue) => {\n    if (newValue) {\n      props.getKeyWords(newValue.hospName);\n    }\n  };\n\n  const handleConditionSearchKeyChange = (event, newValue) => {\n    if (newValue) {\n      props.changeConditionLabel(newValue.condition, 'normal');\n    }\n  };\n\n  const getTextFieldValue = event => {\n    setkeyword(event.target.value);\n    props.getKeyWords(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledTabs, {\n    value: value,\n    onChange: handleSearchMethodChange,\n    \"aria-label\": \"search tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Specialty\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Doctor\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Hospital\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Condition\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: handleSpecialtySearchKeyChange,\n    options: specialties,\n    getOptionLabel: option => option.specialty,\n    filterOptions: filterSpecialtyOptions,\n    disabled: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField // disabled={true}\n    , Object.assign({}, params, {\n      label: \"Search by specialty\",\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: handleDoctorSearchKeyChange,\n    freeSolo: true,\n    options: docNames,\n    getOptionLabel: option => option.name,\n    filterOptions: filterDocOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by doctor's name\",\n      variant: \"filled\",\n      onChange: getTextFieldValue,\n      onKeyPress: ev => {\n        if (ev.key === 'Enter') {\n          props.getKeyWords(keyword);\n          props.startSearch();\n        }\n      },\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: handleHospitalSearchKeyChange,\n    freeSolo: true,\n    options: hospNames,\n    getOptionLabel: option => option.hospName,\n    filterOptions: filterHospOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by hospital's name\",\n      onChange: getTextFieldValue,\n      onKeyPress: ev => {\n        if (ev.key === 'Enter') {\n          props.getKeyWords(keyword);\n          props.startSearch();\n        }\n      },\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: handleConditionSearchKeyChange,\n    options: conditions,\n    getOptionLabel: option => option.condition,\n    filterOptions: filterConditionOptions,\n    renderInput: params => {\n      if (props.conditionLabel != \"\") {\n        params.inputProps.value = props.conditionLabel;\n      }\n\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Search by medical condition\",\n        variant: \"filled\",\n        className: classes.inputRoot,\n        InputProps: { ...params.InputProps,\n          disableUnderline: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 20\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/andychenhe/Desktop/finalCapstoneII/CapstoneEclipseAB11/src/Components/home/SearchTabs.js"],"names":["React","withStyles","makeStyles","Tabs","Tab","Box","TextField","Autocomplete","createFilterOptions","useStyles","theme","inputRoot","backgroundColor","borderRadius","breakpoints","down","variant","tabContainer","display","flexDirection","justifyContent","alignItems","filterSpecialtyOptions","matchFrom","stringify","option","specialty","filterDocOptions","name","filterHospOptions","hospName","filterConditionOptions","condition","docNames","hospNames","TabPanel","props","children","value","index","StyledTabs","indicator","width","StyledTab","root","textTransform","color","fontWeight","fontSize","marginTop","opacity","SearchTabs","classes","conditions","conditionListForInput","specialties","specialtyListForInput","setValue","useState","keyword","setkeyword","handleSearchMethodChange","event","newValue","method","getSearchMethod","getDocHosNameList","console","log","database","allHosName","allDocName","allInfo","spec","targetSpec","hos","hospitals","hospital","push","doctorsList","doctors","docId","handleSpecialtySearchKeyChange","setSearchMethod","getKeyWords","handleDoctorSearchKeyChange","handleHospitalSearchKeyChange","handleConditionSearchKeyChange","changeConditionLabel","getTextFieldValue","target","minWidth","params","InputProps","disableUnderline","ev","key","startSearch","conditionLabel","inputProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// material ui\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    \"& .MuiFilledInput-root\": {\n      backgroundColor: \"rgba(255,255,255)\",\n      borderRadius: 4,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      variant: \"outline\",\n    },\n  },\n\n  tabContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  },\n}));\n\n//filter specialty\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.specialty,\n});\n\n//filter doctor\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.name,\n});\n\n//filter hospital\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.hospName,\n});\n\n//filter condition\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.condition,\n});\n\n// specialties options\n// const specialties = [\n//   { specialty: \"Allergy and Immunology\" },\n//   { specialty: \"Anesthesiology\" },\n//   { specialty: \"Gastroenterology\" },\n// ];\n// doctor name options\nconst docNames = [\n  { name: \"Alex Leow\" },\n  { name: \"Alex Tan\" },\n  { name: \"Bryan Lee\" },\n];\n// hospital options\nconst hospNames = [\n  { hospName: \"Pantai Hospital Kuala Lumpur\" },\n  { hospName: \"Sunway Medical\" },\n];\n// Conditions options\n// const conditions = [{ condition: \"Fever\" }, { condition: \"Headache\" }];\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n  return value === index && <Box mt={2}>{children}</Box>;\n}\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"1em\",\n    marginTop: 10,\n    \"&:focus\": {\n      opacity: 1,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"0.75em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"0.7em\",\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\n// Search Box for Specialty, Doctor, Hospital, Condition\nexport default function SearchTabs(props) {\n  const classes = useStyles();\n  const conditions = props.conditionListForInput;\n  const specialties = props.specialtyListForInput;\n\n  const [value, setValue] = React.useState(0);\n  const [keyword, setkeyword] = React.useState('');\n\n  const handleSearchMethodChange = (event, newValue) => {\n    let method = '';\n    if(newValue == 0){\n      method = 'Specialty';\n    } else if (newValue == 1){\n      method = 'Doctor';\n    } else if (newValue == 2){\n      method = 'Hospital';\n    } else {\n      method = 'Condition';\n    }\n    setValue(newValue);\n    props.getSearchMethod(method);\n  };\n\n  const getDocHosNameList = () => {\n    console.log(props.database);\n    let allHosName = [];\n    let allDocName = [];\n    let allInfo = props.database;\n    for (let spec in allInfo){\n      let targetSpec = allInfo[spec];\n      for (hos in targetSpec.hospitals){\n        let hospital = targetSpec.hospitals[hos];\n        allHosName.push(hospital.name);\n        let doctorsList = hospital.doctors;\n        for (docId in doctorsList){\n          allDocName.push(doctorsList[docId].name);\n        }\n      }\n    }\n    console.log(allHosName);\n    console.log(allDocName);\n    \n  }\n\n  console.log('doc + hos init');\n  getDocHosNameList();\n\n  const handleSpecialtySearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.setSearchMethod('Specialty');\n      props.getKeyWords(newValue.specialty);\n    }\n    \n  };\n\n  const handleDoctorSearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.getKeyWords(newValue.name);\n    }\n    \n  };\n\n  const handleHospitalSearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.getKeyWords(newValue.hospName);\n    }\n    \n  };\n\n  const handleConditionSearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.changeConditionLabel(newValue.condition, 'normal');\n    }\n    \n  };\n\n  const getTextFieldValue = (event)=>{\n    setkeyword(event.target.value);\n    props.getKeyWords(event.target.value);\n  }\n  return (\n    <div>\n      <div className={classes.tabContainer}>\n        <StyledTabs\n          value={value}\n          onChange={handleSearchMethodChange}\n          aria-label=\"search tabs\"\n        >\n          <StyledTab label=\"Specialty\" style={{ minWidth: 10 }} />\n          <StyledTab label=\"Doctor\" style={{ minWidth: 10 }} />\n          <StyledTab label=\"Hospital\" style={{ minWidth: 10 }} />\n          <StyledTab label=\"Condition\" style={{ minWidth: 10 }} />\n        </StyledTabs>\n      </div>\n\n      {/* autocomplete: search by specialty */}\n      <TabPanel value={value} index={0}>\n        <Autocomplete\n          onChange = {handleSpecialtySearchKeyChange}\n          options={specialties}\n          getOptionLabel={(option) => option.specialty}\n          filterOptions={filterSpecialtyOptions}\n          disabled={true}\n          renderInput={(params) => (\n            <TextField\n            // disabled={true}\n              {...params}\n              label=\"Search by specialty\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by doctor's namey */}\n      <TabPanel value={value} index={1}>\n        <Autocomplete\n          onChange = {handleDoctorSearchKeyChange}\n          freeSolo\n          options={docNames}\n          getOptionLabel={(option) => option.name}\n          filterOptions={filterDocOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by doctor's name\"\n              variant=\"filled\"\n              onChange = {getTextFieldValue}\n              onKeyPress={(ev) => {\n                if (ev.key === 'Enter') {\n                  props.getKeyWords(keyword);\n                  props.startSearch();\n                }\n              }}\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by hospital's name */}\n      <TabPanel value={value} index={2}>\n        <Autocomplete\n          onChange = {handleHospitalSearchKeyChange}\n          freeSolo\n          options={hospNames}\n          getOptionLabel={(option) => option.hospName}\n          filterOptions={filterHospOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by hospital's name\"\n              onChange = {getTextFieldValue}\n              onKeyPress={(ev) => {\n                if (ev.key === 'Enter') {\n                  props.getKeyWords(keyword);\n                  props.startSearch();\n                }\n              }}\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by condition */}\n      <TabPanel value={value} index={3}>\n        <Autocomplete\n          onChange = {handleConditionSearchKeyChange}\n          options={conditions}\n          getOptionLabel={(option) => option.condition}\n          filterOptions={filterConditionOptions}\n          renderInput={(params) => {\n            if(props.conditionLabel != \"\"){\n              params.inputProps.value = props.conditionLabel;\n            }\n            return <TextField\n              {...params}\n              label={\"Search by medical condition\"}\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          }\n        }\n        />\n        <br></br>\n      </TabPanel>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
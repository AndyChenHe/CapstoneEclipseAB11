{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Desktop/Capstone/CapstoneEclipseAB11/src/Components/docAccount/LikeHistorySaved.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport savedLikeNoResultsFound from \"../../img/savedLikeNoResultsFound.png\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// for small cards display, might delete later if naming conventions unify\n\nconst useStyles = makeStyles(theme => ({ ...theme.account,\n  root: {\n    display: \"flex\",\n    margin: 30\n  },\n  img: {\n    width: \"60%\",\n    [theme.breakpoints.only(\"md\")]: {\n      width: \"80%\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"40%\"\n    }\n  },\n  imageGrid: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 30,\n      marginBottom: 10\n    }\n  },\n  likeBox: {\n    marginTop: 16,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 0,\n      alignItems: \"flex-start\",\n      marginLeft: 20,\n      marginRight: 20,\n      marginBottom: 20\n    }\n  },\n  noResultImg: {\n    objectFit: \"cover\",\n    width: \"90%\",\n    height: \"90%\"\n  }\n})); // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nfunction LikeHistorySaved(props) {\n  const classes = useStyles(); // decide if the page should render Like History or Saved\n\n  const displayType = props.saveLike;\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n\n  const [doctorCards, setDoctorCards] = React.useState([]); //display by doctor as default\n\n  const [hospitalCards, setHospitalCards] = React.useState([]); //display by doctor as default\n\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0); // const [saveLike, setSaveLike] = React.useState({\n  //   doctors: [],\n  //   hospitals: []\n  // })\n\n  const [databaseInfo, setDatabase] = React.useState({}); // const indicator = \"\";\n\n  useEffect(() => {\n    displayStoredCredentials();\n  }, []);\n\n  const displayStoredCredentials = () => {\n    getStoredCredentials().then(res => {\n      // michelle 5/16: 从storedCredentials改成用axios了 所以现在uncomment这句 把原来的let stored = res[displayType]删掉\n      let stored = res[0].data.credentials[displayType];\n      let likedDoctors;\n      let likedHospitals; // if the user has not never liked any doctors or hospitals\n\n      if (!stored) {\n        likedDoctors = [];\n        likedHospitals = [];\n      } else {\n        likedDoctors = stored.doctors ? stored.doctors : [];\n        likedHospitals = stored.hospitals ? stored.hospitals : [];\n      }\n\n      let docCardsList = likedDoctors.length === 0 ? /*#__PURE__*/React.createElement(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        style: {\n          marginTop: \"none\",\n          marginLeft: \"15%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxWidth: 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: classes.noResultImg,\n        src: savedLikeNoResultsFound,\n        alt: \"searchNotFoundImg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }))) : likedDoctors.map(doctor => {\n        let specialty = doctor.specialty;\n        let hospital = doctor.hospital.replace(/\\s+/g, \"\");\n        let username = doctor.username.replace(/\\s+/g, \"\");\n        let targetDoc = res[1].data[specialty]['hospitals'][hospital]['doctors'][username];\n        return /*#__PURE__*/React.createElement(DocCard, Object.assign({}, props, {\n          key: doctor.username,\n          targetDoc: targetDoc,\n          targetDocUserName: username,\n          displayType: displayType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }\n        }));\n      }); // list of liked hospitals cards on hospital tab\n\n      let hosCardsList = likedHospitals.length === 0 ? /*#__PURE__*/React.createElement(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        style: {\n          marginTop: \"none\",\n          marginLeft: \"15%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxWidth: 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: classes.noResultImg,\n        src: savedLikeNoResultsFound,\n        alt: \"searchNotFoundImg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }))) : likedHospitals.map(hospital => {\n        let specialty = hospital.relatedSpecialty;\n        let hospitalUserName = hospital.name.replace(/\\s+/g, \"\");\n        let targetHos = res[1].data[specialty]['hospitals'][hospitalUserName];\n        return /*#__PURE__*/React.createElement(HospitalCard, Object.assign({}, props, {\n          key: hospital.name,\n          targetHos: targetHos,\n          targetHosUserName: hospitalUserName,\n          hospitalInfo: hospital,\n          displayType: displayType,\n          database: databaseInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }\n        }));\n      });\n      setDoctorCards(docCardsList);\n      setHospitalCards(hosCardsList);\n      setRenderCount(1); // setSaveLike({\n      //   doctors: likedDoctors,\n      //   hospitals: likedHospitals\n      // });\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let getStoredCredentials = async () => {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    let userStoredCredentials = await axios.get(axios.defaults.baseURL + \"user\");\n    let databaseInfo = await axios.get(proxyurl + 'https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/getDatabase');\n    return [userStoredCredentials, databaseInfo];\n  };\n\n  let getSpecialtyData = async searchSpecialty => {\n    let data = await axios.get(axios.defaults.baseURL + \"getallsearchdata\", {\n      params: {\n        specialty: searchSpecialty\n      }\n    });\n    return data;\n  };\n\n  if (renderCount === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      style: {\n        marginLeft: '45%',\n        marginTop: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      id: \"likehistory\",\n      className: classes.anchor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mt: 4,\n      mb: 3,\n      flexWrap: \"wrap\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      flexDirection: \"row\",\n      mb: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      mdUp: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      className: classes.backIcon,\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, displayType === \"likeHistory\" ? \"Like History\" : \"Saved\"))), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      value: display,\n      exclusive: true,\n      onChange: handleDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      value: \"doctor\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, \"Doctor\")), /*#__PURE__*/React.createElement(ToggleButton, {\n      value: \"hospital\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, \"Hospital\")))), \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }\n    }), display === \"doctor\" ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }\n    }, doctorCards) : /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, hospitalCards)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }\n    })));\n  }\n} // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// might be deleted later if naming conventions unify\n// Each indiivdual doctor card\n\n\nfunction DocCard(props) {\n  const classes = useStyles();\n  let language = \"\";\n  props.targetDoc[\"languages\"].forEach(lang => {\n    language = language + \", \" + lang;\n  });\n  language = language.substring(1);\n\n  const clickDoctorCard = () => {\n    let newestTargetDoc = props.targetDoc;\n    newestTargetDoc[\"Address\"] = newestTargetDoc.address;\n    newestTargetDoc[\"Language\"] = newestTargetDoc.languages;\n    newestTargetDoc['Phone'] = newestTargetDoc.phone;\n    newestTargetDoc['Hospital'] = newestTargetDoc.hospital;\n    newestTargetDoc['Conditions'] = newestTargetDoc.conditions;\n    newestTargetDoc['DocName'] = newestTargetDoc.name;\n    newestTargetDoc['Specialty'] = newestTargetDoc.specialty;\n    newestTargetDoc['YearsofPractice'] = newestTargetDoc.yearsOfPractice;\n    newestTargetDoc['Procedures'] = newestTargetDoc.procedures;\n    newestTargetDoc['NumberOfLikes'] = newestTargetDoc.likes;\n    newestTargetDoc['Qualifications'] = newestTargetDoc.qualifications;\n    newestTargetDoc['Type'] = newestTargetDoc.type;\n    newestTargetDoc['userName'] = props.targetDocUserName;\n    props.updateTargetDoc(newestTargetDoc);\n    props.setProfileBackToDestination(props.displayType);\n\n    if (props.history != null) {\n      props.history.push(\"/docprofile\");\n    }\n  }; // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    onClick: clickDoctorCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    className: classes.imageGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    className: classes.img // image={docImg}\n    ,\n    src: props.targetDoc.imgSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, \"Dr. \" + props.targetDoc.name), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, \"Specialty: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, props.targetDoc.specialty)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }, \"Hospital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, props.targetDoc[\"hospital\"])), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, \"Languages: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  }, language)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Chip, {\n    color: \"secondary\",\n    size: \"small\",\n    label: props.targetDoc.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.likeBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, props.targetDoc[\"likes\"].toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  }))))));\n}\n\nfunction HospitalCard(props) {\n  const classes = useStyles();\n\n  const clickHospitalCard = () => {\n    let newestTargetHos = props.targetHos;\n    newestTargetHos[\"Address\"] = newestTargetHos.address;\n    newestTargetHos[\"HospitalType\"] = newestTargetHos.type;\n    newestTargetHos['Insurance'] = newestTargetHos.insurance;\n    newestTargetHos['Language'] = newestTargetHos.languages;\n    newestTargetHos['Phone'] = newestTargetHos.phone;\n    newestTargetHos['HospitalName'] = newestTargetHos.name;\n    newestTargetHos['RelateSpecialty'] = newestTargetHos.relatedSpecialty;\n    newestTargetHos['Tags'] = newestTargetHos.tags;\n    newestTargetHos['Web'] = newestTargetHos.website;\n    let conditionList = [];\n\n    for (let doctor in newestTargetHos['doctors']) {\n      let targetDoc = newestTargetHos['doctors'][doctor];\n      targetDoc.conditions = targetDoc.conditions.map(item => {\n        let newItem = item.toLowerCase();\n        newItem = newItem.replace(newItem[0], newItem[0].toUpperCase());\n        return newItem;\n      });\n      targetDoc.conditions.forEach(condition => {\n        if (conditionList.indexOf(condition) == -1) {\n          conditionList.push(condition);\n        }\n      });\n    }\n\n    newestTargetHos['Conditions'] = conditionList;\n    props.updateTargetHos(newestTargetHos);\n    props.setProfileBackToDestination(props.displayType);\n\n    if (props.history != null) {\n      props.history.push(\"/hospprofile\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    onClick: clickHospitalCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    className: classes.imageGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    className: classes.img,\n    image: props.targetHos[\"imgSrc\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }, props.targetHos[\"name\"]), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 15\n    }\n  }, \"Address: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 15\n    }\n  }, props.targetHos[\"address\"])), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 15\n    }\n  }, \"Related Specialty: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 15\n    }\n  }, props.targetHos[\"relatedSpecialty\"])), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 15\n    }\n  }, \"Phone: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 15\n    }\n  }, props.targetHos[\"phone\"])), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Chip, {\n    color: \"secondary\",\n    size: \"small\",\n    label: props.targetHos.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.likeBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }\n  }, props.targetHos[\"likes\"].toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  }))))));\n} // LikeHistorySaved.propTypes = {\n//   // updateVerification: PropTypes.func.isRequired,\n//   // getAllSearchData: PropTypes.func.isRequired\n// };\n// const mapStateToProps = (state) => ({\n//   storedCredentials: state.user.credentials,\n//   // searchData: state.data.searchData\n// });\n// const mapActionsToProps = {\n//   // updateVerification,\n//   // getAllSearchData\n// };\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(LikeHistorySaved);","map":{"version":3,"sources":["/Users/Michelle/Desktop/Capstone/CapstoneEclipseAB11/src/Components/docAccount/LikeHistorySaved.js"],"names":["React","Fragment","useEffect","useState","makeStyles","Box","Typography","Grid","Hidden","ArrowBackIosIcon","ToggleButton","ToggleButtonGroup","CircularProgress","Link","connect","PropTypes","axios","savedLikeNoResultsFound","Card","CardContent","CardMedia","Chip","FavoriteIcon","useStyles","theme","account","root","display","margin","img","width","breakpoints","only","down","imageGrid","flexDirection","justifyContent","alignItems","marginTop","marginBottom","likeBox","marginLeft","marginRight","noResultImg","objectFit","height","LikeHistorySaved","props","classes","displayType","saveLike","setDisplay","doctorCards","setDoctorCards","hospitalCards","setHospitalCards","handleDisplay","event","newDisplay","renderCount","setRenderCount","databaseInfo","setDatabase","displayStoredCredentials","getStoredCredentials","then","res","stored","data","credentials","likedDoctors","likedHospitals","doctors","hospitals","docCardsList","length","maxWidth","map","doctor","specialty","hospital","replace","username","targetDoc","hosCardsList","relatedSpecialty","hospitalUserName","name","targetHos","catch","error","console","proxyurl","userStoredCredentials","get","defaults","baseURL","getSpecialtyData","searchSpecialty","params","anchor","backIcon","textTransform","DocCard","language","forEach","lang","substring","clickDoctorCard","newestTargetDoc","address","languages","phone","conditions","yearsOfPractice","procedures","likes","qualifications","type","targetDocUserName","updateTargetDoc","setProfileBackToDestination","history","push","imgSrc","color","toLocaleString","navigator","minimumFractionDigits","HospitalCard","clickHospitalCard","newestTargetHos","insurance","tags","website","conditionList","item","newItem","toLowerCase","toUpperCase","condition","indexOf","updateTargetHos","mapStateToProps","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nimport savedLikeNoResultsFound from \"../../img/savedLikeNoResultsFound.png\";\n\n\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// for small cards display, might delete later if naming conventions unify\n\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.account,\n\n  root: {\n    display: \"flex\",\n    margin: 30,\n  },\n\n  img: {\n    width: \"60%\",\n    [theme.breakpoints.only(\"md\")]: {\n      width: \"80%\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"40%\",\n    },\n  },\n\n  imageGrid: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 30,\n      marginBottom: 10,\n    },\n  },\n\n  likeBox: {\n    marginTop: 16,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 0,\n      alignItems: \"flex-start\",\n      marginLeft: 20,\n      marginRight: 20,\n      marginBottom: 20,\n    },\n  },\n\n  noResultImg: {\n    objectFit: \"cover\",\n    width: \"90%\",\n    height: \"90%\"\n  },\n}));\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nfunction LikeHistorySaved(props) {\n  const classes = useStyles();\n\n  // decide if the page should render Like History or Saved\n  const displayType = props.saveLike;\n\n  const [display, setDisplay] = React.useState(\"doctor\"); //display by doctor as default\n  const [doctorCards, setDoctorCards] = React.useState([]); //display by doctor as default\n  const [hospitalCards, setHospitalCards] = React.useState([]); //display by doctor as default\n  const handleDisplay = (event, newDisplay) => {\n    if (newDisplay != null) {\n      setDisplay(newDisplay);\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0);\n\n  // const [saveLike, setSaveLike] = React.useState({\n  //   doctors: [],\n  //   hospitals: []\n  // })\n\n  const [databaseInfo, setDatabase] = React.useState({})\n\n  // const indicator = \"\";\n\n  useEffect(() => {\n    displayStoredCredentials();\n  }, []);\n\n\n  const displayStoredCredentials = () => {\n    getStoredCredentials()\n      .then((res) => {\n        // michelle 5/16: 从storedCredentials改成用axios了 所以现在uncomment这句 把原来的let stored = res[displayType]删掉\n\n        let stored = res[0].data.credentials[displayType];\n        let likedDoctors;\n        let likedHospitals;\n\n        // if the user has not never liked any doctors or hospitals\n        if (!stored) {\n          likedDoctors = [];\n          likedHospitals = [];\n        } else {\n          likedDoctors = stored.doctors ? stored.doctors : [];\n          likedHospitals = stored.hospitals ? stored.hospitals : [];\n        }\n\n        let docCardsList = (likedDoctors.length === 0) ?\n          (\n            <Box display=\"flex\" justifyContent=\"center\" style={{ marginTop: \"none\", marginLeft: \"15%\" }}>\n              <div style={{ maxWidth: 600 }}>\n                <img\n                  className={classes.noResultImg}\n                  src={savedLikeNoResultsFound}\n                  alt=\"searchNotFoundImg\"\n                />\n              </div>\n            </Box>\n\n          ) : (\n            likedDoctors.map(doctor => {\n              let specialty = doctor.specialty;\n              let hospital = doctor.hospital.replace(/\\s+/g, \"\");\n              let username = doctor.username.replace(/\\s+/g, \"\");\n              let targetDoc = res[1].data[specialty]['hospitals'][hospital]['doctors'][username];\n              return (\n                <DocCard {...props} key={doctor.username} targetDoc={targetDoc} targetDocUserName={username} displayType={displayType} />\n              )\n            })\n          )\n\n\n\n        // list of liked hospitals cards on hospital tab\n        let hosCardsList = (likedHospitals.length === 0) ?\n          (\n            <Box display=\"flex\" justifyContent=\"center\" style={{ marginTop: \"none\", marginLeft: \"15%\" }}>\n              <div style={{ maxWidth: 600 }}>\n                <img\n                  className={classes.noResultImg}\n                  src={savedLikeNoResultsFound}\n                  alt=\"searchNotFoundImg\"\n                />\n              </div>\n            </Box>\n\n          ) : (\n            likedHospitals.map(hospital => {\n              let specialty = hospital.relatedSpecialty;\n              let hospitalUserName = hospital.name.replace(/\\s+/g, \"\");\n              let targetHos = res[1].data[specialty]['hospitals'][hospitalUserName];\n              return (\n                <HospitalCard {...props} key={hospital.name} targetHos={targetHos} targetHosUserName={hospitalUserName} hospitalInfo={hospital} displayType={displayType} database={databaseInfo} />\n              )\n            })\n          )\n\n\n        setDoctorCards(docCardsList);\n        setHospitalCards(hosCardsList);\n        setRenderCount(1);\n        // setSaveLike({\n        //   doctors: likedDoctors,\n        //   hospitals: likedHospitals\n        // });\n\n      })\n      .catch((error) => {\n        console.error(error);\n      })\n  }\n\n  let getStoredCredentials = async () => {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    let userStoredCredentials = await axios.get(axios.defaults.baseURL + \"user\");\n    let databaseInfo = await axios.get(proxyurl + 'https://us-central1-mydoc-f3cd9.cloudfunctions.net/apiForSearch/getDatabase')\n    return [userStoredCredentials, databaseInfo];\n  }\n\n\n  let getSpecialtyData = async (searchSpecialty) => {\n    let data =\n      await axios.get(axios.defaults.baseURL + \"getallsearchdata\",\n        {\n          params: {\n            specialty: searchSpecialty\n          }\n        })\n    return data;\n  }\n\n  if (renderCount === 0) {\n    return (\n      <div>\n        <CircularProgress color=\"secondary\" style={{ marginLeft: '45%', marginTop: '5%' }} />\n      </div>\n    );\n  } else {\n\n\n    return (\n      <a id=\"likehistory\" className={classes.anchor}>\n        <Grid container spacing={0}>\n          <Grid item xs={1}></Grid>\n          <Grid item xs={10} md={8}>\n            <Box display=\"flex\" mt={4} mb={3} flexWrap=\"wrap\" alignItems=\"center\">\n              <Box flexGrow={1} flexDirection=\"row\" mb={1}>\n                <Typography variant=\"h5\" color=\"primary\">\n                  {/* Back button, 手机屏幕才会出现 */}\n                  <Hidden mdUp>\n                    {/* <IconButton> */}\n                    <Link to=\"account\">\n                      <ArrowBackIosIcon\n                        className={classes.backIcon}\n                        fontSize=\"small\"\n                      />\n                    </Link>\n                    {/* </IconButton> */}\n                  </Hidden>\n                  <strong>\n                    {displayType === \"likeHistory\" ? \"Like History\" : \"Saved\"}\n                  </strong>\n                </Typography>\n              </Box>\n              {/* Display by Doctor/Hospital buttons */}\n              <Box>\n                <ToggleButtonGroup\n                  value={display}\n                  exclusive\n                  onChange={handleDisplay}\n                >\n                  <ToggleButton value=\"doctor\" color=\"primary\">\n                    <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                      Doctor\n                  </Typography>\n                  </ToggleButton>\n                  <ToggleButton value=\"hospital\">\n                    <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n                      Hospital\n                  </Typography>\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </Box>{\" \"}\n            </Box>\n\n            <br></br>\n            <br></br>\n\n            {/* if user clicks on display by 'doctor', then render doctor cards */}\n            {display === \"doctor\" ? (\n              <Fragment>{doctorCards}</Fragment>\n            ) : (\n                <Fragment>{hospitalCards}</Fragment>\n              )}\n          </Grid>\n          <Grid item xs={1} md={3}></Grid>\n        </Grid>\n      </a>\n    );\n  }\n}\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// might be deleted later if naming conventions unify\n\n\n\n// Each indiivdual doctor card\nfunction DocCard(props) {\n  const classes = useStyles();\n\n\n  let language = \"\";\n  props.targetDoc[\"languages\"].forEach((lang) => {\n    language = language + \", \" + lang;\n  });\n  language = language.substring(1);\n\n\n\n  const clickDoctorCard = () => {\n    let newestTargetDoc = props.targetDoc;\n    newestTargetDoc[\"Address\"] = newestTargetDoc.address;\n    newestTargetDoc[\"Language\"] = newestTargetDoc.languages;\n    newestTargetDoc['Phone'] = newestTargetDoc.phone;\n    newestTargetDoc['Hospital'] = newestTargetDoc.hospital;\n    newestTargetDoc['Conditions'] = newestTargetDoc.conditions;\n    newestTargetDoc['DocName'] = newestTargetDoc.name;\n    newestTargetDoc['Specialty'] = newestTargetDoc.specialty;\n    newestTargetDoc['YearsofPractice'] = newestTargetDoc.yearsOfPractice;\n    newestTargetDoc['Procedures'] = newestTargetDoc.procedures;\n    newestTargetDoc['NumberOfLikes'] = newestTargetDoc.likes;\n    newestTargetDoc['Qualifications'] = newestTargetDoc.qualifications;\n    newestTargetDoc['Type'] = newestTargetDoc.type;\n    newestTargetDoc['userName'] = props.targetDocUserName;\n    props.updateTargetDoc(newestTargetDoc);\n    props.setProfileBackToDestination(props.displayType);\n    if (props.history != null) {\n      props.history.push(\"/docprofile\");\n    }\n  }\n\n\n  // const handleClick = () => {\n  //   props.updateTargetDoc(props.resultData);\n  //   if (props.history != null) {\n  //     props.history.push(\"/docprofile\");\n  //   }\n  // };\n\n\n  return (\n    <Card className={classes.root} onClick={clickDoctorCard}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={3} className={classes.imageGrid}>\n          {/* doctor image */}\n          <CardMedia\n            component=\"img\"\n            className={classes.img}\n            // image={docImg}\n            src={props.targetDoc.imgSrc}\n          ></CardMedia>\n        </Grid>\n        <Grid item xs={12} sm={7}>\n          <CardContent>\n            {/* doctor details */}\n            <Typography variant=\"h6\" color=\"primary\">\n              {\"Dr. \" + props.targetDoc.name}\n            </Typography>\n            <br></br>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Specialty: </strong>{\" \"}\n              <span>{props.targetDoc.specialty}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Hospital: </strong>\n              <span>{props.targetDoc[\"hospital\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Languages: </strong>\n              <span>{language}</span>\n            </Typography>\n            <br></br>\n            {/* private tag */}\n            <Chip color=\"secondary\" size=\"small\" label={props.targetDoc.type}></Chip>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          {/* Like icon + number of likes */}\n          <Box className={classes.likeBox}>\n            <FavoriteIcon style={{ color: \"red\" }} />\n            <Typography variant=\"body2\" color=\"primary\">\n              {props.targetDoc[\"likes\"].toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n\n}\n\n\nfunction HospitalCard(props) {\n  const classes = useStyles();\n\n\n  const clickHospitalCard = () => {\n    let newestTargetHos = props.targetHos;\n\n\n    newestTargetHos[\"Address\"] = newestTargetHos.address;\n    newestTargetHos[\"HospitalType\"] = newestTargetHos.type;\n    newestTargetHos['Insurance'] = newestTargetHos.insurance;\n    newestTargetHos['Language'] = newestTargetHos.languages;\n    newestTargetHos['Phone'] = newestTargetHos.phone;\n    newestTargetHos['HospitalName'] = newestTargetHos.name;\n    newestTargetHos['RelateSpecialty'] = newestTargetHos.relatedSpecialty;\n    newestTargetHos['Tags'] = newestTargetHos.tags;\n    newestTargetHos['Web'] = newestTargetHos.website;\n\n    let conditionList = [];\n    for (let doctor in newestTargetHos['doctors']) {\n      let targetDoc = newestTargetHos['doctors'][doctor];\n      targetDoc.conditions = targetDoc.conditions.map((item) => {\n        let newItem = item.toLowerCase();\n        newItem = newItem.replace(newItem[0], newItem[0].toUpperCase())\n        return newItem\n      });\n      targetDoc.conditions.forEach((condition) => {\n        if (conditionList.indexOf(condition) == -1) {\n          conditionList.push(condition)\n        }\n      });\n    }\n    newestTargetHos['Conditions'] = conditionList;\n    props.updateTargetHos(newestTargetHos);\n    props.setProfileBackToDestination(props.displayType);\n    if (props.history != null) {\n      props.history.push(\"/hospprofile\");\n    }\n  }\n\n\n  return (\n    <Card className={classes.root} onClick={clickHospitalCard}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={3} className={classes.imageGrid}>\n          {/* hospital logo image */}\n          <CardMedia\n            component=\"img\"\n            className={classes.img}\n            image={props.targetHos[\"imgSrc\"]}\n          ></CardMedia>\n        </Grid>\n\n        <Grid item xs={12} sm={7}>\n          <CardContent>\n            {/* hospital details */}\n            <Typography variant=\"h6\" color=\"primary\">\n              {props.targetHos[\"name\"]}\n            </Typography>\n            <br></br>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Address: </strong>\n              <span>{props.targetHos[\"address\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Related Specialty: </strong>\n              <span>{props.targetHos[\"relatedSpecialty\"]}</span>\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <strong>Phone: </strong>\n              <span>{props.targetHos[\"phone\"]}</span>\n            </Typography>\n\n            <br></br>\n            <Chip color=\"secondary\" size=\"small\" label={props.targetHos.type}></Chip>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          {/* like icon + number of likes */}\n          <Box className={classes.likeBox}>\n            <FavoriteIcon style={{ color: \"red\" }} />\n            <Typography variant=\"body2\" color=\"primary\">\n              {props.targetHos[\"likes\"].toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\n\n\n\n\n\n\n\n// LikeHistorySaved.propTypes = {\n//   // updateVerification: PropTypes.func.isRequired,\n//   // getAllSearchData: PropTypes.func.isRequired\n// };\n\n// const mapStateToProps = (state) => ({\n//   storedCredentials: state.user.credentials,\n//   // searchData: state.data.searchData\n// });\n\n// const mapActionsToProps = {\n//   // updateVerification,\n//   // getAllSearchData\n// };\n\nexport default connect(mapStateToProps, mapActionsToProps)(LikeHistorySaved);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"/Users/andychenhe/Desktop/CapstoneEclipseAB11/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/andychenhe/Desktop/CapstoneEclipseAB11/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/andychenhe/Desktop/CapstoneEclipseAB11/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from\"react\";// material ui\nimport{withStyles}from\"@material-ui/core/styles\";import{makeStyles}from\"@material-ui/core/styles\";import Tabs from\"@material-ui/core/Tabs\";import Tab from\"@material-ui/core/Tab\";import Box from\"@material-ui/core/Box\";import TextField from\"@material-ui/core/TextField\";import Autocomplete,{createFilterOptions}from\"@material-ui/lab/Autocomplete\";var useStyles=makeStyles(function(theme){return{inputRoot:_defineProperty({\"& .MuiFilledInput-root\":{backgroundColor:\"rgba(255,255,255)\",borderRadius:4}},theme.breakpoints.down(\"md\"),{variant:\"outline\"}),tabContainer:_defineProperty({},theme.breakpoints.down(\"xs\"),{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\"})};});//filter specialty\nvar filterSpecialtyOptions=createFilterOptions({matchFrom:\"start\",stringify:function stringify(option){return option.specialty;}});//filter doctor\nvar filterDocOptions=createFilterOptions({matchFrom:\"start\",stringify:function stringify(option){return option.name;}});//filter hospital\nvar filterHospOptions=createFilterOptions({matchFrom:\"start\",stringify:function stringify(option){return option.hospName;}});//filter condition\nvar filterConditionOptions=createFilterOptions({matchFrom:\"start\",stringify:function stringify(option){return option.condition;}});// specialties options\nvar specialties=[{specialty:\"Allergy and Immunology\"},{specialty:\"Anesthesiology\"},{specialty:\"Gastroenterology\"}];// doctor name options\nvar docNames=[{name:\"Alex Leow\"},{name:\"Alex Tan\"},{name:\"Bryan Lee\"}];// hospital options\nvar hospNames=[{hospName:\"Pantai Hospital Kuala Lumpur\"},{hospName:\"Sunway Medical\"}];// Conditions options\n// const conditions = [{ condition: \"Fever\" }, { condition: \"Headache\" }];\nfunction TabPanel(props){var children=props.children,value=props.value,index=props.index;return value===index&&/*#__PURE__*/React.createElement(Box,{mt:2},children);}var StyledTabs=withStyles({indicator:{display:\"flex\",justifyContent:\"center\",backgroundColor:\"transparent\",\"& > div\":{width:\"100%\",backgroundColor:\"#FF8686\"}}})(function(props){return/*#__PURE__*/React.createElement(Tabs,Object.assign({},props,{TabIndicatorProps:{children:/*#__PURE__*/React.createElement(\"div\",null)}}));});var StyledTab=withStyles(function(theme){var _root;return{root:(_root={textTransform:\"none\",color:\"#fff\",fontWeight:\"bold\",fontSize:\"1em\",marginTop:10,\"&:focus\":{opacity:1}},_defineProperty(_root,theme.breakpoints.down(\"sm\"),{fontSize:\"0.75em\"}),_defineProperty(_root,theme.breakpoints.down(\"xs\"),{fontSize:\"0.7em\"}),_root)};})(function(props){return/*#__PURE__*/React.createElement(Tab,Object.assign({disableRipple:true},props));});// Search Box for Specialty, Doctor, Hospital, Condition\nexport default function SearchTabs(props){var classes=useStyles();var conditions=props.conditionListForInput;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];var handleSearchMethodChange=function handleSearchMethodChange(event,newValue){var method='';if(newValue==0){method='Specialty';}else if(newValue==1){method='Doctor';}else if(newValue==2){method='Hospital';}else{method='Condition';}setValue(newValue);props.getSearchMethod(method);};var handleSpecialtySearchKeyChange=function handleSpecialtySearchKeyChange(event,newValue){if(newValue){props.setSearchMethod('Specialty');props.getKeyWords(newValue.specialty);}};var handleDoctorSearchKeyChange=function handleDoctorSearchKeyChange(event,newValue){if(newValue){props.getKeyWords(newValue.name);}};var handleHospitalSearchKeyChange=function handleHospitalSearchKeyChange(event,newValue){if(newValue){props.getKeyWords(newValue.hospName);}};var handleConditionSearchKeyChange=function handleConditionSearchKeyChange(event,newValue){if(newValue){props.getKeyWords(newValue.condition);}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.tabContainer},/*#__PURE__*/React.createElement(StyledTabs,{value:value,onChange:handleSearchMethodChange,\"aria-label\":\"search tabs\"},/*#__PURE__*/React.createElement(StyledTab,{label:\"Specialty\",style:{minWidth:10}}),/*#__PURE__*/React.createElement(StyledTab,{label:\"Doctor\",style:{minWidth:10}}),/*#__PURE__*/React.createElement(StyledTab,{label:\"Hospital\",style:{minWidth:10}}),/*#__PURE__*/React.createElement(StyledTab,{label:\"Condition\",style:{minWidth:10}}))),/*#__PURE__*/React.createElement(TabPanel,{value:value,index:0},/*#__PURE__*/React.createElement(Autocomplete,{onChange:handleSpecialtySearchKeyChange,options:specialties,getOptionLabel:function getOptionLabel(option){return option.specialty;},filterOptions:filterSpecialtyOptions,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"Search by specialty\",variant:\"filled\",className:classes.inputRoot,InputProps:_objectSpread({},params.InputProps,{disableUnderline:true})}));}}),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(TabPanel,{value:value,index:1},/*#__PURE__*/React.createElement(Autocomplete,{onChange:handleDoctorSearchKeyChange,options:docNames,getOptionLabel:function getOptionLabel(option){return option.name;},filterOptions:filterDocOptions,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"Search by doctor's name\",variant:\"filled\",className:classes.inputRoot,InputProps:_objectSpread({},params.InputProps,{disableUnderline:true})}));}}),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(TabPanel,{value:value,index:2},/*#__PURE__*/React.createElement(Autocomplete,{onChange:handleHospitalSearchKeyChange,options:hospNames,getOptionLabel:function getOptionLabel(option){return option.hospName;},filterOptions:filterHospOptions,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"Search by hospital's name\",variant:\"filled\",className:classes.inputRoot,InputProps:_objectSpread({},params.InputProps,{disableUnderline:true})}));}}),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(TabPanel,{value:value,index:3},/*#__PURE__*/React.createElement(Autocomplete,{onChange:handleConditionSearchKeyChange,options:conditions,getOptionLabel:function getOptionLabel(option){return option.condition;},filterOptions:filterConditionOptions,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"Search by medical condition\",variant:\"filled\",className:classes.inputRoot,InputProps:_objectSpread({},params.InputProps,{disableUnderline:true})}));}}),/*#__PURE__*/React.createElement(\"br\",null)));}","map":{"version":3,"sources":["/Users/andychenhe/Desktop/CapstoneEclipseAB11/src/Components/home/SearchTabs.js"],"names":["React","withStyles","makeStyles","Tabs","Tab","Box","TextField","Autocomplete","createFilterOptions","useStyles","theme","inputRoot","backgroundColor","borderRadius","breakpoints","down","variant","tabContainer","display","flexDirection","justifyContent","alignItems","filterSpecialtyOptions","matchFrom","stringify","option","specialty","filterDocOptions","name","filterHospOptions","hospName","filterConditionOptions","condition","specialties","docNames","hospNames","TabPanel","props","children","value","index","StyledTabs","indicator","width","StyledTab","root","textTransform","color","fontWeight","fontSize","marginTop","opacity","SearchTabs","classes","conditions","conditionListForInput","useState","setValue","handleSearchMethodChange","event","newValue","method","getSearchMethod","handleSpecialtySearchKeyChange","setSearchMethod","getKeyWords","handleDoctorSearchKeyChange","handleHospitalSearchKeyChange","handleConditionSearchKeyChange","minWidth","params","InputProps","disableUnderline"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// material ui\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    \"& .MuiFilledInput-root\": {\n      backgroundColor: \"rgba(255,255,255)\",\n      borderRadius: 4,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      variant: \"outline\",\n    },\n  },\n\n  tabContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  },\n}));\n\n//filter specialty\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.specialty,\n});\n\n//filter doctor\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.name,\n});\n\n//filter hospital\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.hospName,\n});\n\n//filter condition\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.condition,\n});\n\n// specialties options\nconst specialties = [\n  { specialty: \"Allergy and Immunology\" },\n  { specialty: \"Anesthesiology\" },\n  { specialty: \"Gastroenterology\" },\n];\n// doctor name options\nconst docNames = [\n  { name: \"Alex Leow\" },\n  { name: \"Alex Tan\" },\n  { name: \"Bryan Lee\" },\n];\n// hospital options\nconst hospNames = [\n  { hospName: \"Pantai Hospital Kuala Lumpur\" },\n  { hospName: \"Sunway Medical\" },\n];\n// Conditions options\n// const conditions = [{ condition: \"Fever\" }, { condition: \"Headache\" }];\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n  return value === index && <Box mt={2}>{children}</Box>;\n}\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"1em\",\n    marginTop: 10,\n    \"&:focus\": {\n      opacity: 1,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"0.75em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"0.7em\",\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\n// Search Box for Specialty, Doctor, Hospital, Condition\nexport default function SearchTabs(props) {\n  const classes = useStyles();\n  const conditions = props.conditionListForInput;\n\n  const [value, setValue] = React.useState(0);\n\n  const handleSearchMethodChange = (event, newValue) => {\n    let method = '';\n    if(newValue == 0){\n      method = 'Specialty';\n    } else if (newValue == 1){\n      method = 'Doctor';\n    } else if (newValue == 2){\n      method = 'Hospital';\n    } else {\n      method = 'Condition';\n    }\n    setValue(newValue);\n    props.getSearchMethod(method);\n  };\n\n  const handleSpecialtySearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.setSearchMethod('Specialty');\n      props.getKeyWords(newValue.specialty);\n    }\n    \n  };\n\n  const handleDoctorSearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.getKeyWords(newValue.name);\n    }\n    \n  };\n\n  const handleHospitalSearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.getKeyWords(newValue.hospName);\n    }\n    \n  };\n\n  const handleConditionSearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.getKeyWords(newValue.condition);\n    }\n    \n  };\n\n  return (\n    <div>\n      <div className={classes.tabContainer}>\n        <StyledTabs\n          value={value}\n          onChange={handleSearchMethodChange}\n          aria-label=\"search tabs\"\n        >\n          <StyledTab label=\"Specialty\" style={{ minWidth: 10 }} />\n          <StyledTab label=\"Doctor\" style={{ minWidth: 10 }} />\n          <StyledTab label=\"Hospital\" style={{ minWidth: 10 }} />\n          <StyledTab label=\"Condition\" style={{ minWidth: 10 }} />\n        </StyledTabs>\n      </div>\n\n      {/* autocomplete: search by specialty */}\n      <TabPanel value={value} index={0}>\n        <Autocomplete\n          onChange = {handleSpecialtySearchKeyChange}\n          options={specialties}\n          getOptionLabel={(option) => option.specialty}\n          filterOptions={filterSpecialtyOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by specialty\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by doctor's namey */}\n      <TabPanel value={value} index={1}>\n        <Autocomplete\n          onChange = {handleDoctorSearchKeyChange}\n          options={docNames}\n          getOptionLabel={(option) => option.name}\n          filterOptions={filterDocOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by doctor's name\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by hospital's name */}\n      <TabPanel value={value} index={2}>\n        <Autocomplete\n          onChange = {handleHospitalSearchKeyChange}\n          options={hospNames}\n          getOptionLabel={(option) => option.hospName}\n          filterOptions={filterHospOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by hospital's name\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by condition */}\n      <TabPanel value={value} index={3}>\n        <Autocomplete\n          onChange = {handleConditionSearchKeyChange}\n          options={conditions}\n          getOptionLabel={(option) => option.condition}\n          filterOptions={filterConditionOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by medical condition\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
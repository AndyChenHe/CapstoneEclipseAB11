{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Downloads/may10_michelle/src/Components/profile/HospInfo.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Link from \"@material-ui/core/Link\"; //icons\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\"; //images\n\nimport hospImg from \"../../img/results/pantaihospital.png\"; //components\n\nimport CovidAlert from \"../Alert\";\nimport HospTags from \"./HospTags\";\nimport PropTypes from \"prop-types\";\nimport { changeHospLikeStatus, changeHospSaveStatus } from \"../../redux/actions/userActions\";\nimport { updateHospitalLikes } from \"../../redux/actions/dataActions\"; // ～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～\n// ～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～\n// \"hospital tags\" used in this js is actually referred to the tags attached to a specialty in this hospital\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nconst useStyles = makeStyles(theme => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  //return to hospital button\n  returnBox: {\n    marginLeft: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 20\n    }\n  },\n  //hospital image\n  img: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"contain\"\n  },\n  profileGrid: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n      marginRight: 20\n    }\n  },\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\"\n    }\n  }\n})); //for hospital image + basic info + likes\n//edit tags section is imported from HospTags.js\n\nfunction HospInfo(props) {\n  const classes = useStyles();\n  const authenticated = props.authenticated;\n\n  const backToRes = () => {\n    if (props.history != null) {\n      if (props.backTo == \"resultsPage\") {\n        props.history.push(\"/results\");\n      } else if (props.backTo == \"profilePage\") {\n        props.history.push(\"/hospprofile\");\n      }\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0);\n  const [likeSaveInfo, setState] = React.useState({\n    hasLiked: false,\n    likedList: [],\n    numLikes: 0,\n    // save functionality\n    hasSaved: false,\n    savedList: []\n  }); // only get called once in the first render\n\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredData().then(res => {\n      // like\n      let listOfLikes;\n      let liked = false; // if the user has never liked any hospitals\n\n      if (!res[1].likeHistory) {\n        listOfLikes = [];\n      } else {\n        if (res[1].likeHistory.hospitals) {\n          listOfLikes = res[1].likeHistory.hospitals; // if the user has liked this particular hospital before\n\n          const index = res[1].likeHistory.hospitals.findIndex(hospital => hospital.name == \"Pantai Hospital Kuala Lumpur\");\n\n          if (index != -1) {\n            liked = true;\n          }\n        } else {\n          listOfLikes = [];\n        }\n      } // save\n\n\n      let listOfSaves;\n      let saved = false; // if the user has never saved any hospitals\n\n      if (!res[1].saved) {\n        listOfSaves = [];\n      } else {\n        if (res[1].saved.hospitals) {\n          listOfSaves = res[1].saved.hospitals; // if the user has saved this particular hospital before\n\n          const index = res[1].saved.hospitals.findIndex(hospital => hospital.username == \"Pantai Hospital Kuala Lumpur\");\n\n          if (index != -1) {\n            saved = true;\n          }\n        } else {\n          listOfSaves = [];\n        }\n      }\n\n      setState({\n        hasLiked: liked,\n        likedList: listOfLikes,\n        numLikes: res[0].likes ? res[0].likes : 0,\n        hasSaved: saved,\n        savedList: listOfSaves\n      });\n      setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // wait for returned props from firebase to be ready\n\n\n  let getStoredData = async () => {\n    let [storedSearchInfo, userStoredCredentials] = await Promise.all([props.searchInfo, props.storedCredentials]);\n    return [storedSearchInfo, userStoredCredentials];\n  }; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LIKE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // when the like button is pressed\n\n\n  const toggleLikeUnlike = () => {\n    // the user has liked this hospital before\n    if (likeSaveInfo.hasLiked) {\n      let likedListCopy = likeSaveInfo.likedList;\n      let index = likedListCopy.findIndex(hospital => hospital.name == \"Pantai Hospital Kuala Lumpur\"); // remove this hospital from the user like list\n\n      likedListCopy.splice(index, 1);\n      setState(prevState => ({ ...likeSaveInfo,\n        likedList: likedListCopy,\n        // change to unlike\n        hasLiked: false,\n        numLikes: prevState.numLikes - 1\n      }));\n    } else {\n      const newHospInfo = {\n        name: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        address: \"8, Jalan Bukit Pantai 59100 Kuala Lumpur, 92310\",\n        likes: likeSaveInfo.numLikes,\n        phone: \"206-123-4567\",\n        relatedSpecialty: \"Gastroenterology\",\n        type: \"Private\"\n      };\n      setState(prevState => ({ // add to the list if the list contains other hospitals, otherwise use this hospital to start a list\n        ...likeSaveInfo,\n        likedList: likeSaveInfo.likedList.length == 0 ? [newHospInfo] : [prevState.likedList, newHospInfo],\n        hasLiked: true,\n        numLikes: prevState.numLikes + 1\n      }));\n    }\n  }; // triggered if the like button is pressed (which sets state)\n\n\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleLike();\n    }\n  }, [likeSaveInfo.hasLiked, likeSaveInfo.likedList]);\n\n  const toggleLike = () => {\n    waitLikeUpdate().then(res => {\n      props.changeHospLikeStatus(res[0]);\n      const updateInfo = {\n        specialty: \"Gastroenterology\",\n        hospital: \"Pantai Hospital Kuala Lumpur\",\n        likes: res[1]\n      };\n      props.updateHospitalLikes(updateInfo);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let waitLikeUpdate = async () => {\n    let [likedList, likes] = await Promise.all([likeSaveInfo.likedList, likeSaveInfo.numLikes]);\n    return [likedList, likes];\n  }; // if the user has liked this hospital before: filled heart, otherwise outlined heart\n\n\n  const LikeIcon = likeSaveInfo.hasLiked ? FavoriteIcon : FavoriteBorderOutlinedIcon; // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SAVE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // when the save button is pressed\n\n  const toggleSaveUnsave = () => {\n    // the user has saved this hospital before\n    if (likeSaveInfo.hasSaved) {\n      let savedListCopy = likeSaveInfo.savedList;\n      let index = savedListCopy.findIndex(hospital => hospital.username == \"Pantai Hospital Kuala Lumpur\"); // remove this hospital from the user saved list\n\n      savedListCopy.splice(index, 1);\n      setState({ ...likeSaveInfo,\n        savedList: savedListCopy,\n        hasSaved: false\n      });\n    } else {\n      // the newly saved hospital's information to be added to the user's saved hospital list\n      const newHospInfo = {\n        name: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        address: \"8, Jalan Bukit Pantai 59100 Kuala Lumpur, 92310\",\n        likes: likeSaveInfo.numLikes,\n        phone: \"206-123-4567\",\n        relatedSpecialty: \"Gastroenterology\",\n        type: \"Private\"\n      };\n      setState(prevState => ({ // add to the list if the list contains other hospitals, otherwise use this hospital to start a list\n        ...likeSaveInfo,\n        savedList: likeSaveInfo.savedList.length == 0 ? [newHospInfo] : [prevState.savedList, newHospInfo],\n        hasSaved: true\n      }));\n    }\n  }; // triggered if the save button is pressed (which sets state)\n\n\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleSave();\n    }\n  }, [likeSaveInfo.hasSaved, likeSaveInfo.savedList]);\n\n  const toggleSave = () => {\n    waitSaveUpdate().then(res => {\n      props.changeHospSaveStatus(res);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  let waitSaveUpdate = async () => {\n    let savedList = await likeSaveInfo.savedList;\n    return savedList;\n  }; // if the user has saved this doctor before: filled bookmark, otherwise outlined bookmark\n\n\n  const SaveIcon = likeSaveInfo.hasSaved ? BookmarkIcon : BookmarkBorderOutlinedIcon;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.covidBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CovidAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 3,\n    mb: 3,\n    className: classes.returnBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      fontSize: 16,\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 22\n      }\n    }),\n    onClick: backToRes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, \"Return to Hospitals\")), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 150,\n      height: 180\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: hospImg,\n    alt: \"hospimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleLikeUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LikeIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 15\n    }\n  }, likeSaveInfo.numLikes.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 200,\n      height: 250\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: hospImg,\n    alt: \"hospimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 15\n    }\n  }, props.targetHos[\"HospitalName\"])), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(ErrorOutlineOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 30\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 17\n    }\n  }, \"Report\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(ErrorOutlineOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 34\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: handleLoginOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 21\n    }\n  }, \"Report\"), signUpInDialogue(\"report\")), /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(ShareOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 28\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }, \"Share\"), /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 28\n      }\n    }),\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: toggleSaveUnsave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  }, \"Save\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }\n  }, props.targetHos[\"HospitalName\"], /*#__PURE__*/React.createElement(Chip, {\n    style: {\n      marginLeft: 10\n    },\n    color: \"primary\",\n    size: \"small\",\n    label: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    className: classes.profileGrid,\n    mt: 3,\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 15\n    }\n  }, \"Official website: \"), \" \", /*#__PURE__*/React.createElement(Link, {\n    href: \"https://www.pantai.com.my/kuala-lumpur\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }, \"Link\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 15\n    }\n  }, \"Hours: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 15\n    }\n  }, \"Open \", props.targetHos[\"Hours\"])), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 17\n    }\n  }, \"Hospital Type: \"), \" \", /*#__PURE__*/React.createElement(Chip, {\n    style: {\n      marginLeft: 10\n    },\n    color: \"primary\",\n    size: \"small\",\n    label: props.targetHos[\"HospitalType\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationOnOutlinedIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 17\n    }\n  }, props.targetHos[\"Address\"]))), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PhoneOutlinedIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 17\n    }\n  }, props.targetHos[\"Phone\"])))), /*#__PURE__*/React.createElement(HospTags, {\n    tagInfo: props.targetHos[\"Tags\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 1,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 13\n    }\n  }, authenticated ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleLikeUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LikeIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 15\n    }\n  }, likeSaveInfo.numLikes.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  })))))));\n}\n\nHospInfo.propTypes = {\n  changeHospLikeStatus: PropTypes.func.isRequired,\n  updateHospitalLikes: PropTypes.func.isRequired,\n  changeHospSaveStatus: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.searchInfoHospital\n});\n\nconst mapActionsToProps = {\n  changeHospLikeStatus,\n  updateHospitalLikes,\n  changeHospSaveStatus\n};\nexport default connect(mapStateToProps, mapActionsToProps)(HospInfo);","map":{"version":3,"sources":["/Users/Michelle/Downloads/may10_michelle/src/Components/profile/HospInfo.js"],"names":["React","useEffect","connect","makeStyles","Button","Box","Typography","Chip","Grid","IconButton","Hidden","Link","ArrowBackIosIcon","LocationOnOutlinedIcon","PhoneOutlinedIcon","ErrorOutlineOutlinedIcon","BookmarkIcon","BookmarkBorderOutlinedIcon","ShareOutlinedIcon","FavoriteIcon","FavoriteBorderOutlinedIcon","hospImg","CovidAlert","HospTags","PropTypes","changeHospLikeStatus","changeHospSaveStatus","updateHospitalLikes","useStyles","theme","covidBox","marginTop","breakpoints","down","marginLeft","marginRight","returnBox","img","width","height","objectFit","profileGrid","line","border","HospInfo","props","classes","authenticated","backToRes","history","backTo","push","renderCount","setRenderCount","useState","likeSaveInfo","setState","hasLiked","likedList","numLikes","hasSaved","savedList","displayStoredData","getStoredData","then","res","listOfLikes","liked","likeHistory","hospitals","index","findIndex","hospital","name","listOfSaves","saved","username","likes","catch","error","console","storedSearchInfo","userStoredCredentials","Promise","all","searchInfo","storedCredentials","toggleLikeUnlike","likedListCopy","splice","prevState","newHospInfo","imgSrc","address","phone","relatedSpecialty","type","length","toggleLike","waitLikeUpdate","updateInfo","specialty","LikeIcon","toggleSaveUnsave","savedListCopy","toggleSave","waitSaveUpdate","SaveIcon","fontSize","textTransform","color","toLocaleString","navigator","language","minimumFractionDigits","margin","targetHos","handleLoginOpen","signUpInDialogue","propTypes","func","isRequired","mapStateToProps","state","user","credentials","data","searchInfoHospital","mapActionsToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,0BAAP,MAAuC,2CAAvC;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,0BAAP,MAAuC,2CAAvC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,sCAApB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,iCAA3D;AACA,SAASC,mBAAT,QAAoC,iCAApC,C,CAGA;AACA;AACA;AACA;;AAGA,MAAMC,SAAS,GAAGzB,UAAU,CAAE0B,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,EADH;AAER,KAACF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BF,MAAAA,SAAS,EAAE,EADmB;AAE9BG,MAAAA,UAAU,EAAE,EAFkB;AAG9BC,MAAAA,WAAW,EAAE;AAHiB;AAFxB,GAD6B;AAUvC;AACAC,EAAAA,SAAS,EAAE;AACTF,IAAAA,UAAU,EAAE,EADH;AAET,KAACL,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BC,MAAAA,UAAU,EAAE;AADkB;AAFvB,GAX4B;AAkBvC;AACAG,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE,MADJ;AAEHC,IAAAA,MAAM,EAAE,MAFL;AAGHC,IAAAA,SAAS,EAAE;AAHR,GAnBkC;AAyBvCC,EAAAA,WAAW,EAAE;AACX,KAACZ,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BC,MAAAA,UAAU,EAAE,EADkB;AAE9BC,MAAAA,WAAW,EAAE;AAFiB;AADrB,GAzB0B;AAgCvCO,EAAAA,IAAI,EAAE;AACJ,KAACb,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BU,MAAAA,MAAM,EAAE;AADsB;AAD5B;AAhCiC,CAAZ,CAAD,CAA5B,C,CAuCA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACA,QAAMmB,aAAa,GAAGF,KAAK,CAACE,aAA5B;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAIH,KAAK,CAACI,OAAN,IAAiB,IAArB,EAA2B;AACzB,UAAIJ,KAAK,CAACK,MAAN,IAAgB,aAApB,EAAmC;AACjCL,QAAAA,KAAK,CAACI,OAAN,CAAcE,IAAd,CAAmB,UAAnB;AACD,OAFD,MAEO,IAAIN,KAAK,CAACK,MAAN,IAAgB,aAApB,EAAmC;AACxCL,QAAAA,KAAK,CAACI,OAAN,CAAcE,IAAd,CAAmB,cAAnB;AACD;AACF;AACF,GARD;;AAUA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrD,KAAK,CAACsD,QAAN,CAAe,CAAf,CAAtC;AAEA,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BxD,KAAK,CAACsD,QAAN,CAAe;AAC9CG,IAAAA,QAAQ,EAAE,KADoC;AAE9CC,IAAAA,SAAS,EAAE,EAFmC;AAG9CC,IAAAA,QAAQ,EAAE,CAHoC;AAK9C;AACAC,IAAAA,QAAQ,EAAE,KANoC;AAO9CC,IAAAA,SAAS,EAAE;AAPmC,GAAf,CAAjC,CAhBuB,CA0BvB;;AACA5D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImD,WAAW,IAAI,CAAnB,EAAsB;AACpB,aAAOU,iBAAiB,EAAxB;AACD;AACF,GAJQ,CAAT;;AAMA,QAAMA,iBAAiB,GAAG,MAAM;AAC9B;AACAC,IAAAA,aAAa,GACVC,IADH,CACSC,GAAD,IAAS;AACb;AACA,UAAIC,WAAJ;AACA,UAAIC,KAAK,GAAG,KAAZ,CAHa,CAKb;;AACA,UAAI,CAACF,GAAG,CAAC,CAAD,CAAH,CAAOG,WAAZ,EAAyB;AACvBF,QAAAA,WAAW,GAAG,EAAd;AACD,OAFD,MAEO;AACL,YAAID,GAAG,CAAC,CAAD,CAAH,CAAOG,WAAP,CAAmBC,SAAvB,EAAkC;AAChCH,UAAAA,WAAW,GAAGD,GAAG,CAAC,CAAD,CAAH,CAAOG,WAAP,CAAmBC,SAAjC,CADgC,CAEhC;;AACA,gBAAMC,KAAK,GAAGL,GAAG,CAAC,CAAD,CAAH,CAAOG,WAAP,CAAmBC,SAAnB,CAA6BE,SAA7B,CAAuCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,IAAiB,8BAApE,CAAd;;AACA,cAAIH,KAAK,IAAI,CAAC,CAAd,EAAiB;AACfH,YAAAA,KAAK,GAAG,IAAR;AACD;AACF,SAPD,MAOO;AACLD,UAAAA,WAAW,GAAG,EAAd;AACD;AACF,OAnBY,CAqBb;;;AACA,UAAIQ,WAAJ;AACA,UAAIC,KAAK,GAAG,KAAZ,CAvBa,CAyBb;;AACA,UAAI,CAACV,GAAG,CAAC,CAAD,CAAH,CAAOU,KAAZ,EAAmB;AACjBD,QAAAA,WAAW,GAAG,EAAd;AACD,OAFD,MAEO;AACL,YAAIT,GAAG,CAAC,CAAD,CAAH,CAAOU,KAAP,CAAaN,SAAjB,EAA4B;AAC1BK,UAAAA,WAAW,GAAGT,GAAG,CAAC,CAAD,CAAH,CAAOU,KAAP,CAAaN,SAA3B,CAD0B,CAE1B;;AACA,gBAAMC,KAAK,GAAGL,GAAG,CAAC,CAAD,CAAH,CAAOU,KAAP,CAAaN,SAAb,CAAuBE,SAAvB,CAAiCC,QAAQ,IAAIA,QAAQ,CAACI,QAAT,IAAqB,8BAAlE,CAAd;;AACA,cAAIN,KAAK,IAAI,CAAC,CAAd,EAAiB;AACfK,YAAAA,KAAK,GAAG,IAAR;AACD;AACF,SAPD,MAOO;AACLD,UAAAA,WAAW,GAAG,EAAd;AACD;AACF;;AAGDlB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,QAAQ,EAAEU,KADH;AAEPT,QAAAA,SAAS,EAAEQ,WAFJ;AAGPP,QAAAA,QAAQ,EAAEM,GAAG,CAAC,CAAD,CAAH,CAAOY,KAAP,GAAeZ,GAAG,CAAC,CAAD,CAAH,CAAOY,KAAtB,GAA8B,CAHjC;AAKPjB,QAAAA,QAAQ,EAAEe,KALH;AAMPd,QAAAA,SAAS,EAAEa;AANJ,OAAD,CAAR;AASArB,MAAAA,cAAc,CAAC,CAAD,CAAd;AACD,KArDH,EAqDKyB,KArDL,CAqDYC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAvDH;AAwDD,GA1DD,CAjCuB,CA6FvB;;;AACA,MAAIhB,aAAa,GAAG,YAAY;AAC9B,QAAI,CAACkB,gBAAD,EAAmBC,qBAAnB,IACF,MAAMC,OAAO,CAACC,GAAR,CAAY,CAACvC,KAAK,CAACwC,UAAP,EAAmBxC,KAAK,CAACyC,iBAAzB,CAAZ,CADR;AAEA,WAAO,CAACL,gBAAD,EAAmBC,qBAAnB,CAAP;AACD,GAJD,CA9FuB,CAqGvB;AAEA;;;AACA,QAAMK,gBAAgB,GAAG,MAAM;AAC7B;AACA,QAAIhC,YAAY,CAACE,QAAjB,EAA2B;AACzB,UAAI+B,aAAa,GAAGjC,YAAY,CAACG,SAAjC;AACA,UAAIY,KAAK,GAAGkB,aAAa,CAACjB,SAAd,CAAwBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,IAAiB,8BAArD,CAAZ,CAFyB,CAGzB;;AACAe,MAAAA,aAAa,CAACC,MAAd,CAAqBnB,KAArB,EAA4B,CAA5B;AACAd,MAAAA,QAAQ,CAACkC,SAAS,KAAK,EACrB,GAAGnC,YADkB;AAErBG,QAAAA,SAAS,EAAE8B,aAFU;AAGrB;AACA/B,QAAAA,QAAQ,EAAE,KAJW;AAKrBE,QAAAA,QAAQ,EAAE+B,SAAS,CAAC/B,QAAV,GAAqB;AALV,OAAL,CAAV,CAAR;AAOD,KAZD,MAYO;AACL,YAAMgC,WAAW,GAAG;AAClBlB,QAAAA,IAAI,EAAE,8BADY;AAElBmB,QAAAA,MAAM,EAAE,EAFU;AAGlBC,QAAAA,OAAO,EAAE,iDAHS;AAIlBhB,QAAAA,KAAK,EAAEtB,YAAY,CAACI,QAJF;AAKlBmC,QAAAA,KAAK,EAAE,cALW;AAMlBC,QAAAA,gBAAgB,EAAE,kBANA;AAOlBC,QAAAA,IAAI,EAAE;AAPY,OAApB;AAUAxC,MAAAA,QAAQ,CAACkC,SAAS,KAAK,EACrB;AACA,WAAGnC,YAFkB;AAGrBG,QAAAA,SAAS,EAAGH,YAAY,CAACG,SAAb,CAAuBuC,MAAvB,IAAiC,CAAlC,GAAuC,CAACN,WAAD,CAAvC,GAAuD,CAACD,SAAS,CAAChC,SAAX,EAAsBiC,WAAtB,CAH7C;AAIrBlC,QAAAA,QAAQ,EAAE,IAJW;AAKrBE,QAAAA,QAAQ,EAAE+B,SAAS,CAAC/B,QAAV,GAAqB;AALV,OAAL,CAAV,CAAR;AAOD;AACF,GAjCD,CAxGuB,CA4IvB;;;AACA1D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImD,WAAW,IAAI,CAAnB,EAAsB;AACpB,aAAO8C,UAAU,EAAjB;AACD;AACF,GAJQ,EAIN,CAAC3C,YAAY,CAACE,QAAd,EAAwBF,YAAY,CAACG,SAArC,CAJM,CAAT;;AAOA,QAAMwC,UAAU,GAAG,MAAM;AACvBC,IAAAA,cAAc,GACXnC,IADH,CACSC,GAAD,IAAS;AACbpB,MAAAA,KAAK,CAACpB,oBAAN,CAA2BwC,GAAG,CAAC,CAAD,CAA9B;AACA,YAAMmC,UAAU,GAAG;AACjBC,QAAAA,SAAS,EAAE,kBADM;AAEjB7B,QAAAA,QAAQ,EAAE,8BAFO;AAGjBK,QAAAA,KAAK,EAAEZ,GAAG,CAAC,CAAD;AAHO,OAAnB;AAKApB,MAAAA,KAAK,CAAClB,mBAAN,CAA0ByE,UAA1B;AACD,KATH,EASKtB,KATL,CASYC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAXH;AAYD,GAbD;;AAeA,MAAIoB,cAAc,GAAG,YAAY;AAC/B,QAAI,CAACzC,SAAD,EAAYmB,KAAZ,IACF,MAAMM,OAAO,CAACC,GAAR,CAAY,CAAC7B,YAAY,CAACG,SAAd,EAAyBH,YAAY,CAACI,QAAtC,CAAZ,CADR;AAEA,WAAO,CAACD,SAAD,EAAYmB,KAAZ,CAAP;AACD,GAJD,CAnKuB,CA0KvB;;;AACA,QAAMyB,QAAQ,GAAI/C,YAAY,CAACE,QAAd,GAA0BtC,YAA1B,GAAyCC,0BAA1D,CA3KuB,CA+KvB;AAEA;;AACA,QAAMmF,gBAAgB,GAAG,MAAM;AAC7B;AACA,QAAIhD,YAAY,CAACK,QAAjB,EAA2B;AACzB,UAAI4C,aAAa,GAAGjD,YAAY,CAACM,SAAjC;AACA,UAAIS,KAAK,GAAGkC,aAAa,CAACjC,SAAd,CAAwBC,QAAQ,IAAIA,QAAQ,CAACI,QAAT,IAAqB,8BAAzD,CAAZ,CAFyB,CAGzB;;AACA4B,MAAAA,aAAa,CAACf,MAAd,CAAqBnB,KAArB,EAA4B,CAA5B;AAEAd,MAAAA,QAAQ,CAAC,EACP,GAAGD,YADI;AAEPM,QAAAA,SAAS,EAAE2C,aAFJ;AAGP5C,QAAAA,QAAQ,EAAE;AAHH,OAAD,CAAR;AAKD,KAXD,MAWO;AACL;AACA,YAAM+B,WAAW,GAAG;AAClBlB,QAAAA,IAAI,EAAE,8BADY;AAElBmB,QAAAA,MAAM,EAAE,EAFU;AAGlBC,QAAAA,OAAO,EAAE,iDAHS;AAIlBhB,QAAAA,KAAK,EAAEtB,YAAY,CAACI,QAJF;AAKlBmC,QAAAA,KAAK,EAAE,cALW;AAMlBC,QAAAA,gBAAgB,EAAE,kBANA;AAOlBC,QAAAA,IAAI,EAAE;AAPY,OAApB;AAUAxC,MAAAA,QAAQ,CAACkC,SAAS,KAAK,EACrB;AACA,WAAGnC,YAFkB;AAGrBM,QAAAA,SAAS,EAAGN,YAAY,CAACM,SAAb,CAAuBoC,MAAvB,IAAiC,CAAlC,GAAuC,CAACN,WAAD,CAAvC,GAAuD,CAACD,SAAS,CAAC7B,SAAX,EAAsB8B,WAAtB,CAH7C;AAIrB/B,QAAAA,QAAQ,EAAE;AAJW,OAAL,CAAV,CAAR;AAMD;AACF,GAhCD,CAlLuB,CAoNvB;;;AACA3D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImD,WAAW,IAAI,CAAnB,EAAsB;AACpB,aAAOqD,UAAU,EAAjB;AACD;AACF,GAJQ,EAIN,CAAClD,YAAY,CAACK,QAAd,EAAwBL,YAAY,CAACM,SAArC,CAJM,CAAT;;AAOA,QAAM4C,UAAU,GAAG,MAAM;AACvBC,IAAAA,cAAc,GACX1C,IADH,CACSC,GAAD,IAAS;AACbpB,MAAAA,KAAK,CAACnB,oBAAN,CAA2BuC,GAA3B;AACD,KAHH,EAGKa,KAHL,CAGYC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KALH;AAMD,GAPD;;AASA,MAAI2B,cAAc,GAAG,YAAY;AAC/B,QAAI7C,SAAS,GAAG,MAAMN,YAAY,CAACM,SAAnC;AACA,WAAOA,SAAP;AACD,GAHD,CArOuB,CA2OvB;;;AACA,QAAM8C,QAAQ,GAAIpD,YAAY,CAACK,QAAd,GAA0B5C,YAA1B,GAAyCC,0BAA1D;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE6B,OAAO,CAAChB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAME,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAkC,IAAA,SAAS,EAAEgB,OAAO,CAACV,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEwE,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,aAAa,EAAE;AAA/B,KADT;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,SAAS,eAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHb;AAIE,IAAA,OAAO,EAAE7D,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CANF,eAkBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,MAAxB;AAA+B,IAAA,cAAc,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,KAAK,EAAE;AAAEV,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEO,OAAO,CAACT,GAAxB;AAA6B,IAAA,GAAG,EAAEhB,OAAlC;AAA2C,IAAA,GAAG,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAFF,eASE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,aAAa,EAAC,QAFhB;AAGE,IAAA,cAAc,EAAC,QAHjB;AAIE,IAAA,UAAU,EAAC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASG0B,aAAa,gBACZ,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEwC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,gBAKZ,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAiBE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvD,YAAY,CAACI,QAAb,CAAsBoD,cAAtB,CAAqCC,SAAS,CAACC,QAA/C,EAAyD;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAAzD,CADH,CAjBF,CADF,CATF,CADF,CAlBF,eAsDE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,aAAa,EAAC,QAFhB;AAGE,IAAA,cAAc,EAAC,QAHjB;AAIE,IAAA,UAAU,EAAC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,KAAK,EAAE;AAAE5E,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEO,OAAO,CAACT,GAAxB;AAA6B,IAAA,GAAG,EAAEhB,OAAlC;AAA2C,IAAA,GAAG,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAPF,eAeE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,IAAA,KAAK,EAAE;AAAE8F,MAAAA,MAAM,EAAE;AAAV,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtE,KAAK,CAACuE,SAAN,CAAgB,cAAhB,CADH,CADF,CAfF,eAqBE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGrE,aAAa,gBACZ,oBAAC,MAAD;AACE,IAAA,SAAS,eAAE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEE,IAAA,KAAK,EAAE;AAAE8D,MAAAA,aAAa,EAAE;AAAjB,KAFT;AAGE,IAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADY,gBASV,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,eAAE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEE,IAAA,KAAK,EAAE;AAAEA,MAAAA,aAAa,EAAE;AAAjB,KAFT;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAEQ,eAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EASGC,gBAAgB,CAAC,QAAD,CATnB,CAZN,eAyBE,oBAAC,MAAD;AACE,IAAA,SAAS,eAAE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEE,IAAA,KAAK,EAAE;AAAET,MAAAA,aAAa,EAAE;AAAjB,KAFT;AAGE,IAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAzBF,eAiCE,oBAAC,MAAD;AACE,IAAA,SAAS,eAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEE,IAAA,KAAK,EAAE;AAAEA,MAAAA,aAAa,EAAE;AAAjB,KAFT;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAEN,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCF,CArBF,CADF,CADF,eAoEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1D,KAAK,CAACuE,SAAN,CAAgB,cAAhB,CADH,eAGE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAElF,MAAAA,UAAU,EAAE;AAAd,KADT;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CAFF,eAgBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAEY,OAAO,CAACJ,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBF,eAqBE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACL,WAAxB;AAAqC,IAAA,EAAE,EAAE,CAAzC;AAA4C,IAAA,EAAE,EAAE,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EACsC,GADtC,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,wCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,eAME,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAC2B,GAD3B,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAYI,KAAK,CAACuE,SAAN,CAAgB,OAAhB,CAAZ,CAFF,CANF,eAWE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,oBAEE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAElF,MAAAA,UAAU,EAAE;AAAd,KADT;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEW,KAAK,CAACuE,SAAN,CAAgB,cAAhB,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAXF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,eAyBE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,aAAa,EAAC,KAAlC;AAAwC,IAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AAAwB,IAAA,KAAK,EAAE;AAAEjF,MAAAA,WAAW,EAAE;AAAf,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOU,KAAK,CAACuE,SAAN,CAAgB,SAAhB,CAAP,CADF,CAFF,CAzBF,eA+BE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,aAAa,EAAC,KAAlC;AAAwC,IAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE;AAAEjF,MAAAA,WAAW,EAAE;AAAf,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOU,KAAK,CAACuE,SAAN,CAAgB,OAAhB,CAAP,CADF,CAFF,CA/BF,CArBF,eA4DE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEvE,KAAK,CAACuE,SAAN,CAAgB,MAAhB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5DF,CApEF,eAmIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,aAAa,EAAC,QAFhB;AAGE,IAAA,cAAc,EAAC,QAHjB;AAIE,IAAA,UAAU,EAAC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGrE,aAAa,gBACZ,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEwC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,gBAKZ,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAgBE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvD,YAAY,CAACI,QAAb,CAAsBoD,cAAtB,CAAqCC,SAAS,CAACC,QAA/C,EAAyD;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAAzD,CADH,CAhBF,CADF,CAFF,CAnIF,CAtDF,CADF;AAsND;;AAEDtE,QAAQ,CAAC2E,SAAT,GAAqB;AACnB9F,EAAAA,oBAAoB,EAAED,SAAS,CAACgG,IAAV,CAAeC,UADlB;AAEnB9F,EAAAA,mBAAmB,EAAEH,SAAS,CAACgG,IAAV,CAAeC,UAFjB;AAInB/F,EAAAA,oBAAoB,EAAEF,SAAS,CAACgG,IAAV,CAAeC;AAJlB,CAArB;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClC5E,EAAAA,aAAa,EAAE4E,KAAK,CAACC,IAAN,CAAW7E,aADQ;AAElCuC,EAAAA,iBAAiB,EAAEqC,KAAK,CAACC,IAAN,CAAWC,WAFI;AAGlCxC,EAAAA,UAAU,EAAEsC,KAAK,CAACG,IAAN,CAAWC;AAHW,CAAZ,CAAxB;;AAMA,MAAMC,iBAAiB,GAAG;AACxBvG,EAAAA,oBADwB;AAExBE,EAAAA,mBAFwB;AAIxBD,EAAAA;AAJwB,CAA1B;AAOA,eAAexB,OAAO,CAACwH,eAAD,EAAkBM,iBAAlB,CAAP,CAA4CpF,QAA5C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Link from \"@material-ui/core/Link\";\n//icons\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport PhoneOutlinedIcon from \"@material-ui/icons/PhoneOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@material-ui/icons/ErrorOutlineOutlined\";\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\n\n//images\nimport hospImg from \"../../img/results/pantaihospital.png\";\n\n//components\nimport CovidAlert from \"../Alert\";\nimport HospTags from \"./HospTags\";\n\nimport PropTypes from \"prop-types\";\n\nimport { changeHospLikeStatus, changeHospSaveStatus } from \"../../redux/actions/userActions\";\nimport { updateHospitalLikes } from \"../../redux/actions/dataActions\";\n\n\n// ～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～\n// ～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～\n// \"hospital tags\" used in this js is actually referred to the tags attached to a specialty in this hospital\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\nconst useStyles = makeStyles((theme) => ({\n  covidBox: {\n    marginTop: 64,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 20,\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  //return to hospital button\n  returnBox: {\n    marginLeft: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 20,\n    },\n  },\n\n  //hospital image\n  img: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"contain\",\n  },\n\n  profileGrid: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 20,\n      marginRight: 20,\n    },\n  },\n\n  line: {\n    [theme.breakpoints.down(\"xs\")]: {\n      border: \"5px solid rgba(0, 0, 0, 0.05)\",\n    },\n  },\n}));\n\n//for hospital image + basic info + likes\n//edit tags section is imported from HospTags.js\n\nfunction HospInfo(props) {\n  const classes = useStyles();\n  const authenticated = props.authenticated;\n\n  const backToRes = () => {\n    if (props.history != null) {\n      if (props.backTo == \"resultsPage\") {\n        props.history.push(\"/results\");\n      } else if (props.backTo == \"profilePage\") {\n        props.history.push(\"/hospprofile\");\n      }\n    }\n  };\n\n  const [renderCount, setRenderCount] = React.useState(0);\n\n  const [likeSaveInfo, setState] = React.useState({\n    hasLiked: false,\n    likedList: [],\n    numLikes: 0,\n\n    // save functionality\n    hasSaved: false,\n    savedList: []\n  });\n\n  // only get called once in the first render\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredData()\n      .then((res) => {\n        // like\n        let listOfLikes;\n        let liked = false;\n\n        // if the user has never liked any hospitals\n        if (!res[1].likeHistory) {\n          listOfLikes = [];\n        } else {\n          if (res[1].likeHistory.hospitals) {\n            listOfLikes = res[1].likeHistory.hospitals;\n            // if the user has liked this particular hospital before\n            const index = res[1].likeHistory.hospitals.findIndex(hospital => hospital.name == \"Pantai Hospital Kuala Lumpur\");\n            if (index != -1) {\n              liked = true;\n            }\n          } else {\n            listOfLikes = [];\n          }\n        }\n\n        // save\n        let listOfSaves;\n        let saved = false;\n\n        // if the user has never saved any hospitals\n        if (!res[1].saved) {\n          listOfSaves = [];\n        } else {\n          if (res[1].saved.hospitals) {\n            listOfSaves = res[1].saved.hospitals;\n            // if the user has saved this particular hospital before\n            const index = res[1].saved.hospitals.findIndex(hospital => hospital.username == \"Pantai Hospital Kuala Lumpur\")\n            if (index != -1) {\n              saved = true;\n            }\n          } else {\n            listOfSaves = [];\n          }\n        }\n\n\n        setState({\n          hasLiked: liked,\n          likedList: listOfLikes,\n          numLikes: res[0].likes ? res[0].likes : 0,\n\n          hasSaved: saved,\n          savedList: listOfSaves,\n        });\n\n        setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  // wait for returned props from firebase to be ready\n  let getStoredData = async () => {\n    let [storedSearchInfo, userStoredCredentials] =\n      await Promise.all([props.searchInfo, props.storedCredentials]);\n    return [storedSearchInfo, userStoredCredentials];\n  }\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LIKE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // when the like button is pressed\n  const toggleLikeUnlike = () => {\n    // the user has liked this hospital before\n    if (likeSaveInfo.hasLiked) {\n      let likedListCopy = likeSaveInfo.likedList;\n      let index = likedListCopy.findIndex(hospital => hospital.name == \"Pantai Hospital Kuala Lumpur\");\n      // remove this hospital from the user like list\n      likedListCopy.splice(index, 1);\n      setState(prevState => ({\n        ...likeSaveInfo,\n        likedList: likedListCopy,\n        // change to unlike\n        hasLiked: false,\n        numLikes: prevState.numLikes - 1\n      }))\n    } else {\n      const newHospInfo = {\n        name: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        address: \"8, Jalan Bukit Pantai 59100 Kuala Lumpur, 92310\",\n        likes: likeSaveInfo.numLikes,\n        phone: \"206-123-4567\",\n        relatedSpecialty: \"Gastroenterology\",\n        type: \"Private\"\n      };\n\n      setState(prevState => ({\n        // add to the list if the list contains other hospitals, otherwise use this hospital to start a list\n        ...likeSaveInfo,\n        likedList: (likeSaveInfo.likedList.length == 0) ? [newHospInfo] : [prevState.likedList, newHospInfo],\n        hasLiked: true,\n        numLikes: prevState.numLikes + 1\n      }))\n    }\n  }\n\n\n  // triggered if the like button is pressed (which sets state)\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleLike();\n    }\n  }, [likeSaveInfo.hasLiked, likeSaveInfo.likedList]);\n\n\n  const toggleLike = () => {\n    waitLikeUpdate()\n      .then((res) => {\n        props.changeHospLikeStatus(res[0]);\n        const updateInfo = {\n          specialty: \"Gastroenterology\",\n          hospital: \"Pantai Hospital Kuala Lumpur\",\n          likes: res[1]\n        }\n        props.updateHospitalLikes(updateInfo)\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  let waitLikeUpdate = async () => {\n    let [likedList, likes] =\n      await Promise.all([likeSaveInfo.likedList, likeSaveInfo.numLikes]);\n    return [likedList, likes];\n  }\n\n\n  // if the user has liked this hospital before: filled heart, otherwise outlined heart\n  const LikeIcon = (likeSaveInfo.hasLiked) ? FavoriteIcon : FavoriteBorderOutlinedIcon;\n\n\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SAVE FUNCTIONALITY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // when the save button is pressed\n  const toggleSaveUnsave = () => {\n    // the user has saved this hospital before\n    if (likeSaveInfo.hasSaved) {\n      let savedListCopy = likeSaveInfo.savedList;\n      let index = savedListCopy.findIndex(hospital => hospital.username == \"Pantai Hospital Kuala Lumpur\");\n      // remove this hospital from the user saved list\n      savedListCopy.splice(index, 1);\n\n      setState({\n        ...likeSaveInfo,\n        savedList: savedListCopy,\n        hasSaved: false,\n      })\n    } else {\n      // the newly saved hospital's information to be added to the user's saved hospital list\n      const newHospInfo = {\n        name: \"Pantai Hospital Kuala Lumpur\",\n        imgSrc: \"\",\n        address: \"8, Jalan Bukit Pantai 59100 Kuala Lumpur, 92310\",\n        likes: likeSaveInfo.numLikes,\n        phone: \"206-123-4567\",\n        relatedSpecialty: \"Gastroenterology\",\n        type: \"Private\"\n      };\n\n      setState(prevState => ({\n        // add to the list if the list contains other hospitals, otherwise use this hospital to start a list\n        ...likeSaveInfo,\n        savedList: (likeSaveInfo.savedList.length == 0) ? [newHospInfo] : [prevState.savedList, newHospInfo],\n        hasSaved: true,\n      }))\n    }\n  }\n\n  // triggered if the save button is pressed (which sets state)\n  useEffect(() => {\n    if (renderCount == 1) {\n      return toggleSave();\n    }\n  }, [likeSaveInfo.hasSaved, likeSaveInfo.savedList]);\n\n\n  const toggleSave = () => {\n    waitSaveUpdate()\n      .then((res) => {\n        props.changeHospSaveStatus(res);\n      }).catch((error) => {\n        console.error(error);\n      });\n  }\n\n  let waitSaveUpdate = async () => {\n    let savedList = await likeSaveInfo.savedList;\n    return savedList;\n  }\n\n\n  // if the user has saved this doctor before: filled bookmark, otherwise outlined bookmark\n  const SaveIcon = (likeSaveInfo.hasSaved) ? BookmarkIcon : BookmarkBorderOutlinedIcon;\n\n\n\n\n\n\n\n\n\n  return (\n    <div>\n      <div className={classes.covidBox}>\n        <CovidAlert />\n      </div>\n\n      {/* For 'return to hospitals' button (需要换成return to doctors， depending on user之前是怎么搜的) */}\n      <Box display=\"flex\" mt={3} mb={3} className={classes.returnBox}>\n        <Button\n          style={{ fontSize: 16, textTransform: \"none\" }}\n          color=\"primary\"\n          startIcon={<ArrowBackIosIcon />}\n          onClick={backToRes}\n        >\n          Return to Hospitals\n        </Button>\n      </Box>\n\n      {/* 手机屏幕才会出现的格式：hospital照片在上面 ，like icon 在右上角*/}\n      <Hidden smUp>\n        <Grid container display=\"flex\" justifyContent=\"center\">\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6} align=\"center\">\n            {/* hospital image */}\n            <div style={{ width: 150, height: 180 }}>\n              <img className={classes.img} src={hospImg} alt=\"hospimg\" />\n            </div>\n          </Grid>\n          {/* Like icon + number of likes */}\n          <Grid item xs={3}>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              {/* 如果登入了，爱心icon成了iconButton，可以点 , 但是我没写logic, 目前点了的话，这个button不会从\n              <FavoriteBorderOutlinedIcon> 换成<FavoriteIcon>, likeCount也不会增加，麻烦你了\n              */}\n              {authenticated ? (\n                <IconButton onClick={toggleLikeUnlike}>\n                  <LikeIcon style={{ color: \"red\" }} />\n                </IconButton>\n              ) : (\n                <FavoriteIcon style={{ color: \"red\" }} />\n              )}\n              {/* like count */}\n              <Typography variant=\"body2\" color=\"primary\">\n                {likeSaveInfo.numLikes.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Hidden>\n\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={5} md={4}>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            {/* 大屏幕会出现的格式：hospital照片在左边 */}\n            <Hidden xsDown>\n              {/* hospital image */}\n              <div style={{ width: 200, height: 250 }}>\n                <img className={classes.img} src={hospImg} alt=\"hospimg\" />\n              </div>\n            </Hidden>\n\n            {/* 手机屏幕出现的格式：hospital name 在照片下面 */}\n            <Hidden smUp>\n              <Typography variant=\"h5\" color=\"primary\" style={{ margin: 20 }}>\n                {props.targetHos[\"HospitalName\"]}\n              </Typography>\n            </Hidden>\n\n            <Box display=\"flex\" mt={2}>\n              {/* report button */}\n              \n              {authenticated ? (\n                <Button\n                  startIcon={<ErrorOutlineOutlinedIcon />}\n                  style={{ textTransform: \"none\" }}\n                  color=\"primary\"\n                >\n                  Report\n              </Button>\n              ) : (\n                  <Fragment>\n                    <Button\n                      startIcon={<ErrorOutlineOutlinedIcon />}\n                      style={{ textTransform: \"none\" }}\n                      color=\"primary\"\n                      onClick={handleLoginOpen}\n                    >\n                      Report\n                </Button>\n                    {signUpInDialogue(\"report\")}\n                  </Fragment>\n                )}\n              {/* share button */}\n              <Button\n                startIcon={<ShareOutlinedIcon />}\n                style={{ textTransform: \"none\" }}\n                color=\"primary\"\n              >\n                Share\n              </Button>\n              {/* save button */}\n              <Button\n                startIcon={<SaveIcon />}\n                style={{ textTransform: \"none\" }}\n                color=\"primary\"\n                onClick={toggleSaveUnsave}\n              >\n                Save\n              </Button>\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={6}>\n          {/* 大屏幕会出现的格式：hospital name 在右边 */}\n          <Hidden xsDown>\n            <Typography variant=\"h5\" color=\"primary\">\n              {props.targetHos[\"HospitalName\"]}\n              {/* private tag */}\n              <Chip\n                style={{ marginLeft: 10 }}\n                color=\"primary\"\n                size=\"small\"\n                label=\"Private\"\n              ></Chip>\n            </Typography>\n          </Hidden>\n\n          {/* 手机幕会出现的格式：灰色比较粗的divider line */}\n          <Hidden smUp>\n            <hr className={classes.line}></hr>\n          </Hidden>\n\n          {/* hospital basic info */}\n          <Box className={classes.profileGrid} mt={3} mb={3}>\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Official website: </strong>{\" \"}\n              <Link href=\"https://www.pantai.com.my/kuala-lumpur\">Link</Link>\n            </Typography>\n\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              <strong>Hours: </strong>{\" \"}\n              <span>Open {props.targetHos[\"Hours\"]}</span>\n            </Typography>\n\n            <Hidden smUp>\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <strong>Hospital Type: </strong> {/* private tag */}\n                <Chip\n                  style={{ marginLeft: 10 }}\n                  color=\"primary\"\n                  size=\"small\"\n                  label={props.targetHos[\"HospitalType\"]}\n                ></Chip>\n              </Typography>\n            </Hidden>\n\n            <br></br>\n\n            <Box display=\"flex\" flexDirection=\"row\" mt={1}>\n              <LocationOnOutlinedIcon style={{ marginRight: 10 }} />\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <span>{props.targetHos[\"Address\"]}</span>\n              </Typography>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\" mt={1}>\n              <PhoneOutlinedIcon style={{ marginRight: 10 }} />\n              <Typography variant=\"body1\" color=\"textPrimary\">\n                <span>{props.targetHos[\"Phone\"]}</span>\n              </Typography>\n            </Box>\n          </Box>\n          {/* edit Tag component (imported from HospTag.js) */}\n          <HospTags tagInfo={props.targetHos[\"Tags\"]} />\n        </Grid>\n\n        <Grid item xs={12} sm={1} md={2}>\n          {/* 大屏幕会出现的格式：like icon在最右边 */}\n          <Hidden xsDown>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              {/* 如果登入了，爱心icon成了iconButton，可以点 , 但是我没写logic, 目前点了的话，这个button不会从\n              <FavoriteBorderOutlinedIcon> 换成<FavoriteIcon>, likeCount也不会增加，麻烦你了\n              */}\n              {authenticated ? (\n                <IconButton onClick={toggleLikeUnlike}>\n                  <LikeIcon style={{ color: \"red\" }} />\n                </IconButton>\n              ) : (\n                <FavoriteIcon style={{ color: \"red\" }} />\n              )}\n              <Typography variant=\"body2\" color=\"primary\">\n                {likeSaveInfo.numLikes.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}\n              </Typography>\n            </Box>\n          </Hidden>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nHospInfo.propTypes = {\n  changeHospLikeStatus: PropTypes.func.isRequired,\n  updateHospitalLikes: PropTypes.func.isRequired,\n\n  changeHospSaveStatus: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.user.authenticated,\n  storedCredentials: state.user.credentials,\n  searchInfo: state.data.searchInfoHospital\n});\n\nconst mapActionsToProps = {\n  changeHospLikeStatus,\n  updateHospitalLikes,\n\n  changeHospSaveStatus\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(HospInfo);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/andychenhe/Desktop/mydoc_25/src/Components/home/SearchTabs.js\";\nimport React from \"react\"; // material ui\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nconst useStyles = makeStyles(theme => ({\n  inputRoot: {\n    \"& .MuiFilledInput-root\": {\n      backgroundColor: \"rgba(255,255,255)\",\n      borderRadius: 4\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      variant: \"outline\"\n    }\n  },\n  tabContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }\n})); //filter specialty\n\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.specialty\n}); //filter doctor\n\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.name\n}); //filter hospital\n\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.hospName\n}); //filter condition\n\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: option => option.condition\n}); // specialties options\n\nconst specialties = [{\n  specialty: \"Allergy and Immunology\"\n}, {\n  specialty: \"Anesthesiology\"\n}, {\n  specialty: \"Gastroenterology\"\n}]; // doctor name options\n\nconst docNames = [{\n  name: \"Alex Leow\"\n}, {\n  name: \"Alex Tan\"\n}, {\n  name: \"Bryan Lee\"\n}]; // hospital options\n\nconst hospNames = [{\n  hospName: \"Pantai Hospital Kuala Lumpur\"\n}, {\n  hospName: \"Sunway Medical\"\n}]; // Conditions options\n\nconst conditions = [{\n  condition: \"Fever\"\n}, {\n  condition: \"Headache\"\n}];\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props;\n  return value === index && /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, children);\n}\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\"\n    }\n  }\n})(props => /*#__PURE__*/React.createElement(Tabs, Object.assign({}, props, {\n  TabIndicatorProps: {\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 63\n      }\n    })\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 15\n  }\n})));\nconst StyledTab = withStyles(theme => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"1em\",\n    marginTop: 10,\n    \"&:focus\": {\n      opacity: 1\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"0.75em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"0.7em\"\n    }\n  }\n}))(props => /*#__PURE__*/React.createElement(Tab, Object.assign({\n  disableRipple: true\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 16\n  }\n}))); // Search Box for Specialty, Doctor, Hospital, Condition\n\nexport default function SearchTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleSearchMethodChange = (event, newValue) => {\n    let method = '';\n\n    if (newValue == 0) {\n      method = 'Specialty';\n    } else if (newValue == 1) {\n      method = 'Doctor';\n    } else if (newValue == 2) {\n      method = 'Hospital';\n    } else {\n      method = 'Condition';\n    }\n\n    setValue(newValue);\n    props.getSearchMethod(method);\n  };\n\n  const handleSpecialtySearchKeyChange = (event, newValue) => {\n    if (newValue) {\n      props.setSearchMethod('S');\n      props.getKeyWords(newValue.specialty);\n    }\n  };\n\n  const handleDoctorSearchKeyChange = (event, newValue) => {\n    if (newValue) {\n      props.getKeyWords(newValue.name);\n    }\n  };\n\n  const handleHospitalSearchKeyChange = (event, newValue) => {\n    if (newValue) {\n      props.getKeyWords(newValue.hospName);\n    }\n  };\n\n  const handleConditionSearchKeyChange = (event, newValue) => {\n    if (newValue) {\n      props.getKeyWords(newValue.condition);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledTabs, {\n    value: value,\n    onChange: handleSearchMethodChange,\n    \"aria-label\": \"search tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Specialty\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Doctor\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Hospital\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"Condition\",\n    style: {\n      minWidth: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: handleSpecialtySearchKeyChange,\n    options: specialties,\n    getOptionLabel: option => option.specialty,\n    filterOptions: filterSpecialtyOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by specialty\",\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: handleDoctorSearchKeyChange,\n    options: docNames,\n    getOptionLabel: option => option.name,\n    filterOptions: filterDocOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by doctor's name\",\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: handleHospitalSearchKeyChange,\n    options: hospNames,\n    getOptionLabel: option => option.hospName,\n    filterOptions: filterHospOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by hospital's name\",\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: handleConditionSearchKeyChange,\n    options: conditions,\n    getOptionLabel: option => option.condition,\n    filterOptions: filterConditionOptions,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search by medical condition\",\n      variant: \"filled\",\n      className: classes.inputRoot,\n      InputProps: { ...params.InputProps,\n        disableUnderline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/andychenhe/Desktop/mydoc_25/src/Components/home/SearchTabs.js"],"names":["React","withStyles","makeStyles","Tabs","Tab","Box","TextField","Autocomplete","createFilterOptions","useStyles","theme","inputRoot","backgroundColor","borderRadius","breakpoints","down","variant","tabContainer","display","flexDirection","justifyContent","alignItems","filterSpecialtyOptions","matchFrom","stringify","option","specialty","filterDocOptions","name","filterHospOptions","hospName","filterConditionOptions","condition","specialties","docNames","hospNames","conditions","TabPanel","props","children","value","index","StyledTabs","indicator","width","StyledTab","root","textTransform","color","fontWeight","fontSize","marginTop","opacity","SearchTabs","classes","setValue","useState","handleSearchMethodChange","event","newValue","method","getSearchMethod","handleSpecialtySearchKeyChange","setSearchMethod","getKeyWords","handleDoctorSearchKeyChange","handleHospitalSearchKeyChange","handleConditionSearchKeyChange","minWidth","params","InputProps","disableUnderline"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// material ui\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    \"& .MuiFilledInput-root\": {\n      backgroundColor: \"rgba(255,255,255)\",\n      borderRadius: 4,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      variant: \"outline\",\n    },\n  },\n\n  tabContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  },\n}));\n\n//filter specialty\nconst filterSpecialtyOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.specialty,\n});\n\n//filter doctor\nconst filterDocOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.name,\n});\n\n//filter hospital\nconst filterHospOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.hospName,\n});\n\n//filter condition\nconst filterConditionOptions = createFilterOptions({\n  matchFrom: \"start\",\n  stringify: (option) => option.condition,\n});\n\n// specialties options\nconst specialties = [\n  { specialty: \"Allergy and Immunology\" },\n  { specialty: \"Anesthesiology\" },\n  { specialty: \"Gastroenterology\" },\n];\n// doctor name options\nconst docNames = [\n  { name: \"Alex Leow\" },\n  { name: \"Alex Tan\" },\n  { name: \"Bryan Lee\" },\n];\n// hospital options\nconst hospNames = [\n  { hospName: \"Pantai Hospital Kuala Lumpur\" },\n  { hospName: \"Sunway Medical\" },\n];\n// Conditions options\nconst conditions = [{ condition: \"Fever\" }, { condition: \"Headache\" }];\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n  return value === index && <Box mt={2}>{children}</Box>;\n}\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > div\": {\n      width: \"100%\",\n      backgroundColor: \"#FF8686\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: \"1em\",\n    marginTop: 10,\n    \"&:focus\": {\n      opacity: 1,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"0.75em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"0.7em\",\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\n// Search Box for Specialty, Doctor, Hospital, Condition\nexport default function SearchTabs(props) {\n  const classes = useStyles();\n\n\n  const [value, setValue] = React.useState(0);\n\n  const handleSearchMethodChange = (event, newValue) => {\n    let method = '';\n    if(newValue == 0){\n      method = 'Specialty';\n    } else if (newValue == 1){\n      method = 'Doctor';\n    } else if (newValue == 2){\n      method = 'Hospital';\n    } else {\n      method = 'Condition';\n    }\n    setValue(newValue);\n    props.getSearchMethod(method);\n  };\n\n  const handleSpecialtySearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.setSearchMethod('S')\n      props.getKeyWords(newValue.specialty);\n    }\n    \n  };\n\n  const handleDoctorSearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.getKeyWords(newValue.name);\n    }\n    \n  };\n\n  const handleHospitalSearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.getKeyWords(newValue.hospName);\n    }\n    \n  };\n\n  const handleConditionSearchKeyChange = (event, newValue) => {\n    if(newValue){\n      props.getKeyWords(newValue.condition);\n    }\n    \n  };\n\n  return (\n    <div>\n      <div className={classes.tabContainer}>\n        <StyledTabs\n          value={value}\n          onChange={handleSearchMethodChange}\n          aria-label=\"search tabs\"\n        >\n          <StyledTab label=\"Specialty\" style={{ minWidth: 10 }} />\n          <StyledTab label=\"Doctor\" style={{ minWidth: 10 }} />\n          <StyledTab label=\"Hospital\" style={{ minWidth: 10 }} />\n          <StyledTab label=\"Condition\" style={{ minWidth: 10 }} />\n        </StyledTabs>\n      </div>\n\n      {/* autocomplete: search by specialty */}\n      <TabPanel value={value} index={0}>\n        <Autocomplete\n          onChange = {handleSpecialtySearchKeyChange}\n          options={specialties}\n          getOptionLabel={(option) => option.specialty}\n          filterOptions={filterSpecialtyOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by specialty\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by doctor's namey */}\n      <TabPanel value={value} index={1}>\n        <Autocomplete\n          onChange = {handleDoctorSearchKeyChange}\n          options={docNames}\n          getOptionLabel={(option) => option.name}\n          filterOptions={filterDocOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by doctor's name\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by hospital's name */}\n      <TabPanel value={value} index={2}>\n        <Autocomplete\n          onChange = {handleHospitalSearchKeyChange}\n          options={hospNames}\n          getOptionLabel={(option) => option.hospName}\n          filterOptions={filterHospOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by hospital's name\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n\n      {/* autocomplete: search by condition */}\n      <TabPanel value={value} index={3}>\n        <Autocomplete\n          onChange = {handleConditionSearchKeyChange}\n          options={conditions}\n          getOptionLabel={(option) => option.condition}\n          filterOptions={filterConditionOptions}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by medical condition\"\n              variant=\"filled\"\n              className={classes.inputRoot}\n              InputProps={{ ...params.InputProps, disableUnderline: true }}\n            />\n          )}\n        />\n        <br></br>\n      </TabPanel>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
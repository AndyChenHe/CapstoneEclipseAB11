{"ast":null,"code":"var _jsxFileName = \"/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/results/SearchResults.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Hidden from \"@material-ui/core/Hidden\"; // components\n\nimport CovidAlert from \"../Alert\";\nimport DocCard from \"./DocCard\";\nimport HospitalCard from \"./HospitalCard\";\nimport { HospitalType, Languages, YearsOfPractice, Location } from \"./FiltersFunctions\";\nimport { FilterButtonPhone } from \"./FiltersUI_Phone\";\nimport { withStyles } from \"@material-ui/core/styles\"; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: \"flex\",\n//     height: \"100vh\",\n//   },\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 1,\n//   },\n//   drawer: {\n//     width: 240,\n//     flexShrink: 0,\n//   },\n//   drawerPaper: {\n//     width: 240,\n//   },\n//   drawerContainer: {\n//     overflow: \"auto\",\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing(3),\n//   },\n//   toggleContainer: {\n//     margin: theme.spacing(3, 0),\n//   },\n// }));\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: 240\n  },\n  drawerContainer: {\n    overflow: \"auto\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  toggleContainer: {\n    margin: theme.spacing(3, 0)\n  }\n});\n\nclass SearchResultsFilter extends Component {\n  constructor(props) {\n    super(props); //f state for display by doctor or display by hospital\n\n    this.handleDisplay = (event, display) => {\n      if (display != null) {\n        //enforce one button to be active\n        this.setState(state => ({\n          display\n        }));\n      }\n    };\n\n    this.handlePageChange = (event, page) => {\n      this.setState(state => ({\n        page\n      }));\n    };\n\n    this.state = {\n      display: \"doctor\",\n      //display by doctor as default\n      //setDisplay: \"doctor\", //display by doctor as default\n      page: 1 // page 1 as default\n      //setPage: 1, // page 1 as default\n\n    };\n  } // for Toggle between display by doctor or display by hospital.\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Drawer, {\n      className: classes.drawer,\n      variant: \"permanent\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.drawerContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      ml: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(HospitalType, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Languages, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }), this.state.display === \"doctor\" ? /*#__PURE__*/React.createElement(YearsOfPractice, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(Location, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.covidBox,\n      style: {\n        marginLeft: 30,\n        marginRight: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CovidAlert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 9,\n      lg: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, this.state.display === \"doctor\" ? /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        marginLeft: 30,\n        marginTop: 30,\n        marginBottom: 30\n      },\n      variant: \"h6\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, \"Display results by doctors\") : /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        marginLeft: 30,\n        marginTop: 30,\n        marginBottom: 30\n      },\n      variant: \"h6\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, \"Display results by hospitals\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 3,\n      lg: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.toggleContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      value: this.state.display,\n      exclusive: true,\n      onChange: this.handleDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      value: \"doctor\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 27\n      }\n    }, \"Doctor\")), /*#__PURE__*/React.createElement(ToggleButton, {\n      value: \"hospital\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"primary\",\n      style: {\n        textTransform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 27\n      }\n    }, \"Hospital\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, this.state.display === \"doctor\" ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DocCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DocCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DocCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DocCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DocCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DocCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DocCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DocCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    })) :\n    /*#__PURE__*/\n    // else render hospital cards\n    React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(HospitalCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(HospitalCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(HospitalCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      count: 10,\n      page: this.state.page,\n      onChange: this.handlePageChange,\n      shape: \"rounded\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(SearchResultsFilter); // export default function SearchResultsFilter() {\n//   const classes = useStyles();\n//   //store state - whether user clicks on display by doctor or display by hospital\n//   const [display, setDisplay] = React.useState(\"doctor\");\n//   const handleDisplay = (event, newDisplay) => {\n//     setDisplay(newDisplay);\n//   };\n//   //store state of pages\n//   const [page, setPage] = React.useState(1);\n//   const handleChange = (event, value) => {\n//     setPage(value);\n//   };\n//   return (\n//     <Fragment>\n//       <Hidden smDown>\n//         <div className={classes.root}>\n//           <Drawer\n//             className={classes.drawer}\n//             variant=\"permanent\"\n//             classes={{\n//               paper: classes.drawerPaper,\n//             }}\n//           >\n//             <Toolbar />\n//             {/* For filter sidebar */}\n//             <div className={classes.drawerContainer}>\n//               <Box\n//                 display=\"flex\"\n//                 flexDirection=\"column\"\n//                 justifyContent=\"center\"\n//                 ml={8}\n//               >\n//                 <br></br>\n//                 <br></br>\n//                 <HospitalType />\n//                 <br></br>\n//                 <br></br>\n//                 <Languages />\n//                 <br></br>\n//                 <br></br>\n//                 {/* If display by doctor, filter sidebar will show years of practice;\n//             if display by hospital, filter sidebar will show location */}\n//                 {display === \"doctor\" ? <YearsOfPractice /> : <Location />}\n//               </Box>\n//             </div>\n//           </Drawer>\n//           <main className={classes.content}>\n//             <Toolbar />\n//             {/* Covid Alert */}\n//             <div\n//               className={classes.covidBox}\n//               style={{ marginLeft: 30, marginRight: 30 }}\n//             >\n//               <CovidAlert />\n//             </div>\n//             {/* Search result content starts here */}\n//             <Grid container spacing={0}>\n//               <Grid item sm={9} lg={10}>\n//                 {/* if user clicks on 'doctor' button, then render 'display results by doctors; else 'display results by hospitals'*/}\n//                 {display === \"doctor\" ? (\n//                   <Typography\n//                     style={{ marginLeft: 30, marginTop: 30, marginBottom: 30 }}\n//                     variant=\"h6\"\n//                     color=\"primary\"\n//                   >\n//                     Display results by doctors\n//                   </Typography>\n//                 ) : (\n//                   <Typography\n//                     style={{ marginLeft: 30, marginTop: 30, marginBottom: 30 }}\n//                     variant=\"h6\"\n//                     color=\"primary\"\n//                   >\n//                     Display results by hospitals\n//                   </Typography>\n//                 )}\n//               </Grid>\n//               <Grid item sm={3} lg={2}>\n//                 {/* Display by Doctor/Hospital buttons */}\n//                 <Fragment>\n//                   <div className={classes.toggleContainer}>\n//                     <ToggleButtonGroup\n//                       value={display}\n//                       exclusive\n//                       onChange={handleDisplay}\n//                     >\n//                       <ToggleButton value=\"doctor\" color=\"primary\">\n//                         <Typography\n//                           color=\"primary\"\n//                           style={{ textTransform: \"none\" }}\n//                         >\n//                           Doctor\n//                         </Typography>\n//                       </ToggleButton>\n//                       <ToggleButton value=\"hospital\">\n//                         <Typography\n//                           color=\"primary\"\n//                           style={{ textTransform: \"none\" }}\n//                         >\n//                           Hospital\n//                         </Typography>\n//                       </ToggleButton>\n//                     </ToggleButtonGroup>\n//                   </div>\n//                 </Fragment>\n//               </Grid>\n//             </Grid>\n//             <div>\n//               {/* if user clicks on display by 'doctor', then render doctor cards */}\n//               {display === \"doctor\" ? (\n//                 <Fragment>\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                 </Fragment>\n//               ) : (\n//                 <Fragment>\n//                   <HospitalCard />\n//                   <HospitalCard />\n//                   <HospitalCard />\n//                 </Fragment>\n//               )}\n//             </div>\n//             {/* For pages at bottom */}\n//             <Box display=\"flex\" justifyContent=\"center\">\n//               <Pagination\n//                 count={10}\n//                 page={page}\n//                 onChange={handleChange}\n//                 shape=\"rounded\"\n//                 color=\"primary\"\n//               />\n//             </Box>\n//           </main>\n//         </div>\n//       </Hidden>\n//       <Hidden mdUp>\n//         <Grid\n//           container\n//           spacing={0}\n//           display=\"flex\"\n//           justifyContent=\"center\"\n//           alignItems=\"center\"\n//           style={{ marginTop: 20 }}\n//         >\n//           <Grid item xs={1}></Grid>\n//           <Grid item xs={5}>\n//             <FilterButtonPhone />\n//           </Grid>\n//           <Grid item xs={5}>\n//             <Grid item xs={1}></Grid>\n//             <div className={classes.toggleContainer}>\n//               <ToggleButtonGroup\n//                 value={display}\n//                 exclusive\n//                 onChange={handleDisplay}\n//               >\n//                 <ToggleButton value=\"doctor\" color=\"primary\">\n//                   <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n//                     Doctor\n//                   </Typography>\n//                 </ToggleButton>\n//                 <ToggleButton value=\"hospital\">\n//                   <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n//                     Hospital\n//                   </Typography>\n//                 </ToggleButton>\n//               </ToggleButtonGroup>\n//             </div>\n//           </Grid>\n//         </Grid>\n//         <Box\n//           display=\"flex\"\n//           flexDirection=\"column\"\n//           justifyContent=\"center\"\n//           alignItems=\"center\"\n//         >\n//           <HospitalCard />\n//         </Box>\n//       </Hidden>\n//     </Fragment>\n//   );\n// }","map":{"version":3,"sources":["/Users/eshinang/Desktop/CapstoneEclipseAB11/mydoc/src/Components/results/SearchResults.js"],"names":["React","Component","Fragment","makeStyles","Drawer","Toolbar","Typography","Box","Grid","Pagination","ToggleButton","ToggleButtonGroup","Hidden","CovidAlert","DocCard","HospitalCard","HospitalType","Languages","YearsOfPractice","Location","FilterButtonPhone","withStyles","styles","theme","root","display","height","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","toggleContainer","margin","SearchResultsFilter","constructor","props","handleDisplay","event","setState","state","handlePageChange","page","render","classes","paper","covidBox","marginLeft","marginRight","marginTop","marginBottom","textTransform"],"mappings":"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":["import React, { Component, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n// components\nimport CovidAlert from \"../Alert\";\nimport DocCard from \"./DocCard\";\nimport HospitalCard from \"./HospitalCard\";\nimport {\n  HospitalType,\n  Languages,\n  YearsOfPractice,\n  Location,\n} from \"./FiltersFunctions\";\nimport { FilterButtonPhone } from \"./FiltersUI_Phone\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: \"flex\",\n//     height: \"100vh\",\n//   },\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 1,\n//   },\n//   drawer: {\n//     width: 240,\n//     flexShrink: 0,\n//   },\n//   drawerPaper: {\n//     width: 240,\n//   },\n//   drawerContainer: {\n//     overflow: \"auto\",\n//   },\n\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing(3),\n//   },\n\n//   toggleContainer: {\n//     margin: theme.spacing(3, 0),\n//   },\n// }));\n\nconst styles = (theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 240,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  toggleContainer: {\n    margin: theme.spacing(3, 0),\n  },\n});\n\nclass SearchResultsFilter extends Component {\n  constructor(props) {\n    super(props);\n    //f state for display by doctor or display by hospital\n    this.state = {\n      display: \"doctor\", //display by doctor as default\n      //setDisplay: \"doctor\", //display by doctor as default\n\n      page: 1, // page 1 as default\n      //setPage: 1, // page 1 as default\n    };\n  }\n\n  // for Toggle between display by doctor or display by hospital.\n  handleDisplay = (event, display) => {\n    if (display != null) {\n      //enforce one button to be active\n      this.setState((state) => ({ display }));\n    }\n  };\n\n  // for Pages at bottom\n  handlePageChange = (event, page) => {\n    this.setState((state) => ({ page }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Fragment>\n        <Hidden smDown>\n          <div className={classes.root}>\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <Toolbar />\n              {/* For filter sidebar */}\n              <div className={classes.drawerContainer}>\n                <Box\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  justifyContent=\"center\"\n                  ml={8}\n                >\n                  <br></br>\n                  <br></br>\n                  <HospitalType />\n                  <br></br>\n                  <br></br>\n                  <Languages />\n                  <br></br>\n                  <br></br>\n                  {/* If display by doctor, filter sidebar will show years of practice; \n            if display by hospital, filter sidebar will show location */}\n                  {this.state.display === \"doctor\" ? (\n                    <YearsOfPractice />\n                  ) : (\n                    <Location />\n                  )}\n                </Box>\n              </div>\n            </Drawer>\n            <main className={classes.content}>\n              <Toolbar />\n              {/* Covid Alert */}\n              <div\n                className={classes.covidBox}\n                style={{ marginLeft: 30, marginRight: 30 }}\n              >\n                <CovidAlert />\n              </div>\n              {/* Search result content starts here */}\n              <Grid container spacing={0}>\n                <Grid item sm={9} lg={10}>\n                  {/* if user clicks on 'doctor' button, then render 'display results by doctors; else 'display results by hospitals'*/}\n                  {this.state.display === \"doctor\" ? (\n                    <Typography\n                      style={{\n                        marginLeft: 30,\n                        marginTop: 30,\n                        marginBottom: 30,\n                      }}\n                      variant=\"h6\"\n                      color=\"primary\"\n                    >\n                      Display results by doctors\n                    </Typography>\n                  ) : (\n                    <Typography\n                      style={{\n                        marginLeft: 30,\n                        marginTop: 30,\n                        marginBottom: 30,\n                      }}\n                      variant=\"h6\"\n                      color=\"primary\"\n                    >\n                      Display results by hospitals\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item sm={3} lg={2}>\n                  {/* Display by Doctor/Hospital buttons */}\n                  <Fragment>\n                    <div className={classes.toggleContainer}>\n                      <ToggleButtonGroup\n                        value={this.state.display}\n                        exclusive\n                        onChange={this.handleDisplay}\n                      >\n                        <ToggleButton value=\"doctor\" color=\"primary\">\n                          <Typography\n                            color=\"primary\"\n                            style={{ textTransform: \"none\" }}\n                          >\n                            Doctor\n                          </Typography>\n                        </ToggleButton>\n                        <ToggleButton value=\"hospital\">\n                          <Typography\n                            color=\"primary\"\n                            style={{ textTransform: \"none\" }}\n                          >\n                            Hospital\n                          </Typography>\n                        </ToggleButton>\n                      </ToggleButtonGroup>\n                    </div>\n                  </Fragment>\n                </Grid>\n              </Grid>\n              <div>\n                {/* if user clicks on display by 'doctor', then render doctor cards */}\n                {this.state.display === \"doctor\" ? (\n                  <Fragment>\n                    <DocCard />\n                    <DocCard />\n                    <DocCard />\n                    <DocCard />\n                    <DocCard />\n                    <DocCard />\n                    <DocCard />\n                    <DocCard />\n                  </Fragment>\n                ) : (\n                  // else render hospital cards\n                  <Fragment>\n                    <HospitalCard />\n                    <HospitalCard />\n                    <HospitalCard />\n                  </Fragment>\n                )}\n              </div>\n              {/* For pages at bottom */}\n              <Box display=\"flex\" justifyContent=\"center\">\n                <Pagination\n                  count={10}\n                  page={this.state.page}\n                  onChange={this.handlePageChange}\n                  shape=\"rounded\"\n                  color=\"primary\"\n                />\n              </Box>\n            </main>\n          </div>\n        </Hidden>\n      </Fragment>\n    );\n  }\n}\nexport default withStyles(styles)(SearchResultsFilter);\n\n// export default function SearchResultsFilter() {\n\n//   const classes = useStyles();\n\n//   //store state - whether user clicks on display by doctor or display by hospital\n//   const [display, setDisplay] = React.useState(\"doctor\");\n//   const handleDisplay = (event, newDisplay) => {\n//     setDisplay(newDisplay);\n//   };\n\n//   //store state of pages\n//   const [page, setPage] = React.useState(1);\n//   const handleChange = (event, value) => {\n//     setPage(value);\n//   };\n\n//   return (\n//     <Fragment>\n//       <Hidden smDown>\n//         <div className={classes.root}>\n//           <Drawer\n//             className={classes.drawer}\n//             variant=\"permanent\"\n//             classes={{\n//               paper: classes.drawerPaper,\n//             }}\n//           >\n//             <Toolbar />\n//             {/* For filter sidebar */}\n//             <div className={classes.drawerContainer}>\n//               <Box\n//                 display=\"flex\"\n//                 flexDirection=\"column\"\n//                 justifyContent=\"center\"\n//                 ml={8}\n//               >\n//                 <br></br>\n//                 <br></br>\n//                 <HospitalType />\n//                 <br></br>\n//                 <br></br>\n//                 <Languages />\n//                 <br></br>\n//                 <br></br>\n//                 {/* If display by doctor, filter sidebar will show years of practice;\n//             if display by hospital, filter sidebar will show location */}\n//                 {display === \"doctor\" ? <YearsOfPractice /> : <Location />}\n//               </Box>\n//             </div>\n//           </Drawer>\n//           <main className={classes.content}>\n//             <Toolbar />\n//             {/* Covid Alert */}\n//             <div\n//               className={classes.covidBox}\n//               style={{ marginLeft: 30, marginRight: 30 }}\n//             >\n//               <CovidAlert />\n//             </div>\n//             {/* Search result content starts here */}\n//             <Grid container spacing={0}>\n//               <Grid item sm={9} lg={10}>\n//                 {/* if user clicks on 'doctor' button, then render 'display results by doctors; else 'display results by hospitals'*/}\n//                 {display === \"doctor\" ? (\n//                   <Typography\n//                     style={{ marginLeft: 30, marginTop: 30, marginBottom: 30 }}\n//                     variant=\"h6\"\n//                     color=\"primary\"\n//                   >\n//                     Display results by doctors\n//                   </Typography>\n//                 ) : (\n//                   <Typography\n//                     style={{ marginLeft: 30, marginTop: 30, marginBottom: 30 }}\n//                     variant=\"h6\"\n//                     color=\"primary\"\n//                   >\n//                     Display results by hospitals\n//                   </Typography>\n//                 )}\n//               </Grid>\n//               <Grid item sm={3} lg={2}>\n//                 {/* Display by Doctor/Hospital buttons */}\n//                 <Fragment>\n//                   <div className={classes.toggleContainer}>\n//                     <ToggleButtonGroup\n//                       value={display}\n//                       exclusive\n//                       onChange={handleDisplay}\n//                     >\n//                       <ToggleButton value=\"doctor\" color=\"primary\">\n//                         <Typography\n//                           color=\"primary\"\n//                           style={{ textTransform: \"none\" }}\n//                         >\n//                           Doctor\n//                         </Typography>\n//                       </ToggleButton>\n//                       <ToggleButton value=\"hospital\">\n//                         <Typography\n//                           color=\"primary\"\n//                           style={{ textTransform: \"none\" }}\n//                         >\n//                           Hospital\n//                         </Typography>\n//                       </ToggleButton>\n//                     </ToggleButtonGroup>\n//                   </div>\n//                 </Fragment>\n//               </Grid>\n//             </Grid>\n//             <div>\n//               {/* if user clicks on display by 'doctor', then render doctor cards */}\n//               {display === \"doctor\" ? (\n//                 <Fragment>\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                   <DocCard />\n//                 </Fragment>\n//               ) : (\n//                 <Fragment>\n//                   <HospitalCard />\n//                   <HospitalCard />\n//                   <HospitalCard />\n//                 </Fragment>\n//               )}\n//             </div>\n//             {/* For pages at bottom */}\n//             <Box display=\"flex\" justifyContent=\"center\">\n//               <Pagination\n//                 count={10}\n//                 page={page}\n//                 onChange={handleChange}\n//                 shape=\"rounded\"\n//                 color=\"primary\"\n//               />\n//             </Box>\n//           </main>\n//         </div>\n//       </Hidden>\n\n//       <Hidden mdUp>\n//         <Grid\n//           container\n//           spacing={0}\n//           display=\"flex\"\n//           justifyContent=\"center\"\n//           alignItems=\"center\"\n//           style={{ marginTop: 20 }}\n//         >\n//           <Grid item xs={1}></Grid>\n//           <Grid item xs={5}>\n//             <FilterButtonPhone />\n//           </Grid>\n\n//           <Grid item xs={5}>\n//             <Grid item xs={1}></Grid>\n\n//             <div className={classes.toggleContainer}>\n//               <ToggleButtonGroup\n//                 value={display}\n//                 exclusive\n//                 onChange={handleDisplay}\n//               >\n//                 <ToggleButton value=\"doctor\" color=\"primary\">\n//                   <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n//                     Doctor\n//                   </Typography>\n//                 </ToggleButton>\n//                 <ToggleButton value=\"hospital\">\n//                   <Typography color=\"primary\" style={{ textTransform: \"none\" }}>\n//                     Hospital\n//                   </Typography>\n//                 </ToggleButton>\n//               </ToggleButtonGroup>\n//             </div>\n//           </Grid>\n//         </Grid>\n//         <Box\n//           display=\"flex\"\n//           flexDirection=\"column\"\n//           justifyContent=\"center\"\n//           alignItems=\"center\"\n//         >\n//           <HospitalCard />\n//         </Box>\n//       </Hidden>\n//     </Fragment>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Michelle/Downloads/may10_michelle/src/Components/docAccount/DocAccountVerification.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CloudUploadOutlinedIcon from \"@material-ui/icons/CloudUploadOutlined\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { updateVerification } from \"../../redux/actions/userActions\";\nconst useStyles = makeStyles(theme => ({ ...theme.account\n})); // doctor account verification\n\nfunction DocAccountVerification(props) {\n  const classes = useStyles(); // determine if useEffect will be called: don't call if renderCount = 1\n\n  const [renderCount, setRenderCount] = React.useState(0); // submit success snackbar\n\n  const [open, setOpen] = React.useState(false);\n  const [currentInfo, setState] = React.useState({\n    medicalRegistrationNumber: \"\",\n    identityCardSrc: \"\",\n    identityCardName: \"\",\n    medicalDegreeSrc: \"\",\n    medicalDegreeName: \"\"\n  });\n  const [disabled, setSubmitDisable] = React.useState(true); // only call useEffect if renderCount = 0 (will be updated to 1 if stored data\n  // in firebase is successfully set to state)\n\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredData().then(res => {\n      // set state\n      setState({\n        medicalRegistrationNumber: res.medicalRegistrationNumber,\n        identityCardSrc: res.identityCardSrc,\n        identityCardName: res.identityCardName,\n        medicalDegreeSrc: res.medicalDegreeSrc,\n        medicalDegreeName: res.medicalDegreeName\n      }); // update renderCount to 1 to stop react from making any more useEffect call\n\n      setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // wait for returned props from firebase to be ready\n\n\n  let getStoredData = async () => {\n    let storedVerificationInfo = await props.storedVerificationInfo;\n    return storedVerificationInfo;\n  };\n\n  const editMedicalNumber = event => {\n    setState({ ...currentInfo,\n      medicalRegistrationNumber: event.target.value\n    });\n  };\n\n  const uploadIdentityCard = event => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n\n    reader.onload = () => {\n      setState({ ...currentInfo,\n        identityCardSrc: reader.result,\n        identityCardName: uploaded.name\n      });\n    };\n  };\n\n  const uploadMedicalDegree = event => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n\n    reader.onload = () => {\n      setState({ ...currentInfo,\n        medicalDegreeSrc: reader.result,\n        medicalDegreeName: uploaded.name\n      });\n    };\n  };\n\n  useEffect(() => {\n    if (renderCount == 1) {\n      return setDisable();\n    }\n  }, [currentInfo]);\n\n  const setDisable = () => {\n    setDisable; // call function to get data from returned props from firebase\n\n    getStoredData().then(res => {\n      // set state\n      setState({\n        medicalRegistrationNumber: res.medicalRegistrationNumber,\n        identityCardSrc: res.identityCardSrc,\n        identityCardName: res.identityCardName,\n        medicalDegreeSrc: res.medicalDegreeSrc,\n        medicalDegreeName: res.medicalDegreeName\n      }); // update renderCount to 1 to stop react from making any more useEffect call\n\n      setRenderCount(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // wait for returned props from firebase to be ready\n  // let getStoredData = async () => {\n  //   let storedVerificationInfo = await props.storedVerificationInfo;\n  //   return storedVerificationInfo;\n  // }\n  // open submit success message\n\n\n  const openSuccessMsg = () => {\n    setOpen(true);\n  };\n\n  const closeSuccessMsg = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }; // initiate push to firebase when submit button is clicked\n\n\n  const submitVerification = () => {\n    const newVerification = {\n      medicalRegistrationNumber: currentInfo[\"medicalRegistrationNumber\"],\n      identityCardSrc: currentInfo[\"identityCardSrc\"] ? currentInfo[\"identityCardSrc\"] : \" \",\n      identityCardName: currentInfo[\"identityCardName\"] ? currentInfo[\"identityCardName\"] : \" \",\n      medicalDegreeSrc: currentInfo[\"medicalDegreeSrc\"] ? currentInfo[\"medicalDegreeSrc\"] : \" \",\n      medicalDegreeName: currentInfo[\"medicalDegreeName\"] ? currentInfo[\"medicalDegreeName\"] : \" \"\n    };\n    props.updateVerification(newVerification); // open submit success message\n\n    openSuccessMsg();\n  };\n\n  if (!currentInfo.medicalRegistrationNumber) {\n    // loading spinner if prop data is not yet available\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      style: {\n        marginLeft: '45%',\n        marginTop: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      id: \"accountverification\",\n      className: classes.anchor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexDirection: \"row\",\n      mb: 1,\n      mt: 4,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Snackbar, {\n      open: open,\n      onClose: closeSuccessMsg,\n      autoHideDuration: 6000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 1,\n      variant: \"filled\",\n      severity: \"success\",\n      onClose: closeSuccessMsg,\n      style: {\n        background: \"#FF8686\",\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, \"Documents successfully submitted!\")), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      mdUp: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"docaccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      className: classes.backIcon,\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, \"Account Verification\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CancelIcon, {\n      style: {\n        color: \"red\",\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }, \"Account not verified\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      required: true,\n      label: \"Medical Registration Number\" // defaultValue={storedMedicalNum}\n      ,\n      defaultValue: currentInfo.medicalRegistrationNumber,\n      variant: \"outlined\",\n      onChange: editMedicalNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mt: 5,\n      mb: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }, \"Malaysian Identity Card\")), /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      style: {\n        display: \"none\"\n      },\n      id: \"contained-button-identity\",\n      multiple: true,\n      type: \"file\",\n      onChange: uploadIdentityCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-identity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 32\n        }\n      }),\n      variant: \"outlined\",\n      component: \"span\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 19\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, currentInfo.identityCardName), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      mt: 5,\n      mb: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, \"Certified copy of Medical Degree\")), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      style: {\n        display: \"none\"\n      },\n      id: \"contained-button-medical\",\n      multiple: true,\n      type: \"file\",\n      onChange: uploadMedicalDegree,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-medical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 32\n        }\n      }),\n      variant: \"outlined\",\n      component: \"span\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 19\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, currentInfo.medicalDegreeName), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        textTransform: \"none\",\n        float: \"right\"\n      },\n      size: \"large\",\n      onClick: submitVerification,\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }\n    })));\n  }\n}\n\nDocAccountVerification.propTypes = {\n  updateVerification: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  storedVerificationInfo: state.user.credentials.verification\n});\n\nconst mapActionsToProps = {\n  updateVerification\n};\nexport default connect(mapStateToProps, mapActionsToProps)(DocAccountVerification);","map":{"version":3,"sources":["/Users/Michelle/Downloads/may10_michelle/src/Components/docAccount/DocAccountVerification.js"],"names":["React","useEffect","makeStyles","Box","Typography","Button","Grid","TextField","Hidden","ArrowBackIosIcon","CancelIcon","CloudUploadOutlinedIcon","CircularProgress","Snackbar","MuiAlert","Link","connect","PropTypes","updateVerification","useStyles","theme","account","DocAccountVerification","props","classes","renderCount","setRenderCount","useState","open","setOpen","currentInfo","setState","medicalRegistrationNumber","identityCardSrc","identityCardName","medicalDegreeSrc","medicalDegreeName","disabled","setSubmitDisable","displayStoredData","getStoredData","then","res","catch","error","console","storedVerificationInfo","editMedicalNumber","event","target","value","uploadIdentityCard","reader","FileReader","uploaded","files","readAsDataURL","onload","result","name","uploadMedicalDegree","setDisable","openSuccessMsg","closeSuccessMsg","reason","submitVerification","newVerification","marginLeft","marginTop","anchor","background","marginRight","backIcon","color","display","textTransform","float","propTypes","func","isRequired","mapStateToProps","state","user","credentials","verification","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CloudUploadOutlinedIcon from \"@material-ui/icons/CloudUploadOutlined\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { updateVerification } from \"../../redux/actions/userActions\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.account,\n}));\n\n\n// doctor account verification\nfunction DocAccountVerification(props) {\n  const classes = useStyles();\n\n  // determine if useEffect will be called: don't call if renderCount = 1\n  const [renderCount, setRenderCount] = React.useState(0);\n  // submit success snackbar\n  const [open, setOpen] = React.useState(false);\n\n  const [currentInfo, setState] = React.useState({\n    medicalRegistrationNumber: \"\",\n    identityCardSrc: \"\",\n    identityCardName: \"\",\n    medicalDegreeSrc: \"\",\n    medicalDegreeName: \"\",\n  })\n\n  const [disabled, setSubmitDisable] = React.useState(true);\n\n\n  // only call useEffect if renderCount = 0 (will be updated to 1 if stored data\n  // in firebase is successfully set to state)\n  useEffect(() => {\n    if (renderCount == 0) {\n      return displayStoredData();\n    }\n  });\n\n  const displayStoredData = () => {\n    // call function to get data from returned props from firebase\n    getStoredData()\n      .then((res) => {\n        // set state\n        setState({\n          medicalRegistrationNumber: res.medicalRegistrationNumber,\n          identityCardSrc: res.identityCardSrc,\n          identityCardName: res.identityCardName,\n          medicalDegreeSrc: res.medicalDegreeSrc,\n          medicalDegreeName: res.medicalDegreeName,\n        })\n        // update renderCount to 1 to stop react from making any more useEffect call\n        setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  // wait for returned props from firebase to be ready\n  let getStoredData = async () => {\n    let storedVerificationInfo = await props.storedVerificationInfo;\n    return storedVerificationInfo;\n  }\n\n\n  const editMedicalNumber = (event) => {\n    setState({\n      ...currentInfo,\n      medicalRegistrationNumber: event.target.value\n    });\n  }\n\n  const uploadIdentityCard = (event) => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n    reader.onload = () => {\n      setState({\n        ...currentInfo,\n        identityCardSrc: reader.result,\n        identityCardName: uploaded.name\n      })\n    };\n  };\n\n  const uploadMedicalDegree = (event) => {\n    let reader = new FileReader();\n    let uploaded = event.target.files[0];\n    if (uploaded) {\n      reader.readAsDataURL(uploaded);\n    }\n    reader.onload = () => {\n      setState({\n        ...currentInfo,\n        medicalDegreeSrc: reader.result,\n        medicalDegreeName: uploaded.name\n      })\n    };\n  };\n\n  useEffect(() => {\n    if (renderCount == 1) {\n      return setDisable();\n    }\n  }, [currentInfo]);\n\n  const setDisable = () => {\n    setDisable\n\n\n\n    // call function to get data from returned props from firebase\n    getStoredData()\n      .then((res) => {\n        // set state\n        setState({\n          medicalRegistrationNumber: res.medicalRegistrationNumber,\n          identityCardSrc: res.identityCardSrc,\n          identityCardName: res.identityCardName,\n          medicalDegreeSrc: res.medicalDegreeSrc,\n          medicalDegreeName: res.medicalDegreeName,\n        })\n        // update renderCount to 1 to stop react from making any more useEffect call\n        setRenderCount(1);\n      }).catch((error) => {\n        console.error(error);\n      })\n  }\n\n  // wait for returned props from firebase to be ready\n  // let getStoredData = async () => {\n  //   let storedVerificationInfo = await props.storedVerificationInfo;\n  //   return storedVerificationInfo;\n  // }\n\n\n\n\n\n\n\n\n  // open submit success message\n  const openSuccessMsg = () => {\n    setOpen(true);\n  };\n\n  const closeSuccessMsg = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n\n  // initiate push to firebase when submit button is clicked\n  const submitVerification = () => {\n    const newVerification = {\n      medicalRegistrationNumber: currentInfo[\"medicalRegistrationNumber\"],\n      identityCardSrc: currentInfo[\"identityCardSrc\"] ? currentInfo[\"identityCardSrc\"] : \" \",\n      identityCardName: currentInfo[\"identityCardName\"] ? currentInfo[\"identityCardName\"] : \" \",\n      medicalDegreeSrc: currentInfo[\"medicalDegreeSrc\"] ? currentInfo[\"medicalDegreeSrc\"] : \" \",\n      medicalDegreeName: currentInfo[\"medicalDegreeName\"] ? currentInfo[\"medicalDegreeName\"] : \" \"\n    };\n    props.updateVerification(newVerification);\n  \n    // open submit success message\n    openSuccessMsg();\n  };\n\n\n  if (!currentInfo.medicalRegistrationNumber) {\n    // loading spinner if prop data is not yet available\n    return (\n      <div>\n        <CircularProgress color=\"secondary\" style={{ marginLeft: '45%', marginTop: '10%' }} />\n      </div>\n    );\n\n  } else {\n\n    return (\n      <a id=\"accountverification\" className={classes.anchor}>\n        <Grid container spacing={0}>\n          <Grid item xs={1}></Grid>\n          <Grid item xs={10} md={8}>\n            <Box flexDirection=\"row\" mb={1} mt={4} alignItems=\"center\">\n\n              <Snackbar open={open} onClose={closeSuccessMsg} autoHideDuration={6000}>\n                <MuiAlert \n                  elevation={1}\n                  variant=\"filled\"\n                  severity=\"success\"\n                  onClose={closeSuccessMsg}\n                  style={{ background: \"#FF8686\", marginLeft: 'auto', marginRight: 'auto', marginTop: '10%' }}\n                >\n                  Documents successfully submitted!\n                </MuiAlert>\n              </Snackbar>\n\n\n              <Typography variant=\"h5\" color=\"primary\">\n                {/* Back button 手机屏幕才会出玄 */}\n                <Hidden mdUp>\n                  <Link to='docaccount'>\n                    <ArrowBackIosIcon className={classes.backIcon} fontSize=\"small\"/>\n                  </Link>\n                </Hidden>\n                <strong>Account Verification</strong>\n              </Typography>\n            </Box>\n\n            <br></br>\n            <Box display=\"flex\" flexDirection=\"row\">\n              {/* 现在是ACCOUNT NOT VERIFIED, 需要换icon 如果account pending/verified */}\n              <CancelIcon style={{ color: \"red\", marginRight: 10 }} />\n              <Typography variant=\"body1\">\n                Account not verified<br></br>\n              </Typography>\n            </Box>\n            <br></br>\n            <br></br>\n            {/* Meidcal reg number */}\n            <TextField\n              fullWidth\n              required\n              label=\"Medical Registration Number\"\n              // defaultValue={storedMedicalNum}\n              defaultValue={currentInfo.medicalRegistrationNumber}\n\n              variant=\"outlined\"\n              onChange={editMedicalNumber}\n            />\n            {/* Upload malaysian identity card */}\n            <Box display=\"flex\" mt={5} mb={3}>\n              <Box flexGrow={1}>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Malaysian Identity Card\n              </Typography>\n              </Box>\n              <Box flexGrow={1}>\n                <input\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  id=\"contained-button-identity\"\n                  multiple\n                  type=\"file\"\n                  onChange={uploadIdentityCard}\n                />\n                <label htmlFor=\"contained-button-identity\">\n                  <Button\n                    startIcon={<CloudUploadOutlinedIcon />}\n                    variant=\"outlined\"\n                    component=\"span\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\", float: \"right\" }}\n                    size=\"medium\"\n                  >\n                    Upload\n              </Button>\n                </label>\n              </Box>\n            </Box>\n            {/* <Typography variant=\"body2\">{(identityCard.name == \"\") ? storedIdentityCard : identityCard.name}</Typography> */}\n            <Typography variant=\"body2\">{currentInfo.identityCardName}</Typography>\n\n\n\n\n            {/* Upload medical degree */}\n            <Box display=\"flex\" mt={5} mb={5}>\n              <Box flexGrow={1}>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Certified copy of Medical Degree\n              </Typography>\n              </Box>\n              <Box>\n                <input\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  id=\"contained-button-medical\"\n                  multiple\n                  type=\"file\"\n                  onChange={uploadMedicalDegree}\n                />\n                <label htmlFor=\"contained-button-medical\">\n                  <Button\n                    startIcon={<CloudUploadOutlinedIcon />}\n                    variant=\"outlined\"\n                    component=\"span\"\n                    color=\"primary\"\n                    style={{ textTransform: \"none\", float: \"right\" }}\n                    size=\"medium\"\n                  >\n                    Upload\n              </Button>\n                </label>\n              </Box>\n            </Box>\n            <Typography variant=\"body2\">{currentInfo.medicalDegreeName}</Typography>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ textTransform: \"none\", float: \"right\" }}\n              size=\"large\"\n              onClick={submitVerification}\n              disabled={disabled}\n            >\n              Submit\n          </Button>\n            <br></br>\n            <br></br>\n          </Grid>\n          <Grid item xs={1} md={3}></Grid>\n        </Grid>\n      </a>\n    );\n  }\n}\n\n\nDocAccountVerification.propTypes = {\n  updateVerification: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  storedVerificationInfo: state.user.credentials.verification\n});\n\nconst mapActionsToProps = {\n  updateVerification,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(DocAccountVerification);"]},"metadata":{},"sourceType":"module"}